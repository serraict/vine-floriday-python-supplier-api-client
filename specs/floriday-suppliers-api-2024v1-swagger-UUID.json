{
  "x-generator": "NSwag v14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))",
  "swagger": "2.0",
  "info": {
    "title": "Main - Floriday Suppliers API",
    "description": "ÔªøEvery endpoint requires at least the `role:app` scope and the header `X-Api-Key` populated with your given API-key. Most endpoints also require an additional scope which is listed in their descriptions.\n\n- üóù [Authorization server (staging)](https://idm.staging.floriday.io/oauth2/ausmw6b47z1BnlHkw0h7/.well-known/oauth-authorization-server)\n- üóù [Authorization server (live)](https://idm.floriday.io/oauth2/aus3testdcf2vyfs70i7/.well-known/oauth-authorization-server)\n- üìö [Documentation](https://developer.floriday.io/docs/welcome)\n- ‚ñ∂ [Coding screencast: getting started (NL)](https://www.youtube.com/watch?v=fdqzP7_Y_s8)\n\n---\n\n_The current state of this version 2024v1 is **Main**._\n* This version will be deprecated after October 2024.\n* This version will be removed after April 2025.\n\n---\n\nüîó 2023v2: [Customers API](https://api.staging.floriday.io/customers-api-2023v2/swagger/index.html) | [Suppliers API](https://api.staging.floriday.io/suppliers-api-2023v2/swagger/index.html)\nüîó 2024v1: [Customers API](https://api.staging.floriday.io/customers-api-2024v1/swagger/index.html) | [Suppliers API](https://api.staging.floriday.io/suppliers-api-2024v1/swagger/index.html)\nüîó 2024v2: [Customers API](https://api.staging.floriday.io/customers-api-2024v2/swagger/index.html) | [Suppliers API](https://api.staging.floriday.io/suppliers-api-2024v2/swagger/index.html)\n",
    "version": "2024v1"
  },
  "host": "api.staging.floriday.io",
  "basePath": "/suppliers-api-2024v1",
  "schemes": [
    "https"
  ],
  "paths": {
    "/additional-services": {
      "get": {
        "tags": [
          "AdditionalServices"
        ],
        "summary": "catalog:read - Returns overview of additional services.",
        "operationId": "GetAdditionalServices",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdditionalService"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/additional-services/{additionalServiceId}": {
      "get": {
        "tags": [
          "AdditionalServices"
        ],
        "summary": "catalog:read - Returns an additional service.",
        "operationId": "GetAdditionalServiceById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "additionalServiceId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdditionalService"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/additional-services/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "AdditionalServices"
        ],
        "summary": "catalog:read - rate limit: 3.4 per second - burst limit: 1000 - Returns a list of max 1000 additional services starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetAdditionalServiceBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limit",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfAdditionalService"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/additional-services/current-max-sequence": {
      "get": {
        "tags": [
          "AdditionalServices"
        ],
        "summary": "catalog:read - rate limit: 3.4 per second - burst limit: 1000 - Returns the maximum sequence number found in additional services.",
        "operationId": "GetAdditionalServicesMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/clock-supply-lines/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "Auction"
        ],
        "summary": "supply:read - rate limit: 3.4 per second - burst limit: 1000 - Returns a list of max 1000 clock supply lines starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetClockSupplyLinesBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfClockSupplyLine"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/clock-supply-lines/current-max-sequence": {
      "get": {
        "tags": [
          "Auction"
        ],
        "summary": "supply:read - rate limit: 3.4 per second - burst limit: 1000 - Returns the maximum sequence number found in clock supply lines.",
        "operationId": "GetClockSupplyLinesMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/clock-presales-supply-lines/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "Auction"
        ],
        "summary": "supply:read - Returns a list of max 1000 clock presales supply lines starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetClockPresalesSupplyLinesBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfClockPresalesSupplyLine"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/clock-presales-supply-lines/current-max-sequence": {
      "get": {
        "tags": [
          "Auction"
        ],
        "summary": "supply:read - rate limit: 3.4 per second - burst limit: 1000 - Returns the maximum sequence number found in clock presales supply lines.",
        "operationId": "GetClockPresalesSupplyLinesMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/clock-presales-supply-lines/{clockPresalesSupplyLineId}": {
      "get": {
        "tags": [
          "Auction"
        ],
        "summary": "supply:read - Returns a clock presales supply line.",
        "operationId": "GetClockPresalesSupplyLineById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "clockPresalesSupplyLineId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClockPresalesSupplyLine"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "put": {
        "tags": [
          "Auction"
        ],
        "summary": "sales-order:write - Updates a clock presales supply line.",
        "operationId": "EditClockPresalesSupplyLine",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "clockPresalesSupplyLineId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "editClockPresalesSupplyLine",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditClockPresalesSupplyLine"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/clock-supply-lines/{supplyLineId}": {
      "get": {
        "tags": [
          "Auction"
        ],
        "summary": "supply:read - Returns a clock supply line.",
        "operationId": "GetClockSupplyLineById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "supplyLineId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClockSupplyLine"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/clock-presales-supply-lines": {
      "post": {
        "tags": [
          "Auction"
        ],
        "summary": "supply:write - Creates a new clock presales supply line.",
        "operationId": "AddClockPresalesSupplyLine",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "addClockPresalesSupplyLine",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddClockPresalesSupplyLine"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/clock-sales-from-nursery/supply-lines": {
      "post": {
        "tags": [
          "Auction"
        ],
        "summary": "supply:write - Creates a new clock sales from nursery supply line.",
        "operationId": "AddClockSalesFromNurserySupplyLine",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "addClockSalesFromNurserySupplyLine",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddClockSalesFromNurserySupplyLine"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/clock-sales-from-nursery/supply-lines/{clockSalesFromNurserySupplyLineId}": {
      "delete": {
        "tags": [
          "Auction"
        ],
        "summary": "supply:write - Deletes a clock sales from nursery supply line.",
        "operationId": "DeleteClockSalesFromNurserySupplyLine",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "clockSalesFromNurserySupplyLineId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/base-items/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "BaseItems"
        ],
        "summary": "catalog:read - rate limit: 3.4 per second - burst limit: 1000 - Returns a list of max 1000 base items starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetBaseItemsBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfBaseItem"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/base-items/current-max-sequence": {
      "get": {
        "tags": [
          "BaseItems"
        ],
        "summary": "catalog:read - rate limit: 3.4 per second - burst limit: 1000 - Returns the maximum sequence number found in base items.",
        "operationId": "GetBaseItemsMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/base-items/{baseItemId}": {
      "get": {
        "tags": [
          "BaseItems"
        ],
        "summary": "catalog:read - Return base-items",
        "operationId": "GetBaseItemById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "baseItemId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BaseItem"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "put": {
        "tags": [
          "BaseItems"
        ],
        "summary": "catalog:write - Update a base item",
        "operationId": "EditBaseItem",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "baseItemId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "baseItem",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseItemUpdate"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "BaseItems"
        ],
        "summary": "catalog:write - Delete a base item",
        "operationId": "DeleteBaseItem",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "baseItemId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/base-items": {
      "post": {
        "tags": [
          "BaseItems"
        ],
        "summary": "catalog:write - Create a base item",
        "operationId": "AddBaseItem",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "baseItem",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseItemCreate"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/batches": {
      "get": {
        "tags": [
          "Batches"
        ],
        "summary": "fulfillment:read - rate limit: 3.4 per second - burst limit: 1000 - Returns batches.",
        "operationId": "GetBatches",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "warehouseId",
            "in": "query",
            "format": "uuid",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "minimumNumberOfPieces",
            "in": "query",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Batch"
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "post": {
        "tags": [
          "Batches"
        ],
        "summary": "fulfillment:write - rate limit: 3.4 per second - burst limit: 1000 - Creates a batch.",
        "operationId": "AddBatch",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "addBatch",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddBatch"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/batches/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "Batches"
        ],
        "summary": "fulfillment:read - rate limit: 3.4 per second - burst limit: 1000 - Returns a list of max 1000 batches starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetBatchesBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfBatch"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/batches/{batchId}": {
      "get": {
        "tags": [
          "Batches"
        ],
        "summary": "fulfillment:read - Returns a batch.",
        "operationId": "GetBatchById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "batchId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Batch"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/batches/stickers": {
      "get": {
        "tags": [
          "Batches"
        ],
        "summary": "fulfillment:read - Returns tray stickers as pdf for batches.",
        "operationId": "GetTrayLabelsAsPdfByBatchIds",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "batchIds",
            "in": "query",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "singleStickerPerBatch",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "file"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/batches/current-max-sequence": {
      "get": {
        "tags": [
          "Batches"
        ],
        "summary": "fulfillment:read - Returns the maximum sequence number found in batches.",
        "operationId": "GetBatchesMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/batches/mutations/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "Batches"
        ],
        "summary": "fulfillment:read - rate limit: 3.4 per second - burst limit: 1000 - Returns a list of max 1000 batch mutations starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour  data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetBatchMutationsBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfBatchMutation"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/batches/mutations/current-max-sequence": {
      "get": {
        "tags": [
          "Batches"
        ],
        "summary": "fulfillment:read - Returns the maximum sequence number found in batch mutations.",
        "operationId": "GetBatchMutationsMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/batches/{batchId}/quantity-corrections": {
      "put": {
        "tags": [
          "Batches"
        ],
        "summary": "fulfillment:write - rate limit: 3.4 per second - burst limit: 1000 - Update the quantity of a batch.",
        "operationId": "EditBatch",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "batchId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "correction",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuantityCorrection"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "409": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/batches/{batchId}/transform": {
      "put": {
        "tags": [
          "Batches"
        ],
        "summary": "fulfillment:write - rate limit: 3.4 per second - burst limit: 1000 - Transform a batch into a new batch with the given modifications.",
        "operationId": "TransformBatch",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "batchId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "transformBatchRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransformBatchRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/batches/combine-and-transform": {
      "post": {
        "tags": [
          "Batches"
        ],
        "summary": "fulfillment:write - rate limit: 3.4 per second - burst limit: 1000 - Merge and transform multiple existing batches into a single new batch with the given modifications.",
        "operationId": "CombineAndTransformBatches",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "combineAndTransformBatchesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CombineAndTransformBatchesRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/blanket-orders/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "BlanketOrders"
        ],
        "summary": "contract:read - rate limit: 3.4 per second - burst limit: 1000 - Returns a list of max 1000 contracts starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetBlanketOrdersBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfBlanketOrder"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/blanket-orders/current-max-sequence": {
      "get": {
        "tags": [
          "BlanketOrders"
        ],
        "summary": "contract:read - rate limit: 3.4 per second - burst limit: 1000 - Returns the maximum sequence number found in blanket orders.",
        "operationId": "GetBlanketOrdersMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/blanket-orders/{blanketOrderId}": {
      "get": {
        "tags": [
          "BlanketOrders"
        ],
        "summary": "contract:read - Returns a blanket order by id.",
        "operationId": "GetBlanketOrderById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "blanketOrderId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BlanketOrder"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "put": {
        "tags": [
          "BlanketOrders"
        ],
        "summary": "contract:write - Modifies an existing blanket order.",
        "operationId": "EditBlanketOrder",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "blanketOrderId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "editBlanketOrder",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditBlanketOrder"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "BlanketOrders"
        ],
        "summary": "contract:write - Deletes a blanket order.",
        "operationId": "DeleteBlanketOrder",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "blanketOrderId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/blanket-orders/{blanketOrderId}/approve": {
      "patch": {
        "tags": [
          "BlanketOrders"
        ],
        "summary": "contract:write - Approves a blanket order",
        "operationId": "SetBlanketOrderApproved",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "blanketOrderId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/blanket-orders": {
      "post": {
        "tags": [
          "BlanketOrders"
        ],
        "summary": "contract:write - Creates a blanket order",
        "operationId": "AddBlanketOrder",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "blanketOrder",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddBlanketOrder"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/bundled-offers/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "BundledOffers"
        ],
        "summary": "supply:read - rate limit: 3.4 per second - burst limit: 1000 - Returns a list of max 1000 Bundled offers starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetBundledOffersBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfBundledOffer"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/bundled-offers/current-max-sequence": {
      "get": {
        "tags": [
          "BundledOffers"
        ],
        "summary": "supply:read - rate limit: 3.4 per second - burst limit: 1000 - Returns the maximum sequence number found in bundled offers.",
        "operationId": "GetBundledOffersMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/bundled-offers/{bundledOfferId}": {
      "get": {
        "tags": [
          "BundledOffers"
        ],
        "summary": "supply:read - Returns a bundled offer.",
        "operationId": "GetBundledOfferById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "bundledOfferId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BundledOffer"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "put": {
        "tags": [
          "BundledOffers"
        ],
        "summary": "supply:write - update a bundled offer",
        "operationId": "EditBundledOffer",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "bundledOfferId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "editBundledOffer",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditBundledOffer"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "BundledOffers"
        ],
        "summary": "supply:write - delete a bundled offer",
        "operationId": "DeleteBundledOffer",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "bundledOfferId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/bundled-offers/by-bundled-offer-line-id": {
      "get": {
        "tags": [
          "BundledOffers"
        ],
        "summary": "supply:read - Returns a bundled offer.",
        "operationId": "GetBundledOfferByBundledOfferLineId",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "bundledOfferLineId",
            "in": "query",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BundledOffer"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/bundled-offers": {
      "post": {
        "tags": [
          "BundledOffers"
        ],
        "summary": "supply:write - creates a bundled offer.",
        "operationId": "AddBundledOffer",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "bundledOffer",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddBundledOffer"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/weekly-supply-lines": {
      "post": {
        "tags": [
          "CatalogPrices"
        ],
        "summary": "supply:write - Creates a new weekly supply line for trade item.",
        "operationId": "AddWeeklySupplyLine",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "supplyLine",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WeeklySupplyLine"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/weekly-supply-lines/{supplyLineId}": {
      "put": {
        "tags": [
          "CatalogPrices"
        ],
        "summary": "supply:write - Updates a weekly supply line for trade item.",
        "operationId": "EditWeeklySupplyLine",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "supplyLineId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "supplyLine",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WeeklySupplyLineUpdate"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "CatalogPrices"
        ],
        "summary": "supply:write - Deletes a weekly supply line.",
        "operationId": "DeleteWeeklySupplyLines",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "supplyLineId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/trade-items/base-supply/{year}/{week}": {
      "put": {
        "tags": [
          "CatalogPrices"
        ],
        "summary": "supply:write - rate limit: 10 per second - burst limit: 1000 - Generates new weekly supply lines for multiple trade items based on calculated and manual price groups.",
        "description": "After entering the base price, Floriday will create multiple supply lines based on a variety of settings within Floriday.",
        "operationId": "EditWeeklyBaseSupplyLines",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "editWeeklyBaseSupplyLines",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "maxItems": 50,
              "minItems": 1,
              "items": {
                "$ref": "#/definitions/EditWeeklyBaseSupplyLines"
              }
            },
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "year",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "week",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/trade-items/{tradeItemId}/base-supply/{year}/{week}": {
      "put": {
        "tags": [
          "CatalogPrices"
        ],
        "summary": "supply:write - rate limit: 10 per second - burst limit: 1000 - Generates new weekly supply lines based on pre-entered price groups.",
        "description": "After entering the base price, Floriday will create multiple supply lines based on a variety of settings within Floriday.",
        "operationId": "EditWeeklyBaseSupply",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "tradeItemId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "baseSupply",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WeeklyBaseSupplyCreate"
            },
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "year",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "week",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "patch": {
        "tags": [
          "CatalogPrices"
        ],
        "summary": "supply:write - rate limit: 10 per second - burst limit: 1000 - Patch the number of pieces of an existing base supply.",
        "operationId": "SetWeeklyBaseSupplyNumberOfPieces",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "tradeItemId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "year",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "week",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "numberOfPieces",
            "in": "query",
            "format": "int32",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/trade-items/base-supply": {
      "get": {
        "tags": [
          "CatalogPrices"
        ],
        "summary": "supply:read - rate limit: 1 per second - burst limit: 20 - Returns the base supply per year/week for trade items.",
        "operationId": "GetWeeklyBaseSupplies",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "year",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "week",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WeeklyBaseSupply"
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/trade-items/{tradeItemId}/continuous-stock": {
      "put": {
        "tags": [
          "CatalogPrices"
        ],
        "summary": "supply:write - rate limit: 10 per second - burst limit: 1000 - Set availabilities for a trade item",
        "operationId": "EditContinuousStock",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "tradeItemId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "continuousStock",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContinuousStock"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "get": {
        "tags": [
          "CatalogPrices"
        ],
        "summary": "supply:read - Returns the availability of a trade item.",
        "operationId": "GetContinuousStock",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "tradeItemId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ContinuousStock"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/trade-items/{tradeItemId}/warehouse": {
      "patch": {
        "tags": [
          "CatalogPrices"
        ],
        "summary": "supply:write - Add a warehouse for a trade item ( only continuous stock )",
        "operationId": "SetTradeItemWarehouse",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "tradeItemId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "warehouseId",
            "in": "query",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/trade-items/availabilities": {
      "get": {
        "tags": [
          "CatalogPrices"
        ],
        "summary": "supply:read - rate limit: 2 per second - burst limit: 200 - Returns the current availability of all trade items.",
        "operationId": "GetTradeItemAvailabilities",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeItemAvailability"
              }
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/trade-items/availabilities/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "CatalogPrices"
        ],
        "summary": "supply:read - Returns a list of max 1000 trade item availabilities starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetTradeItemAvailabilitiesBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limit",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfTradeItemAvailability"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/trade-items/availabilities/current-max-sequence": {
      "get": {
        "tags": [
          "CatalogPrices"
        ],
        "summary": "supply:read - Returns the maximum sequence number found in trade item availabilities.",
        "operationId": "GetTradeItemAvailabilitiesMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/collections/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "catalog:read - rate limit: 3.4 per second - burst limit: 1000 - Returns a list of max 1000 collections starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetCollectionsBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfCollection"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/collections/current-max-sequence": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "catalog:read - rate limit: 3.4 per second - burst limit: 1000 - Returns the maximum sequence number found in collections.",
        "operationId": "GetCollectionsMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/collections/{collectionId}": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "catalog:read - Returns an collection.",
        "operationId": "GetCollectionById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "collectionId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Collection"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Collections"
        ],
        "summary": "catalog:write - Delete a collection.",
        "operationId": "DeleteCollection",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "collectionId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "put": {
        "tags": [
          "Collections"
        ],
        "summary": "catalog:write - Update a collection.",
        "operationId": "EditCollection",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "collectionId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "collectionUpdate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CollectionUpdate"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/collections": {
      "post": {
        "tags": [
          "Collections"
        ],
        "summary": "catalog:write - Create a collection.",
        "operationId": "AddCollection",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "collectionCreate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CollectionCreate"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/collections/{collectionId}/trade-items": {
      "post": {
        "tags": [
          "Collections"
        ],
        "summary": "catalog:write - Add trade items to collection.",
        "operationId": "AddTradeItemsToCollection",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "collectionId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "collectionTradeItemIds",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CollectionTradeItemIds"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Collections"
        ],
        "summary": "catalog:write - Remove trade items from collection.",
        "operationId": "DeleteCollectionTradeItems",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "collectionId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "collectionTradeItemIds",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CollectionTradeItemIds"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/collections/{collectionId}/sort-order": {
      "patch": {
        "tags": [
          "Collections"
        ],
        "summary": "catalog:write - Set sort order for collection.",
        "operationId": "SetSortOrderForCollection",
        "parameters": [
          {
            "type": "string",
            "name": "collectionId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "sortOrder",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/commercial-service-types": {
      "get": {
        "tags": [
          "CommercialServiceTypes"
        ],
        "summary": "catalog:read - Returns overview of commercial service types",
        "operationId": "GetCommercialServiceTypes",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "languageCode",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommercialServiceType"
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/commercial-service-types/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "CommercialServiceTypes"
        ],
        "summary": "catalog:read - rate limit: 3.4 per second - burst limit: 1000 - Returns a list of max 1000 commercial service types starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetCommercialServiceTypesBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limit",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfCommercialServiceType"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/commercial-service-types/current-max-sequence": {
      "get": {
        "tags": [
          "CommercialServiceTypes"
        ],
        "summary": "catalog:read - rate limit: 3.4 per second - burst limit: 1000 - Returns the maximum sequence number found in commercial service types.",
        "operationId": "GetCommercialServiceTypesMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/connections/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "Connections"
        ],
        "summary": "network:read - rate limit: 3.4 per second - burst limit: 1000 - Returns a list of max 1000 connections starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetConnectionsBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfConnection"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/connections/current-max-sequence": {
      "get": {
        "tags": [
          "Connections"
        ],
        "summary": "network:read - rate limit: 3.4 per second - burst limit: 1000 - Returns the maximum sequence number found in connections.",
        "operationId": "GetConnectionsMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/contracts/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "contract:read - rate limit: 3.4 per second - burst limit: 1000 - Returns a list of max 100 contracts starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetContractsBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 100,
            "maximum": 100.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfContract"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/contracts/current-max-sequence": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "contract:read - rate limit: 3.4 per second - burst limit: 1000 - Returns the maximum sequence number found in contracts.",
        "operationId": "GetContractsMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/contracts/{contractId}": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "contract:read - Returns a contract.",
        "operationId": "GetContractById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "contractId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Contract"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "put": {
        "tags": [
          "Contracts"
        ],
        "summary": "contract:write - Updates a draft contract",
        "operationId": "EditContract",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "contractId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "contract",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditContract"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/contracts/attachments/{attachmentId}": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "contract:read - Returns a contract attachment.",
        "operationId": "GetContractAttachmentById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "attachmentId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "file"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/contracts": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "contract:write - Creates a draft contract",
        "operationId": "AddContract",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "contract",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddContract"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/contracts/reference/{contractReference}": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "contract:write - Creates a new version for an existing contract",
        "operationId": "AddNewContractVersion",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "contractReference",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "contract",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddContractVersion"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "put": {
        "tags": [
          "Contracts"
        ],
        "summary": "contract:write - Updates a draft contract",
        "operationId": "EditContractByReference",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "contractReference",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "contract",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditContract"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/contracts/reference/{contractReference}/finalize-contract": {
      "patch": {
        "tags": [
          "Contracts"
        ],
        "summary": "contract:write - Sets the contract status to 'FINALIZED' and offers the contract to the customer for approval.",
        "operationId": "FinalizeContractByReference",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "contractReference",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/contracts/{contractId}/finalize": {
      "patch": {
        "tags": [
          "Contracts"
        ],
        "summary": "contract:write - Sets the contract status to 'FINALIZED' and offers the contract to the customer for approval.",
        "operationId": "FinalizeContract",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "contractId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/contracts/{contractId}/approve": {
      "patch": {
        "tags": [
          "Contracts"
        ],
        "summary": "contract:write - Sets the state of the contract to 'APPROVED' if already finalized by the customer.",
        "operationId": "ApproveContract",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "contractId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/contracts/reference/{contractReference}/approve-contract": {
      "patch": {
        "tags": [
          "Contracts"
        ],
        "summary": "contract:write - Sets the state of the contract to 'APPROVED' if already finalized by the customer.",
        "operationId": "ApproveContractByReference",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "contractReference",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/contracts/{contractId}/decline": {
      "patch": {
        "tags": [
          "Contracts"
        ],
        "summary": "contract:write - Sets the state of the contract to 'DECLINED' if already finalized by the customer.",
        "operationId": "DeclineContract",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "contractId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "contractDecline",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeclineContract"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/contracts/reference/{contractReference}/decline-contract": {
      "patch": {
        "tags": [
          "Contracts"
        ],
        "summary": "contract:write - Sets the state of the contract to 'DECLINED' if already finalized by the customer.",
        "operationId": "DeclineContract2",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "contractReference",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "contractDecline",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeclineContract"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/contracts/reference/{contractReference}/request": {
      "delete": {
        "tags": [
          "Contracts"
        ],
        "summary": "contract:write - Deletes contract if contract is not yet approved. Requests delete by customer if already approved",
        "operationId": "RequestDeleteContract",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "contractReference",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/contracts/reference/{contractReference}/approve": {
      "delete": {
        "tags": [
          "Contracts"
        ],
        "summary": "contract:write - Approves contract delete request created by customer",
        "operationId": "ApproveDeleteContract",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "contractReference",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/contracts/reference/{contractReference}/decline-delete": {
      "delete": {
        "tags": [
          "Contracts"
        ],
        "summary": "contract:write - Declines contract delete request created by customer",
        "operationId": "DeclineDeleteContract",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "contractReference",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/contract-trade-item-groups/{contractTradeItemGroupId}": {
      "get": {
        "tags": [
          "ContractTradeItemGroups"
        ],
        "summary": "catalog:read - Returns an contract trade item group.",
        "operationId": "GetContractTradeItemGroupById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "contractTradeItemGroupId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ContractTradeItemGroup"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/contract-trade-item-groups/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "ContractTradeItemGroups"
        ],
        "summary": "contract:read - rate limit: 3.4 per second - burst limit: 1000 - Returns a list of max 1000 contract trade item groups starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetContractTradeItemGroupsBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limit",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfContractTradeItemGroup"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/contract-trade-item-groups/current-max-sequence": {
      "get": {
        "tags": [
          "ContractTradeItemGroups"
        ],
        "summary": "contract:read - rate limit: 3.4 per second - burst limit: 1000 - Returns the maximum sequence number found in contract trade item groups.",
        "operationId": "GetContractTradeItemGroupsMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/customer-offers": {
      "post": {
        "tags": [
          "CustomerOffers"
        ],
        "summary": "supply:write - create a customer offer",
        "operationId": "AddCustomerOffer",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "supplyLine",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddCustomerOffer"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/customer-offers/{supplyLineId}": {
      "put": {
        "tags": [
          "CustomerOffers"
        ],
        "summary": "supply:write - update a customer offer",
        "operationId": "EditCustomerOffer",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "supplyLineId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "supplyLineUpdate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditCustomerOffer"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "CustomerOffers"
        ],
        "summary": "supply:write - delete a customer offer",
        "operationId": "DeleteCustomerOffers",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "supplyLineId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/customer-stickers": {
      "get": {
        "tags": [
          "CustomerStickers"
        ],
        "summary": "sticker:read - Returns customer stickers in pdf format. Pages are duplicated based on the number of copies in the customer sticker.",
        "operationId": "GetCustomerStickerPdfByIds",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "array",
            "name": "stickerIds",
            "in": "query",
            "required": true,
            "collectionFormat": "multi",
            "x-nullable": false,
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/customer-stickers/{stickerId}": {
      "get": {
        "tags": [
          "CustomerStickers"
        ],
        "summary": "sticker:read - Returns customer sticker in pdf format",
        "operationId": "GetCustomerStickerPdfById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "stickerId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "duplicatePagesBasedOnNumberOfCopies",
            "in": "query",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/customer-stickers/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "CustomerStickers"
        ],
        "summary": "sticker:read - Returns a list of max 1000 customer stickers metadata starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetCustomerStickersBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfCustomerSticker"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/customer-stickers/current-max-sequence": {
      "get": {
        "tags": [
          "CustomerStickers"
        ],
        "summary": "sticker:read - Returns the maximum sequence number found in customer stickers.",
        "operationId": "GetCustomerStickersMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/customer-stickers/handled": {
      "patch": {
        "tags": [
          "CustomerStickers"
        ],
        "summary": "sticker:write - Indicate which stickers are printed and placed.",
        "description": "IsHandled indication will be set to true.",
        "operationId": "SetCustomerStickersIsHandled",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "array",
            "name": "stickerIds",
            "in": "query",
            "required": true,
            "collectionFormat": "multi",
            "x-nullable": false,
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/custom-packages": {
      "get": {
        "tags": [
          "CustomPackages"
        ],
        "summary": "catalog:read - Returns custom packages.",
        "operationId": "GetCustomPackages",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomPackage"
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/custom-packages/{customPackageId}": {
      "get": {
        "tags": [
          "CustomPackages"
        ],
        "summary": "catalog:read - Get a custom package.",
        "operationId": "GetCustomPackageById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "customPackageId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomPackage"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/custom-packages/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "CustomPackages"
        ],
        "summary": "catalog:read - rate limit: 3.4 per second - burst limit: 1000 - Returns a list of max 1000 custom packages starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetCustomPackagesBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limit",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfCustomPackage"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/custom-packages/current-max-sequence": {
      "get": {
        "tags": [
          "CustomPackages"
        ],
        "summary": "catalog:read - rate limit: 3.4 per second - burst limit: 1000 - Returns the maximum sequence number found in custom packages.",
        "operationId": "GetCustomPackagesMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/delivery-condition-sets": {
      "get": {
        "tags": [
          "DeliveryConditionSets"
        ],
        "summary": "delivery-conditions:read - Returns delivery condition sets.",
        "operationId": "GetDeliveryConditionSets",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryConditionSet"
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/delivery-condition-sets/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "DeliveryConditionSets"
        ],
        "summary": "delivery-conditions:read - rate limit: 3.4 per second - burst limit: 1000 - Returns a list of max 100 delivery condition sets starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetDeliveryConditionSetsBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 100,
            "maximum": 100.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfDeliveryConditionSet"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/delivery-condition-sets/current-max-sequence": {
      "get": {
        "tags": [
          "DeliveryConditionSets"
        ],
        "summary": "delivery-conditions:read - rate limit: 3.4 per second - burst limit: 1000 - Returns the maximum sequence number found in delivery condition sets.",
        "operationId": "GetDeliveryConditionSetsMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/delivery-condition-sets/{deliveryConditionSetId}": {
      "get": {
        "tags": [
          "DeliveryConditionSets"
        ],
        "summary": "delivery-conditions:read - Returns a delivery condition set.",
        "operationId": "GetDeliveryConditionSetById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "deliveryConditionSetId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeliveryConditionSet"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/delivery-locations/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "DeliveryLocations"
        ],
        "summary": "organization:read - rate limit: 2.0 per second - burst limit: 200 - Returns a list of max 1000 customer delivery locations starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetDeliveryLocationsBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfDeliveryLocation"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/delivery-locations/current-max-sequence": {
      "get": {
        "tags": [
          "DeliveryLocations"
        ],
        "summary": "organization:read - rate limit: 2.0 per second - burst limit: 200 - Returns the maximum sequence number found in warehouses.",
        "operationId": "GetDeliveryLocationMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/delivery-orders/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "DeliveryOrders"
        ],
        "summary": "fulfillment:read - rate limit: 3.4 per second - burst limit: 1000 - Returns a list of max 1000 delivery orders starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetDeliveryOrdersBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfDeliveryOrder"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/delivery-orders/current-max-sequence": {
      "get": {
        "tags": [
          "DeliveryOrders"
        ],
        "summary": "supply:read - rate limit: 3.4 per second - burst limit: 1000 - Returns the maximum sequence number found in delivery orders.",
        "operationId": "GetDeliveryOrdersMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/delivery-orders/{deliveryOrderId}": {
      "get": {
        "tags": [
          "DeliveryOrders"
        ],
        "summary": "fulfillment:read - Returns a delivery order.",
        "operationId": "GetDeliveryOrderById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "deliveryOrderId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeliveryOrder"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/delivery-orders/{deliveryOrderId}/stickers": {
      "get": {
        "tags": [
          "DeliveryOrders"
        ],
        "summary": "fulfillment:read - Returns tray stickers as pdf for a delivery order.",
        "operationId": "GetTrayLabelsAsPdfById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "deliveryOrderId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "file"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/delivery-orders/{deliveryOrderId}/goods-movement": {
      "post": {
        "tags": [
          "DeliveryOrders"
        ],
        "summary": "fulfillment:write - Create a delivery order for external warehouse.",
        "operationId": "AddDeliveryOrderGoodsMovement",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "deliveryOrderId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "deliveryOrder",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeliveryOrderGoodsMovement"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "DeliveryOrders"
        ],
        "summary": "fulfillment:write - Delete a delivery order for goods movement.",
        "operationId": "DeleteDeliveryOrderGoodsMovement",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "deliveryOrderId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/delivery-orders/{deliveryOrderId}/auction": {
      "post": {
        "tags": [
          "DeliveryOrders"
        ],
        "summary": "fulfillment:write - Create a delivery order for auction warehouse.",
        "operationId": "AddClockDeliveryOrder",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "deliveryOrderId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "deliveryOrder",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeliveryOrderAuction"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "DeliveryOrders"
        ],
        "summary": "fulfillment:write - Delete a delivery order for auction.",
        "operationId": "DeleteClockDeliveryOrder",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "deliveryOrderId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/supply-lines": {
      "get": {
        "tags": [
          "DirectSales"
        ],
        "summary": "supply:read - rate limit: 3.4 per second - burst limit: 1000 - Returns supply lines created within the given timeframe",
        "operationId": "GetSupplyLines",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "startDateTime",
            "in": "query",
            "format": "date-time",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "endDateTime",
            "in": "query",
            "format": "date-time",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "batchId",
            "in": "query",
            "format": "uuid",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SupplyLine"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "post": {
        "tags": [
          "DirectSales"
        ],
        "summary": "supply:write - Create a supply line with type BATCH_PRICE",
        "operationId": "AddSupplyLine",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "supplyLine",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SupplyLineCreate"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "202": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/supply-lines/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "DirectSales"
        ],
        "summary": "supply:read - rate limit: 3.4 per second - burst limit: 1000 - Returns a list of max 1000 supply lines starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetSupplyLinesBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfSupplyLine"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/supply-lines/current-max-sequence": {
      "get": {
        "tags": [
          "DirectSales"
        ],
        "summary": "supply:read - rate limit: 3.4 per second - burst limit: 1000 - Returns the maximum sequence number found in supply lines.",
        "operationId": "GetSupplyLinesMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/supply-lines/{supplyLineId}": {
      "get": {
        "tags": [
          "DirectSales"
        ],
        "summary": "supply:read - Returns a supply line.",
        "operationId": "GetSupplyLineById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "supplyLineId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SupplyLine"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "DirectSales"
        ],
        "summary": "supply:write - Delete a supply line",
        "operationId": "DeleteSupplyLine",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "supplyLineId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/batches/{batchId}/base-supply": {
      "put": {
        "tags": [
          "DirectSales"
        ],
        "summary": "supply:write - Set base supply for a batch. Supply lines will be generated based on pre-entered price groups.",
        "description": "After entering the base price, Floriday will create multiple supply lines based on a variety of settings within Floriday.",
        "operationId": "EditBaseSupply",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "batchId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "baseSupply",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseSupply"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/supply-lines/{supplyLineId}/status": {
      "patch": {
        "tags": [
          "DirectSales"
        ],
        "summary": "supply:write - Update the status of the supply line with type BATCH_PRICE.",
        "operationId": "SetSupplyLineStatus",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "supplyLineId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "statusUpdate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SupplyAvailabilityStatus"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/supply-lines/{supplyLineId}/price": {
      "patch": {
        "tags": [
          "DirectSales"
        ],
        "summary": "supply:write - Update the price of the supply line with type BATCH_PRICE.",
        "operationId": "SetSupplyLinePrice",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "supplyLineId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "supplyLinePriceUpdate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SupplyLinePriceUpdate"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/domain-error-codes": {
      "get": {
        "tags": [
          "DomainErrorCodes"
        ],
        "summary": "- Returns all domain error codes.",
        "operationId": "GetDomainErrorCodes",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DomainErrorCode"
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/floraxchange-settings/migrate-sales-order-management": {
      "post": {
        "tags": [
          "FloraXchangeSettings"
        ],
        "summary": "fulfillment:write - Migrate sales order management from FX to Floriday",
        "operationId": "MigrateSalesOrderManagement",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/fulfillment-orders/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "FulfillmentOrders"
        ],
        "summary": "fulfillment:read - rate limit: 3.4 per second - burst limit: 1000 - Returns a list of max 1000 fulfillment orders starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetFulfillmentOrdersBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfFulfillmentOrder"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/fulfillment-orders/current-max-sequence": {
      "get": {
        "tags": [
          "FulfillmentOrders"
        ],
        "summary": "supply:read - rate limit: 3.4 per second - burst limit: 1000 - Returns the maximum sequence number found in fulfillment orders.",
        "operationId": "GetFulfillmentOrdersMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/fulfillment-orders/{fulfillmentOrderId}": {
      "get": {
        "tags": [
          "FulfillmentOrders"
        ],
        "summary": "fulfillment:read - Returns a fulfillment order.",
        "operationId": "GetFulfillmentOrderById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "fulfillmentOrderId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/FulfillmentOrder"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "put": {
        "tags": [
          "FulfillmentOrders"
        ],
        "summary": "fulfillment:write - Updates a fulfillment order.",
        "description": "Update to the new number of load carriers ( lower than original value ). Load carrier(s) with highest sequence-number(s) will be removed first.",
        "operationId": "EditFulfillmentOrder",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "fulfillmentOrderId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "fulfillmentOrderUpdate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FulfillmentOrderUpdate"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "FulfillmentOrders"
        ],
        "summary": "fulfillment:write - Delete a fulfillment order.",
        "operationId": "DeleteFulfillmentOrder",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "fulfillmentOrderId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/fulfillment-orders/{fulfillmentOrderId}/status": {
      "get": {
        "tags": [
          "FulfillmentOrders"
        ],
        "summary": "fulfillment:read - Returns the status of a fulfillment order.",
        "operationId": "GetFulfillmentOrderStatusById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "fulfillmentOrderId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/FulfillmentOrderStatus"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/fulfillment-orders/{fulfillmentOrderId}/logistic-labels": {
      "get": {
        "tags": [
          "FulfillmentOrders"
        ],
        "summary": "fulfillment:read - rate limit: 1.0 per second - burst limit: 60 - Returns logistic labels (SSCC or delivery notes) as pdf for a fulfillment order.",
        "operationId": "GetLogisticLabelsById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "fulfillmentOrderId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "file"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/fulfillment-orders/{fulfillmentOrderId}/stickers": {
      "get": {
        "tags": [
          "FulfillmentOrders"
        ],
        "summary": "fulfillment:read - Returns tray stickers as pdf for a fulfillment order.",
        "operationId": "GetTrayLabelsAsPdfByFulfillmentOrderId",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "fulfillmentOrderId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "showCustomerOnSticker",
            "in": "query",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "singleStickerPerBatch",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "file"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/fulfillment-orders": {
      "post": {
        "tags": [
          "FulfillmentOrders"
        ],
        "summary": "fulfillment:write - Creates a fulfillment order.",
        "operationId": "AddFulfillmentOrder",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "fulfillmentOrderCreate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FulfillmentOrderCreate"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/fulfillment-orders/{fulfillmentOrderId}/corrections": {
      "post": {
        "tags": [
          "FulfillmentOrders"
        ],
        "summary": "fulfillment:write - Corrects a fulfillment order.",
        "operationId": "AddFulfillmentOrderCorrection",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "fulfillmentOrderId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "addFulfillmentOrderCorrection",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddFulfillmentOrderCorrection"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "get": {
        "tags": [
          "FulfillmentOrders"
        ],
        "summary": "fulfillment:read - Returns fulfillment order corrections.",
        "operationId": "GetFulfillmentOrderCorrectionsById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "fulfillmentOrderId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FulfillmentOrderCorrection"
              }
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/auth/key": {
      "get": {
        "tags": [
          "Identities"
        ],
        "summary": "Provides the identity associated with an api key.",
        "description": "Use this endpoint to check the identity keys associated with an api key.",
        "operationId": "GetIdentity",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Identity"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/invoice-lines/{salesOrderId}": {
      "get": {
        "tags": [
          "InvoiceLines"
        ],
        "summary": "sales-order:read - Returns invoice lines by sales order",
        "operationId": "GetInvoiceLinesBySalesOrderId",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InvoiceLine"
              }
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/invoice-lines/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "InvoiceLines"
        ],
        "summary": "sales-order:read - rate limit: 3.4 per second - burst limit: 1000 - Returns a list of max 1000 invoice lines starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records based on `Limit` and the given `SequenceNumber`.\n\n **Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetInvoiceLinesBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfInvoiceLine"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/invoice-lines/current-max-sequence": {
      "get": {
        "tags": [
          "InvoiceLines"
        ],
        "summary": "sales-order:read - rate limit: 3.4 per second - burst limit: 1000 - Returns the maximum sequence number found in invoice lines.",
        "operationId": "GetInvoiceLinesMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/media": {
      "post": {
        "tags": [
          "Media"
        ],
        "summary": "catalog:write - rate limit: 2.0 per second - burst limit: 200 - Uploads an image.",
        "description": "Successfully posted images can be accessed with the url: https://image.floriday.io/mediaId.jpg",
        "operationId": "AddImage",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "image",
            "in": "formData",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/MediaReference"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/order-requests/{orderRequestId}": {
      "get": {
        "tags": [
          "OrderRequests"
        ],
        "summary": "sales-order:read - Returns the order request by id.",
        "operationId": "GetOrderRequestById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "orderRequestId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderRequest"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/order-requests/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "OrderRequests"
        ],
        "summary": "sales-order:read - rate limit: 2.0 per second - burst limit: 200 - Returns a list of max 1000 order requests starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetOrderRequestsBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfOrderRequest"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/order-requests/current-max-sequence": {
      "get": {
        "tags": [
          "OrderRequests"
        ],
        "summary": "sales-order:read - Returns the maximum sequence number found in order request.",
        "operationId": "GetOrderRequestsMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/order-requests/{orderRequestId}/accept": {
      "patch": {
        "tags": [
          "OrderRequests"
        ],
        "summary": "sales-order:write - Accepts the order request.",
        "description": "Changes the `status` to ACCEPTED and creates a new sales order.",
        "operationId": "SetOrderRequestAccepted",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "orderRequestId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "acceptOrderRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AcceptOrderRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/order-requests/{orderRequestId}/reject": {
      "patch": {
        "tags": [
          "OrderRequests"
        ],
        "summary": "sales-order:write - Rejects the order request.",
        "description": "Changes the `status` to REJECTED.",
        "operationId": "SetOrderRequestRejected",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "orderRequestId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "rejectOrderRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RejectOrderRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/organizations/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "organization:read - rate limit: 2.0 per second - burst limit: 200 - Returns a list of max 1000 organizations starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetOrganizationsBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfOrganization"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/organizations/current-max-sequence": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "organization:read - Returns the maximum sequence number found in organizations.",
        "operationId": "GetOrganizationsMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/organizations/{organizationId}": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "organization:read - Returns an organization.",
        "operationId": "GetOrganizationById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "organizationId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/organizations": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "organization:read - Returns an organization by company GLN.",
        "operationId": "GetOrganizationByCompanyGln",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "companyGln",
            "in": "query",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/packing-configuration-requests/{packingConfigurationRequestId}": {
      "get": {
        "tags": [
          "PackingConfigurationRequests"
        ],
        "summary": "catalog:read - Returns a packing configuration request.",
        "operationId": "GetPackingConfigurationRequestById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "packingConfigurationRequestId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PackingConfigurationRequest"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/packing-configuration-requests/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "PackingConfigurationRequests"
        ],
        "summary": "catalog:read - rate limit: 2.0 per second - burst limit: 200 - Returns a list of max 1000 packing configuration request starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetPackingConfigurationRequestsBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfPackingConfigurationRequest"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/packing-configuration-requests/current-max-sequence": {
      "get": {
        "tags": [
          "PackingConfigurationRequests"
        ],
        "summary": "catalog:read - Returns the maximum sequence number found in packing configuration request.",
        "operationId": "GetPackingConfigurationRequestsMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/packing-configuration-requests/{packingConfigurationRequestId}/accept": {
      "patch": {
        "tags": [
          "PackingConfigurationRequests"
        ],
        "summary": "catalog:write - Accepts the packing configuration request.",
        "description": "Changes the `status` to ACCEPTED. The trade item must contain the packing configuration available for the customer.",
        "operationId": "SetPackingConfigurationRequestAccepted",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "packingConfigurationRequestId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/packing-configuration-requests/{packingConfigurationRequestId}/reject": {
      "patch": {
        "tags": [
          "PackingConfigurationRequests"
        ],
        "summary": "catalog:write - Rejects the packing configuration request.",
        "description": "Changes the `status` to REJECTED.",
        "operationId": "SetPackingConfigurationRequestRejected",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "packingConfigurationRequestId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/plant-passports": {
      "post": {
        "tags": [
          "PlantPassports"
        ],
        "summary": "fulfillment:read - Returns the plant passport PDF for the BatchIds.",
        "description": "Uses HTTP POST to prevent a limit on the query URL.",
        "operationId": "GetPlantPassportPdf",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "batchIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/plant-passports/by-sales-channel-order-id/{salesChannelOrderId}": {
      "get": {
        "tags": [
          "PlantPassports"
        ],
        "summary": "fulfillment:read - Returns plant passport PDF for the sales order.",
        "operationId": "GetPlantPassportPdfBySalesChannelOrderId",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "salesChannelOrderId",
            "in": "path",
            "required": true,
            "minLength": 1,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/plant-passports/by-sales-order-id/{salesOrderId}": {
      "get": {
        "tags": [
          "PlantPassports"
        ],
        "summary": "fulfillment:read - Returns plant passport PDF for the sales order.",
        "operationId": "GetPlantPassportPdfBySalesOrderId",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/price-groups/{priceGroupId}": {
      "get": {
        "tags": [
          "PriceGroups"
        ],
        "summary": "supply:read - Returns a price group.",
        "operationId": "GetPriceGroupById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "priceGroupId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PriceGroup"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/price-groups/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "PriceGroups"
        ],
        "summary": "supply:read - rate limit: 3.4 per second - burst limit: 1000 - Returns a list of max 1000 price groups starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetPriceGroupsBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limit",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfPriceGroup"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/price-groups/current-max-sequence": {
      "get": {
        "tags": [
          "PriceGroups"
        ],
        "summary": "supply:read - rate limit: 3.4 per second - burst limit: 1000 - Returns the maximum sequence number found in price groups.",
        "operationId": "GetPriceGroupsMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/sales-order-correction-requests/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "SalesOrderCorrectionRequests"
        ],
        "summary": "sales-order:read - rate limit: 3.4 per second - burst limit: 1000 - Returns a list of max 1000 sales order correction requests starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetSalesOrderCorrectionRequestsBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfSalesOrderCorrectionRequest"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/sales-order-correction-requests/{salesOrderCorrectionRequestId}": {
      "get": {
        "tags": [
          "SalesOrderCorrectionRequests"
        ],
        "summary": "sales-order:read - Returns a sales order correction request.",
        "operationId": "GetSalesOrderCorrectionRequestById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "salesOrderCorrectionRequestId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SalesOrderCorrectionRequest"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "SalesOrderCorrectionRequests"
        ],
        "summary": "sales-order:write - Delete a sales order correction request.",
        "operationId": "DeleteSalesOrderCorrectionRequest",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "salesOrderCorrectionRequestId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/sales-order-correction-requests/current-max-sequence": {
      "get": {
        "tags": [
          "SalesOrderCorrectionRequests"
        ],
        "summary": "sales-order:read - rate limit: 3.4 per second - burst limit: 1000 -  Returns the maximum sequence number found in sales order correction requests.",
        "operationId": "GetSalesOrderCorrectionRequestsMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/sales-order-correction-requests": {
      "post": {
        "tags": [
          "SalesOrderCorrectionRequests"
        ],
        "summary": "sales-order:write - Creates a new sales order correction request.",
        "operationId": "AddSalesOrderCorrectionRequest",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "addSalesOrderCorrectionRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddSalesOrderCorrectionRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/sales-order-correction-requests/{salesOrderCorrectionRequestId}/accept": {
      "patch": {
        "tags": [
          "SalesOrderCorrectionRequests"
        ],
        "summary": "sales-order:write - Accept sales order correction request.",
        "operationId": "AcceptSalesOrderCorrectionRequest",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "salesOrderCorrectionRequestId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "salesOrderCorrectionRequestAccept",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesOrderCorrectionRequestAccept"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/sales-order-correction-requests/{salesOrderCorrectionRequestId}/decline": {
      "patch": {
        "tags": [
          "SalesOrderCorrectionRequests"
        ],
        "summary": "sales-order:write - Decline sales order correction request.",
        "operationId": "DeclineSalesOrderCorrectionRequest",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "salesOrderCorrectionRequestId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "salesOrderCorrectionRequestDecline",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesOrderCorrectionRequestDecline"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/sales-orders": {
      "get": {
        "tags": [
          "SalesOrders"
        ],
        "summary": "sales-order:read - rate limit: 3.4 per second - burst limit: 1000 - Returns sales orders.",
        "operationId": "GetSalesOrders",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "startDateTime",
            "in": "query",
            "format": "date-time",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "endDateTime",
            "in": "query",
            "format": "date-time",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "tradeInstrument",
            "in": "query",
            "x-schema": {
              "$ref": "#/definitions/TradeInstrumentFilter"
            },
            "x-nullable": true,
            "enum": [
              "CLOCK_PRESALES",
              "CLOCK_SALES",
              "CONTRACT",
              "DIRECT_SALES",
              "BID_OFFER",
              "CLOCK_SALES_FROM_NURSERY"
            ]
          },
          {
            "type": "integer",
            "name": "sequence",
            "in": "query",
            "format": "int64",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SalesOrder"
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "post": {
        "tags": [
          "SalesOrders"
        ],
        "summary": "sales-order:write - rate limit: 3.4 per second - burst limit: 1000 - Creates a new sales order.",
        "description": "Creates a new sales order with a supply reference",
        "operationId": "AddSalesOrder",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "salesOrderRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesOrderRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/sales-orders/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "SalesOrders"
        ],
        "summary": "sales-order:read - rate limit: 3.4 per second - burst limit: 1000 - Returns a list of max 1000 sales orders starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetSalesOrdersBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfSalesOrder"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/sales-orders/{salesOrderId}": {
      "get": {
        "tags": [
          "SalesOrders"
        ],
        "summary": "sales-order:read - Returns a sales order.",
        "operationId": "GetSalesOrderById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SalesOrder"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/sales-orders/{salesOrderId}/version": {
      "get": {
        "tags": [
          "SalesOrders"
        ],
        "summary": "sales-order:read - Returns the sales order by ID and version.",
        "operationId": "GetSalesOrderByIdAndVersion",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "salesOrderVersion",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SalesOrderVersion"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/sales-orders/external-integration": {
      "post": {
        "tags": [
          "SalesOrders"
        ],
        "summary": "sales-order:write - rate limit: 3.4 per second - burst limit: 1000 - Creates a new sales order.",
        "description": "Creates a new sales order without a supply line or blanket order reference.",
        "operationId": "AddSalesOrderExternalIntegration",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "salesOrderExternalIntegrationRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesOrderExternalIntegrationRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/sales-orders/{salesOrderId}/cancel": {
      "patch": {
        "tags": [
          "SalesOrders"
        ],
        "summary": "sales-order:write - Cancel a sales order that is still in status ACCEPTED.",
        "operationId": "SetSalesOrderCancelled",
        "parameters": [
          {
            "type": "string",
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/sales-orders/{salesOrderId}/commit": {
      "patch": {
        "tags": [
          "SalesOrders"
        ],
        "summary": "sales-order:write - Commit a sales order that is still in status ACCEPTED.",
        "operationId": "SetSalesOrderCommitted",
        "parameters": [
          {
            "type": "string",
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/sales-orders/current-max-sequence": {
      "get": {
        "tags": [
          "SalesOrders"
        ],
        "summary": "sales-order:read - Returns the maximum sequence number found in sales orders.",
        "operationId": "GetSalesOrdersMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/settings/deactivate-florecom-order-messages": {
      "patch": {
        "tags": [
          "Settings"
        ],
        "summary": "fulfillment:write - Deactivates Florecom order/orderresponse messages",
        "operationId": "SetFlorecomOrderMessagesDeactivated",
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/supply-requests/{supplyRequestId}": {
      "get": {
        "tags": [
          "SupplyRequests"
        ],
        "summary": "supply:read - Returns a supply request.",
        "operationId": "GetSupplyRequestById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "supplyRequestId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SupplyRequest"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/supply-requests/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "SupplyRequests"
        ],
        "summary": "supply:read - rate limit: 2.0 per second - burst limit: 200 - Returns a list of max 1000 supply requests starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetSupplyRequestsBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfSupplyRequest"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/supply-requests/current-max-sequence": {
      "get": {
        "tags": [
          "SupplyRequests"
        ],
        "summary": "supply:read - Returns the maximum sequence number found in supply requests.",
        "operationId": "GetSupplyRequestsMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/supply-requests/line/{supplyRequestLineId}/accept": {
      "patch": {
        "tags": [
          "SupplyRequests"
        ],
        "summary": "supply:write - Accepts the supply request line.",
        "description": "Changes the `status` to ACCEPTED and creates a new supplyLine in a new or existing customerOffer.",
        "operationId": "SetSupplyRequestLineAccepted",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "supplyRequestLineId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "acceptSupplyRequestLine",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AcceptSupplyRequestLine"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/supply-requests/line/{supplyRequestLineId}/reject": {
      "patch": {
        "tags": [
          "SupplyRequests"
        ],
        "summary": "supply:write - Rejects the supply request line.",
        "description": "Changes the `status` to REJECTED.",
        "operationId": "SetSupplyRequestLineRejected",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "supplyRequestLineId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "rejectionReason",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/trade-item-requests/{tradeItemRequestId}": {
      "get": {
        "tags": [
          "TradeItemRequests"
        ],
        "summary": "catalog:read - Returns a trade item request.",
        "operationId": "GetTradeItemRequestById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "tradeItemRequestId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TradeItemRequest"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/trade-item-requests/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "TradeItemRequests"
        ],
        "summary": "catalog:read - rate limit: 2.0 per second - burst limit: 200 - Returns a list of max 1000 trade item requests starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetTradeItemRequestsBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfTradeItemRequest"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/trade-item-requests/current-max-sequence": {
      "get": {
        "tags": [
          "TradeItemRequests"
        ],
        "summary": "catalog:read - Returns the maximum sequence number found in trade item requests.",
        "operationId": "GetTradeItemRequestsMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/trade-item-requests/{tradeItemRequestId}/accept/{tradeItemId}": {
      "patch": {
        "tags": [
          "TradeItemRequests"
        ],
        "summary": "catalog:write - Accepts the trade item request.",
        "description": "Changes the `status` to ACCEPTED and sets the `tradeItemId`. The chosen trade item must be available for the customer and must contain the correct packing configuration",
        "operationId": "SetTradeItemRequestAccepted",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "tradeItemRequestId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "tradeItemId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/trade-item-requests/{tradeItemRequestId}/reject": {
      "patch": {
        "tags": [
          "TradeItemRequests"
        ],
        "summary": "catalog:write - Rejects the trade item request.",
        "description": "Changes the `status` to REJECTED.",
        "operationId": "SetTradeItemRequestRejected",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "tradeItemRequestId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/trade-items": {
      "get": {
        "tags": [
          "TradeItems"
        ],
        "summary": "catalog:read - Returns trade items.",
        "operationId": "GetTradeItems",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "page",
            "in": "query",
            "format": "int32",
            "default": 1,
            "maximum": 2147483647.0,
            "minimum": 1.0,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "includeDeleted",
            "in": "query",
            "default": false,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeItem"
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "post": {
        "tags": [
          "TradeItems"
        ],
        "summary": "catalog:write - Creates a new trade item.",
        "description": "Photo URLs posted as Floriday media must conform with the following format https://image.floriday.io/mediaId.jpg",
        "operationId": "AddTradeItem",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "tradeItem",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TradeItemBase"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/trade-items/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "TradeItems"
        ],
        "summary": "catalog:read - rate limit: 2.0 per second - burst limit: 200 - Returns a list of max 1000 trade items starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetTradeItemsBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfTradeItem"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/trade-items/current-max-sequence": {
      "get": {
        "tags": [
          "TradeItems"
        ],
        "summary": "catalog:read - Returns the maximum sequence number found in trade items.",
        "operationId": "GetTradeItemsMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/trade-items/{tradeItemId}": {
      "get": {
        "tags": [
          "TradeItems"
        ],
        "summary": "catalog:read - Returns a trade item.",
        "operationId": "GetTradeItemById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "tradeItemId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TradeItem"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "TradeItems"
        ],
        "summary": "catalog:write - Deletes a trade item.",
        "operationId": "DeleteTradeItem",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "tradeItemId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "put": {
        "tags": [
          "TradeItems"
        ],
        "summary": "catalog:write - Updates a trade item.",
        "operationId": "EditTradeItem",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "tradeItemId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "tradeItem",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TradeItemUpdate"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/trade-items/{tradeItemId}/{version}": {
      "get": {
        "tags": [
          "TradeItems"
        ],
        "summary": "catalog:read - Returns a trade item.",
        "operationId": "GetTradeItemByIdAndVersion",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "tradeItemId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "version",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TradeItem"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/trade-items/summary": {
      "get": {
        "tags": [
          "TradeItems"
        ],
        "summary": "catalog:read - rate limit: 2.0 per second - burst limit: 200 - Returns public trade item information of a supplier.",
        "operationId": "GetTradeItemsSummary",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "array",
            "name": "tradeItemIds",
            "in": "query",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "type": "string",
            "name": "supplierOrganizationId",
            "in": "query",
            "format": "uuid",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TradeItemSummary"
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/trade-items/variants": {
      "post": {
        "tags": [
          "TradeItems"
        ],
        "summary": "catalog:write - Creates a new trade item variant.",
        "operationId": "AddTradeItemVariant",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "tradeItemVariant",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TradeItemVariant"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/trade-items/variants/{tradeItemId}": {
      "put": {
        "tags": [
          "TradeItems"
        ],
        "summary": "catalog:write - Update a trade item variant.",
        "operationId": "EditTradeItemVariant",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "tradeItemId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "tradeItemVariantUpdate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TradeItemVariantUpdate"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/trade-settings/supplier/current-organization": {
      "get": {
        "tags": [
          "TradeSettings"
        ],
        "summary": "network:read - Returns the trade settings of the current organization.",
        "operationId": "GetSupplierTradeSettingsFromOrganization",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SupplierTradeSettings"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/trade-settings/customer/max-sequence": {
      "get": {
        "tags": [
          "TradeSettings"
        ],
        "summary": "network:read - Returns the maximum sequence number found in customer trade settings. The customer trade settings sequence differs from the supplier trade settings sequence.",
        "operationId": "GetCustomerTradeSettingsMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/trade-settings/customer/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "TradeSettings"
        ],
        "summary": "network:read - Returns a list of max 1000 customer trade settings starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetCustomerTradeSettingsBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "maximum": 9223372036854780000.0,
            "minimum": 0.0,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "required": true,
            "format": "int32",
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfCustomerTradeSettings"
            }
          },
          "429": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/trade-settings/customer/{customerOrganizationId}": {
      "get": {
        "tags": [
          "TradeSettings"
        ],
        "summary": "network:read - Returns the trade settings for a given customer.",
        "description": "If the sequence is 0 that means there are no trade settings found for this customer and we have returned the defaults instead.",
        "operationId": "GetCustomerTradeSettingsByOrganizationId",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "customerOrganizationId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerTradeSettings"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/fulfillment-orders/inbound/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "WarehouseProviders"
        ],
        "summary": "fulfillment:read - Returns a list of inbound fulfillment orders.",
        "operationId": "GetFulfillmentOrdersInboundBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfFulfillmentOrderInbound"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/fulfillment-orders/{fulfillmentOrderId}/goods-receipt": {
      "put": {
        "tags": [
          "WarehouseProviders"
        ],
        "summary": "fulfillment:write - Receive a inbound fulfillment order.",
        "operationId": "SetFulfillmentOrderReceipt",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "fulfillmentOrderId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "goodsReceipt",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GoodsReceipt"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/warehouses": {
      "get": {
        "tags": [
          "Warehouses"
        ],
        "summary": "organization:read - Returns warehouses.",
        "operationId": "GetWarehouses",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "boolean",
            "name": "excludeExternalWarehouses",
            "in": "query",
            "default": false,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Warehouse"
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/warehouses/sync/{sequenceNumber}": {
      "get": {
        "tags": [
          "Warehouses"
        ],
        "summary": "organization:read - rate limit: 2.0 per second - burst limit: 200 - Returns a list of max 1000 warehouses starting from a specified sequence number.",
        "description": "**Synchronization endpoint**\nFetches the succeeding modified records (including deleted records) based on `Limit` and the given `SequenceNumber`.\n\n**Note**\nYour data is up to date when your given `SequenceNumber` is equal to the received `MaximumSequenceNumber`.",
        "operationId": "GetWarehousesBySequenceNumber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "sequenceNumber",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limitResult",
            "in": "query",
            "format": "int32",
            "default": 1000,
            "maximum": 1000.0,
            "minimum": 1.0,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncResultOfWarehouse"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/warehouses/current-max-sequence": {
      "get": {
        "tags": [
          "Warehouses"
        ],
        "summary": "organization:read - rate limit: 2.0 per second - burst limit: 200 - Returns the maximum sequence number found in warehouses.",
        "operationId": "GetWarehousesMaxSequence",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "429": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/warehouses/auction": {
      "get": {
        "tags": [
          "Warehouses"
        ],
        "summary": "organization:read - Returns warehouses with auction capability.",
        "operationId": "GetWarehousesAuction",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Warehouse"
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/warehouses/external-stock": {
      "get": {
        "tags": [
          "Warehouses"
        ],
        "summary": "organization:read - Returns warehouses for external stock management.",
        "operationId": "GetWarehousesExternalStock",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Warehouse"
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/webhooks/subscriptions": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "webhooks:write - Subscribe to a events webhook.",
        "description": "The Events will be POSTed to the specified URL.\n                            Events are published for these aggregateTypes:\n                            - SALESORDER\n                            - BATCH\n                            - DELIVERYORDER\n                            - FULFILLMENTORDER",
        "operationId": "AddWebhookSubscription",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "webhookSubscription",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebhookSubscription"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Webhooks"
        ],
        "summary": "webhooks:write - Delete a events webhook.",
        "operationId": "DeleteWebhookSubscription",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "webhookSubscription",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebhookSubscription"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/weekly-base-supply-counters/{weeklyBaseSupplyCounterId}": {
      "get": {
        "tags": [
          "WeeklyBaseSupplyCounters"
        ],
        "summary": "supply:read - Returns a weekly base supply counter.",
        "operationId": "GetWeeklyBaseSupplyCounter",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "weeklyBaseSupplyCounterId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/WeeklyBaseSupplyCounter"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/weekly-base-supply-counters/by-template-id/{weeklyBaseSupplyCounterTemplateId}": {
      "get": {
        "tags": [
          "WeeklyBaseSupplyCounters"
        ],
        "summary": "supply:read - Returns weekly base supply counters by templateId.",
        "operationId": "GetWeeklyBaseSupplyCounterByTemplateId",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "weeklyBaseSupplyCounterTemplateId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WeeklyBaseSupplyCounter"
              }
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/weekly-base-supply-counters/claim/{weeklyBaseSupplyCounterId}": {
      "put": {
        "tags": [
          "WeeklyBaseSupplyCounters"
        ],
        "summary": "supply:write - Claim NumberOfPieces from weekly base supply counter.",
        "operationId": "ClaimNumberOfPiecesFromWeeklyBaseSupplyCounter",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "weeklyBaseSupplyCounterId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "claimFromWeeklyBaseSupplyCounter",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimFromWeeklyBaseSupplyCounter"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/weekly-base-supply-counters/templates": {
      "get": {
        "tags": [
          "WeeklyBaseSupplyCounters"
        ],
        "summary": "supply:read - Returns weekly base supply counter templates.",
        "operationId": "GetWeeklyBaseSupplyTemplates",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WeeklyBaseSupplyCounterTemplate"
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "put": {
        "tags": [
          "WeeklyBaseSupplyCounters"
        ],
        "summary": "supply:write - Upsert weekly base supply counter template.",
        "operationId": "UpsertWeeklyBaseSupplyCounterTemplate",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "editWeeklyBaseSupplyCounterTemplate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditWeeklyBaseSupplyCounterTemplate"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/weekly-base-supply-counters/templates/{weeklyBaseSupplyCounterTemplateId}": {
      "get": {
        "tags": [
          "WeeklyBaseSupplyCounters"
        ],
        "summary": "supply:read - Returns a weekly base supply counter template.",
        "operationId": "GetWeeklyBaseSupplyTemplateById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "weeklyBaseSupplyCounterTemplateId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/WeeklyBaseSupplyCounterTemplate"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "WeeklyBaseSupplyCounters"
        ],
        "summary": "supply:write - Delete weekly base supply counter template.",
        "operationId": "DeleteWeeklyBaseSupplyCounterTemplate",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "weeklyBaseSupplyCounterTemplateId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/weekly-base-supply-counters/templates/{weeklyBaseSupplyCounterTemplateId}/add-to-trade-item": {
      "put": {
        "tags": [
          "WeeklyBaseSupplyCounters"
        ],
        "summary": "supply:write - Add WeeklyBaseSupplyCounterTemplate to trade item.",
        "operationId": "AddWeeklyBaseSupplyCounterTemplateToTradeItemAsync",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "weeklyBaseSupplyCounterTemplateId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "name": "weeklyBaseSupplyCounterTemplateToTradeItem",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WeeklyBaseSupplyCounterTemplateToTradeItem"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/weekly-supply-line-counters": {
      "get": {
        "tags": [
          "WeeklySupplyLineCounters"
        ],
        "summary": "supply:read - Returns all available WeeklySupplyLineCounters created via the Suppliers API.",
        "description": "WeeklySupplyLineCounters are used to create a countdown in the supply lines. The `numberOfPieces` in the supply line will be linked to the counter",
        "operationId": "GetWeeklySupplyLineCounters",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WeeklySupplyLineCounter"
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "post": {
        "tags": [
          "WeeklySupplyLineCounters"
        ],
        "summary": "supply:write - Creates a new WeeklySupplyLineCounter.",
        "operationId": "AddWeeklySupplyLineCounter",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "weeklySupplyLineCounterCreate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WeeklySupplyLineCounterCreate"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/weekly-supply-line-counters/{weeklySupplyLineCounterId}": {
      "get": {
        "tags": [
          "WeeklySupplyLineCounters"
        ],
        "summary": "supply:read - Returns the WeeklySupplyLineCounters by id.",
        "operationId": "GetWeeklySupplyLineCounterById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "weeklySupplyLineCounterId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/WeeklySupplyLineCounter"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "WeeklySupplyLineCounters"
        ],
        "summary": "supply:write - Deletes the WeeklySupplyLineCounter and removes all the supply line links.",
        "operationId": "DeleteWeeklySupplyLineCounter",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "weeklySupplyLineCounterId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/weekly-supply-line-counters/{weeklySupplyLineCounterId}/add-to-supplyline/{supplyLineId}": {
      "patch": {
        "tags": [
          "WeeklySupplyLineCounters"
        ],
        "summary": "supply:write - Links the supply line to the WeeklySupplyLineCounter. The `numberOfPieces` in the supply line will be based on the counter.",
        "operationId": "AddWeeklySupplyLineCounterToSupplyLine",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "weeklySupplyLineCounterId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "supplyLineId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/weekly-supply-line-counters/{weeklySupplyLineCounterId}/remove-from-supplyline/{supplyLineId}": {
      "patch": {
        "tags": [
          "WeeklySupplyLineCounters"
        ],
        "summary": "supply:write - Removes the supply line from the WeeklySupplyLineCounter.",
        "operationId": "RemoveWeeklySupplyLineCounterFromSupplyLine",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "weeklySupplyLineCounterId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "supplyLineId",
            "in": "path",
            "required": true,
            "format": "uuid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "403": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "423": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "501": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          },
          "504": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "JWT Token": []
          },
          {
            "X-Api-Key": []
          }
        ]
      }
    }
  },
  "definitions": {
    "AdditionalService": {
      "type": "object",
      "required": [
        "additionalServiceId",
        "commercialServiceType",
        "name",
        "warehouseIds",
        "price",
        "unit",
        "isCustomerSpecific",
        "isAvailable",
        "isDeleted",
        "sequenceNumber"
      ],
      "properties": {
        "additionalServiceId": {
          "type": "string",
          "format": "uuid"
        },
        "commercialServiceType": {
          "$ref": "#/definitions/CommercialServiceType"
        },
        "name": {
          "type": "string",
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "maxLength": 255
        },
        "warehouseIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "price": {
          "description": "The extra costs that will be billed when choosing this additional service",
          "allOf": [
            {
              "$ref": "#/definitions/Price"
            }
          ]
        },
        "unit": {
          "$ref": "#/definitions/AdditionalServiceUnit"
        },
        "customerOrganizationIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "isCustomerSpecific": {
          "type": "boolean",
          "description": "The additional service is customer-specific for one or more customers."
        },
        "stickerInformation": {
          "description": "Optional information related to stickers.",
          "allOf": [
            {
              "$ref": "#/definitions/AdditionalStickerServiceInformation"
            }
          ]
        },
        "isAvailable": {
          "type": "boolean",
          "description": "Indicates if the additional service is currently available for use"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CommercialServiceType": {
      "type": "object",
      "required": [
        "commercialServiceTypeId",
        "sequenceNumber"
      ],
      "properties": {
        "commercialServiceTypeId": {
          "type": "string",
          "format": "uuid"
        },
        "commercialServiceTypeName": {
          "type": "string",
          "maxLength": 70
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Price": {
      "type": "object",
      "required": [
        "currency",
        "value"
      ],
      "properties": {
        "currency": {
          "$ref": "#/definitions/Currency"
        },
        "value": {
          "type": "number",
          "format": "decimal",
          "maximum": 10000000000000000.0,
          "minimum": 0.0
        }
      }
    },
    "Currency": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "EUR",
        "USD"
      ],
      "enum": [
        "EUR",
        "USD"
      ]
    },
    "AdditionalServiceUnit": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "PIECE",
        "PACKAGE",
        "LAYER",
        "LOADCARRIER",
        "LABEL"
      ],
      "enum": [
        "PIECE",
        "PACKAGE",
        "LAYER",
        "LOADCARRIER",
        "LABEL"
      ]
    },
    "AdditionalStickerServiceInformation": {
      "type": "object",
      "required": [
        "stickerType",
        "deliverSeparately",
        "supportedStickerSizes",
        "isDefault"
      ],
      "properties": {
        "stickerType": {
          "$ref": "#/definitions/AdditionalStickerServiceType"
        },
        "deliverSeparately": {
          "type": "boolean"
        },
        "supportedStickerSizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Size"
          }
        },
        "isDefault": {
          "type": "boolean"
        }
      }
    },
    "AdditionalStickerServiceType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "UNKNOWN",
        "POT",
        "PACKAGE",
        "SLEEVE",
        "PRODUCT",
        "LAYER",
        "LOAD_CARRIER",
        "DOCUMENT"
      ],
      "enum": [
        "UNKNOWN",
        "POT",
        "PACKAGE",
        "SLEEVE",
        "PRODUCT",
        "LAYER",
        "LOAD_CARRIER",
        "DOCUMENT"
      ]
    },
    "Size": {
      "type": "object",
      "required": [
        "widthInMm",
        "heightInMm"
      ],
      "properties": {
        "widthInMm": {
          "type": "integer",
          "format": "int32"
        },
        "heightInMm": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ProblemDetails": {
      "type": "object",
      "additionalProperties": {},
      "required": [
        "extensions"
      ],
      "properties": {
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "extensions": {
          "type": "object",
          "additionalProperties": {}
        }
      }
    },
    "ValidationProblemDetails": {
      "title": "ValidationProblemDetails",
      "type": "object",
      "required": [
        "title",
        "status"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Contains an URI linking to the documentation referencing the domain error code"
        },
        "title": {
          "type": "string",
          "description": "Contains the general description based of the domain error code"
        },
        "detail": {
          "type": "string",
          "description": "Contains the error message that occurred in the service"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "errors": {
          "type": "object",
          "description": "Contains validation errors when incorrect values are used in the body",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "domainErrorCode": {
          "type": "string",
          "description": "Contains an alphabetical code referring to the thrown error"
        }
      }
    },
    "SyncResultOfAdditionalService": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalService"
          }
        }
      }
    },
    "SyncResultOfClockSupplyLine": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClockSupplyLine"
          }
        }
      }
    },
    "ClockSupplyLine": {
      "type": "object",
      "required": [
        "supplyLineId",
        "tradeItemId",
        "batchId",
        "numberOfPieces",
        "auctionDate",
        "auctionLocation",
        "auctionGroupCode",
        "qualityGroupCode",
        "packingConfiguration",
        "sequenceNumber",
        "isDeleted"
      ],
      "properties": {
        "supplyLineId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "batchId": {
          "type": "string",
          "format": "uuid"
        },
        "minimumPricePerPiece": {
          "$ref": "#/definitions/Price"
        },
        "minimumOrderQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "auctionDate": {
          "type": "string",
          "format": "date"
        },
        "auctionLocation": {
          "$ref": "#/definitions/AuctionLocation"
        },
        "auctionGroupCode": {
          "type": "integer",
          "format": "int32"
        },
        "qualityGroupCode": {
          "type": "string",
          "maxLength": 2
        },
        "serviceCode": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 0.0
        },
        "deliveryNoteCode": {
          "type": "string",
          "maxLength": 20
        },
        "packingConfiguration": {
          "$ref": "#/definitions/ClockSupplyLinePackingConfiguration"
        },
        "packingAgentOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "creationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "clockPresalesSupplyReference": {
          "type": "string",
          "format": "uuid"
        },
        "deliveryNoteReference": {
          "type": "string",
          "description": "DeliveryNoteCode + letter of the original clock delivery",
          "maxLength": 20
        },
        "auctionStatus": {
          "$ref": "#/definitions/AuctionStatusName"
        },
        "isDeleted": {
          "type": "boolean"
        }
      }
    },
    "Quantity": {
      "type": "object",
      "required": [
        "amount",
        "unit"
      ],
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int32"
        },
        "unit": {
          "$ref": "#/definitions/Unit"
        }
      }
    },
    "Unit": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "PIECE",
        "BUNCH",
        "PACKAGE",
        "LAYER",
        "LOADCARRIER"
      ],
      "enum": [
        "PIECE",
        "BUNCH",
        "PACKAGE",
        "LAYER",
        "LOADCARRIER"
      ]
    },
    "AuctionLocation": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "AALSMEER",
        "NAALDWIJK",
        "RIJNSBURG",
        "EELDE",
        "PLANTION",
        "RHEINMAAS",
        "DIGITAL"
      ],
      "enum": [
        "AALSMEER",
        "NAALDWIJK",
        "RIJNSBURG",
        "EELDE",
        "PLANTION",
        "RHEINMAAS",
        "DIGITAL"
      ]
    },
    "ClockSupplyLinePackingConfiguration": {
      "type": "object",
      "required": [
        "piecesPerPackage",
        "package",
        "packagesPerLayer",
        "layersPerLoadCarrier",
        "loadCarrier"
      ],
      "properties": {
        "piecesPerPackage": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 1.0
        },
        "package": {
          "$ref": "#/definitions/Package"
        },
        "packagesPerLayer": {
          "type": "integer",
          "format": "int32"
        },
        "layersPerLoadCarrier": {
          "type": "integer",
          "format": "int32"
        },
        "loadCarrier": {
          "$ref": "#/definitions/SupplyLoadCarrierType"
        }
      }
    },
    "Package": {
      "type": "object",
      "required": [
        "vbnPackageCode"
      ],
      "properties": {
        "vbnPackageCode": {
          "type": "integer",
          "format": "int32",
          "maximum": 999.0,
          "minimum": 1.0
        },
        "customPackageId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "SupplyLoadCarrierType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "NONE",
        "AUCTION_TROLLEY",
        "DANISH_TROLLEY",
        "EURO_TROLLEY",
        "PALLET",
        "EURO_PALLET"
      ],
      "enum": [
        "NONE",
        "AUCTION_TROLLEY",
        "DANISH_TROLLEY",
        "EURO_TROLLEY",
        "PALLET",
        "EURO_PALLET"
      ]
    },
    "AuctionStatusName": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "AUCTION_COMPLETED",
        "AUCTION_FINALIZING",
        "CANCELLED",
        "DESTROYED",
        "INVALID_FOR_AUCTION",
        "IN_AUCTION",
        "NEEDS_CORRECTION",
        "NOT_AUCTIONED",
        "NOT_QUEUED_FOR_AUCTION",
        "QUEUED_FOR_AUCTION",
        "RETOUR_SUPPLIER",
        "SKIPPED"
      ],
      "enum": [
        "AUCTION_COMPLETED",
        "AUCTION_FINALIZING",
        "CANCELLED",
        "DESTROYED",
        "INVALID_FOR_AUCTION",
        "IN_AUCTION",
        "NEEDS_CORRECTION",
        "NOT_AUCTIONED",
        "NOT_QUEUED_FOR_AUCTION",
        "QUEUED_FOR_AUCTION",
        "RETOUR_SUPPLIER",
        "SKIPPED"
      ]
    },
    "SyncResultOfClockPresalesSupplyLine": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClockPresalesSupplyLine"
          }
        }
      }
    },
    "ClockPresalesSupplyLine": {
      "type": "object",
      "required": [
        "supplyLineId",
        "status",
        "tradeItemId",
        "pricePerPiece",
        "deliveryNoteReference",
        "deliveryNoteCode",
        "deliveryNoteLetter",
        "numberOfPieces",
        "packingConfiguration",
        "tradePeriod",
        "supplierOrganizationId",
        "sequenceNumber",
        "creationDateTime",
        "auctionDate",
        "initialAuctionLocation",
        "photoUrl"
      ],
      "properties": {
        "supplyLineId": {
          "type": "string",
          "format": "uuid"
        },
        "status": {
          "$ref": "#/definitions/SupplyStatus"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemVersion": {
          "type": "integer",
          "format": "int32"
        },
        "batchId": {
          "type": "string",
          "format": "uuid"
        },
        "pricePerPiece": {
          "$ref": "#/definitions/Price"
        },
        "deliveryNoteReference": {
          "type": "string",
          "description": "DeliveryNoteCode + letter of the original clock delivery",
          "maxLength": 20
        },
        "deliveryNoteCode": {
          "type": "string",
          "maxLength": 10
        },
        "deliveryNoteLetter": {
          "type": "string",
          "maxLength": 1
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 0.0
        },
        "packingConfiguration": {
          "$ref": "#/definitions/ClockSupplyLinePackingConfiguration"
        },
        "tradePeriod": {
          "$ref": "#/definitions/TradePeriod"
        },
        "supplierOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "creationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "auctionDate": {
          "type": "string",
          "format": "date-time"
        },
        "initialAuctionLocation": {
          "$ref": "#/definitions/AuctionLocation"
        },
        "photoUrl": {
          "type": "string",
          "description": "Image URLs posted as Floriday media must conform with the following format https://image.floriday.io/.",
          "maxLength": 200
        }
      }
    },
    "SupplyStatus": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "AVAILABLE",
        "UNAVAILABLE",
        "DELETED"
      ],
      "enum": [
        "AVAILABLE",
        "UNAVAILABLE",
        "DELETED"
      ]
    },
    "TradePeriod": {
      "type": "object",
      "required": [
        "startDateTime",
        "endDateTime"
      ],
      "properties": {
        "startDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "endDateTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AddClockPresalesSupplyLine": {
      "type": "object",
      "required": [
        "clockSupplyLineId",
        "pricePerPiece"
      ],
      "properties": {
        "clockSupplyLineId": {
          "type": "string",
          "format": "uuid"
        },
        "pricePerPiece": {
          "type": "number",
          "format": "decimal",
          "maximum": 9999.999,
          "minimum": 0.001
        }
      }
    },
    "EditClockPresalesSupplyLine": {
      "type": "object",
      "required": [
        "pricePerPiece",
        "numberOfPieces"
      ],
      "properties": {
        "pricePerPiece": {
          "type": "number",
          "format": "double",
          "maximum": 10000000000000000.0,
          "minimum": 0.001
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AddClockSalesFromNurserySupplyLine": {
      "type": "object",
      "required": [
        "clockSalesFromNurserySupplyLineId",
        "tradeItemId",
        "imageUrl",
        "auctionDate",
        "despatchWarehouseId",
        "batchId",
        "batchReference",
        "minimumPricePerPiece",
        "currency",
        "numberOfPieces",
        "loadCarrierType",
        "vbnPackageCode",
        "layersPerLoadCarrier",
        "packagesPerLayer",
        "piecesPerPackage"
      ],
      "properties": {
        "clockSalesFromNurserySupplyLineId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "imageUrl": {
          "type": "string",
          "description": "Image URLs posted as Floriday media must conform with the following format https://image.floriday.io/.",
          "maxLength": 200
        },
        "auctionDate": {
          "type": "string",
          "format": "date-time"
        },
        "despatchWarehouseId": {
          "type": "string",
          "format": "uuid"
        },
        "batchId": {
          "type": "string",
          "format": "uuid"
        },
        "batchReference": {
          "type": "string",
          "maxLength": 13
        },
        "remarks": {
          "type": "string",
          "maxLength": 50
        },
        "minimumPricePerPiece": {
          "type": "number",
          "format": "decimal",
          "minimum": 0.001
        },
        "currency": {
          "$ref": "#/definitions/Currency"
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "loadCarrierType": {
          "$ref": "#/definitions/LoadCarrierType"
        },
        "vbnPackageCode": {
          "type": "integer",
          "format": "int32",
          "maximum": 999.0,
          "minimum": 1.0
        },
        "layersPerLoadCarrier": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "packagesPerLayer": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "piecesPerPackage": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        }
      }
    },
    "LoadCarrierType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "NONE",
        "AUCTION_TROLLEY",
        "DANISH_TROLLEY",
        "EURO_TROLLEY",
        "PALLET",
        "EURO_PALLET",
        "DANISH_TROLLEY_NON_CC_RFID",
        "DANISH_TROLLEY_WATER_TRAY",
        "WATERING_CONTAINER"
      ],
      "enum": [
        "NONE",
        "AUCTION_TROLLEY",
        "DANISH_TROLLEY",
        "EURO_TROLLEY",
        "PALLET",
        "EURO_PALLET",
        "DANISH_TROLLEY_NON_CC_RFID",
        "DANISH_TROLLEY_WATER_TRAY",
        "WATERING_CONTAINER"
      ]
    },
    "SyncResultOfBaseItem": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseItem"
          }
        }
      }
    },
    "BaseItem": {
      "type": "object",
      "required": [
        "baseItemId",
        "baseItemName",
        "baseItemType",
        "isDeleted",
        "sequenceNumber"
      ],
      "properties": {
        "baseItemId": {
          "type": "string",
          "format": "uuid"
        },
        "baseItemName": {
          "type": "string",
          "maxLength": 120,
          "minLength": 1
        },
        "baseItemType": {
          "$ref": "#/definitions/BaseItemType"
        },
        "seasonalPeriods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SeasonalPeriod"
          }
        },
        "imageUrl": {
          "type": "string",
          "maxLength": 255
        },
        "isDeleted": {
          "type": "boolean"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "BaseItemType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "BASE_ITEM",
        "POT"
      ],
      "enum": [
        "BASE_ITEM",
        "POT"
      ]
    },
    "SeasonalPeriod": {
      "type": "object",
      "required": [
        "startWeek",
        "endWeek"
      ],
      "properties": {
        "startWeek": {
          "type": "integer",
          "format": "int32",
          "maximum": 53.0,
          "minimum": 1.0
        },
        "endWeek": {
          "type": "integer",
          "format": "int32",
          "maximum": 53.0,
          "minimum": 1.0
        }
      }
    },
    "BaseItemCreate": {
      "type": "object",
      "required": [
        "baseItemId",
        "baseItemName",
        "baseItemType"
      ],
      "properties": {
        "baseItemId": {
          "type": "string",
          "format": "uuid"
        },
        "baseItemName": {
          "type": "string",
          "maxLength": 120,
          "minLength": 1
        },
        "baseItemType": {
          "$ref": "#/definitions/BaseItemType"
        },
        "seasonalPeriods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SeasonalPeriod"
          }
        },
        "imageUrl": {
          "type": "string",
          "description": "Image URLs posted as Floriday media must conform with the following format https://image.floriday.io/.",
          "maxLength": 255
        }
      }
    },
    "BaseItemUpdate": {
      "type": "object",
      "required": [
        "baseItemName"
      ],
      "properties": {
        "baseItemName": {
          "type": "string",
          "maxLength": 120,
          "minLength": 1
        },
        "seasonalPeriods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SeasonalPeriod"
          }
        },
        "imageUrl": {
          "type": "string",
          "description": "Image URLs posted as Floriday media must conform with the following format https://image.floriday.io/.",
          "maxLength": 255
        }
      }
    },
    "Batch": {
      "type": "object",
      "required": [
        "batchDate",
        "batchId",
        "tradeItemId",
        "numberOfPieces",
        "packingConfiguration",
        "warehouseId",
        "sequenceNumber"
      ],
      "properties": {
        "batchDate": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        },
        "batchId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 0.0
        },
        "initialNumberOfPieces": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "packingConfiguration": {
          "$ref": "#/definitions/BatchPackingConfiguration"
        },
        "warehouseId": {
          "type": "string",
          "format": "uuid"
        },
        "imageUrl": {
          "type": "string",
          "maxLength": 255
        },
        "batchReference": {
          "type": "string",
          "maxLength": 13
        },
        "customReference": {
          "type": "string",
          "maxLength": 4,
          "pattern": "^[0-9]+$"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "transitStatus": {
          "$ref": "#/definitions/TransitStatus"
        },
        "tradeItemVersion": {
          "type": "integer",
          "format": "int32"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "creationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BatchPackingConfiguration": {
      "type": "object",
      "required": [
        "piecesPerPackage",
        "package",
        "loadCarrier",
        "layersPerLoadCarrier"
      ],
      "properties": {
        "piecesPerPackage": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 1.0
        },
        "package": {
          "$ref": "#/definitions/Package"
        },
        "loadCarrier": {
          "$ref": "#/definitions/SupplyLoadCarrierType"
        },
        "layersPerLoadCarrier": {
          "type": "integer",
          "format": "int32"
        },
        "packagesPerLayer": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TransitStatus": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "IN_TRANSIT",
        "DELIVERED",
        "UNKNOWN"
      ],
      "enum": [
        "IN_TRANSIT",
        "DELIVERED",
        "UNKNOWN"
      ]
    },
    "SyncResultOfBatch": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Batch"
          }
        }
      }
    },
    "SyncResultOfBatchMutation": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchMutation"
          }
        }
      }
    },
    "BatchMutation": {
      "type": "object",
      "required": [
        "batchMutationId",
        "batchId",
        "deltaNumberOfPieces",
        "addedOn",
        "type",
        "sequenceNumber"
      ],
      "properties": {
        "batchMutationId": {
          "type": "string",
          "format": "uuid"
        },
        "batchId": {
          "type": "string",
          "format": "uuid"
        },
        "deltaNumberOfPieces": {
          "type": "integer",
          "format": "int32"
        },
        "reason": {
          "type": "string"
        },
        "targetBatchId": {
          "type": "string",
          "format": "uuid"
        },
        "addedOn": {
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "$ref": "#/definitions/BatchMutationType"
        },
        "salesOrderId": {
          "type": "string",
          "format": "uuid"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "BatchMutationType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "UNKNOWN",
        "CLAIM",
        "UNCLAIM",
        "CORRECTION",
        "RESERVATION",
        "CLAIMED_FROM_RESERVATION",
        "RELEASED_RESESRVATION",
        "WAREHOUSE_CHANGE",
        "TRANSFORMATION",
        "COMBINE",
        "SPLIT"
      ],
      "enum": [
        "UNKNOWN",
        "CLAIM",
        "UNCLAIM",
        "CORRECTION",
        "RESERVATION",
        "CLAIMED_FROM_RESERVATION",
        "RELEASED_RESESRVATION",
        "WAREHOUSE_CHANGE",
        "TRANSFORMATION",
        "COMBINE",
        "SPLIT"
      ]
    },
    "AddBatch": {
      "type": "object",
      "required": [
        "batchDate",
        "batchId",
        "tradeItemId",
        "numberOfPieces",
        "packingConfiguration",
        "warehouseId"
      ],
      "properties": {
        "batchDate": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        },
        "batchId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "packingConfiguration": {
          "$ref": "#/definitions/AddBatchPackingConfiguration"
        },
        "warehouseId": {
          "type": "string",
          "format": "uuid"
        },
        "imageUrl": {
          "type": "string",
          "description": "Image URLs posted as Floriday media must conform with the following format https://image.floriday.io/.",
          "maxLength": 255
        },
        "batchReference": {
          "type": "string",
          "maxLength": 13
        },
        "customReference": {
          "type": "string",
          "maxLength": 4,
          "pattern": "^[0-9]+$"
        },
        "transitStatus": {
          "$ref": "#/definitions/TransitStatus"
        }
      }
    },
    "AddBatchPackingConfiguration": {
      "type": "object",
      "required": [
        "piecesPerPackage",
        "layersPerLoadCarrier",
        "packagesPerLayer",
        "package",
        "loadCarrier"
      ],
      "properties": {
        "piecesPerPackage": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 1.0
        },
        "layersPerLoadCarrier": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 1.0
        },
        "packagesPerLayer": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 1.0
        },
        "package": {
          "$ref": "#/definitions/Package"
        },
        "loadCarrier": {
          "$ref": "#/definitions/SupplyLoadCarrierType"
        }
      }
    },
    "QuantityCorrection": {
      "type": "object",
      "required": [
        "correctionId"
      ],
      "properties": {
        "correctionId": {
          "type": "string",
          "format": "uuid"
        },
        "deltaInPieces": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": -2147483648.0
        },
        "newNumberOfPieces": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 0.0
        },
        "reason": {
          "type": "string",
          "maxLength": 255
        }
      }
    },
    "TransformBatchRequest": {
      "type": "object",
      "required": [
        "newBatchId"
      ],
      "properties": {
        "newBatchId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "packingConfiguration": {
          "$ref": "#/definitions/TransformBatchRequestPackingConfiguration"
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        }
      }
    },
    "TransformBatchRequestPackingConfiguration": {
      "type": "object",
      "required": [
        "piecesPerPackage",
        "layersPerLoadCarrier",
        "packagesPerLayer",
        "package",
        "loadCarrierType"
      ],
      "properties": {
        "piecesPerPackage": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 1.0
        },
        "layersPerLoadCarrier": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 1.0
        },
        "packagesPerLayer": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 1.0
        },
        "package": {
          "$ref": "#/definitions/Package"
        },
        "loadCarrierType": {
          "$ref": "#/definitions/LoadCarrierType"
        },
        "packageLength": {
          "type": "integer",
          "format": "int32"
        },
        "packageWidth": {
          "type": "integer",
          "format": "int32"
        },
        "photoUrl": {
          "type": "string",
          "description": "Image URLs posted as Floriday media must conform with the following format https://image.floriday.io/.",
          "maxLength": 255
        },
        "transportHeightInCm": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        }
      }
    },
    "CombineAndTransformBatchesRequest": {
      "type": "object",
      "required": [
        "batchesToCombine",
        "newBatchId",
        "tradeItemId",
        "numberOfPieces",
        "packingConfiguration"
      ],
      "properties": {
        "batchesToCombine": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchToCombine"
          }
        },
        "newBatchId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32"
        },
        "packingConfiguration": {
          "$ref": "#/definitions/TransformBatchRequestPackingConfiguration"
        },
        "customReference": {
          "type": "string",
          "maxLength": 4,
          "pattern": "^[0-9]+$"
        },
        "imageUrl": {
          "type": "string",
          "description": "Image URLs posted as Floriday media must conform with the following format https://image.floriday.io/.",
          "maxLength": 255
        }
      }
    },
    "BatchToCombine": {
      "type": "object",
      "required": [
        "batchId",
        "numberOfPieces"
      ],
      "properties": {
        "batchId": {
          "type": "string",
          "format": "uuid"
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SyncResultOfBlanketOrder": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BlanketOrder"
          }
        }
      }
    },
    "BlanketOrder": {
      "type": "object",
      "required": [
        "blanketOrderId",
        "contractId",
        "deliveryDateTime",
        "customerOrganizationId",
        "status",
        "blanketOrderLines",
        "isInitiatedBySupplier",
        "creationDateTime",
        "lastModifiedDateTime",
        "salesChannelInterface",
        "sequenceNumber"
      ],
      "properties": {
        "blanketOrderId": {
          "type": "string",
          "format": "uuid"
        },
        "contractId": {
          "type": "string",
          "format": "uuid"
        },
        "deliveryDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "customerOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "carrierOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "status": {
          "$ref": "#/definitions/BlanketOrderStatus"
        },
        "blanketOrderLines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BlanketOrderLine"
          }
        },
        "isInitiatedBySupplier": {
          "type": "boolean"
        },
        "creationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "isLastModifiedBySupplier": {
          "type": "boolean"
        },
        "salesChannelInterface": {
          "$ref": "#/definitions/SalesChannelInterface"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "BlanketOrderStatus": {
      "type": "object",
      "required": [
        "approvalStatus",
        "isDeleted"
      ],
      "properties": {
        "approvalStatus": {
          "$ref": "#/definitions/ApprovalStatus"
        },
        "declineDescription": {
          "type": "string",
          "maxLength": 2047
        },
        "isDeleted": {
          "type": "boolean"
        }
      }
    },
    "ApprovalStatus": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "UNKNOWN",
        "DRAFT",
        "FINALIZED",
        "APPROVED",
        "DECLINED"
      ],
      "enum": [
        "UNKNOWN",
        "DRAFT",
        "FINALIZED",
        "APPROVED",
        "DECLINED"
      ]
    },
    "BlanketOrderLine": {
      "type": "object",
      "required": [
        "blanketOrderLineId",
        "contractLinePeriodId",
        "tradeItemId",
        "supplierOrganizationId",
        "numberOfPieces",
        "deliveryLocationGln",
        "incoterm",
        "liesOutsideOfContractLinePeriodMargins"
      ],
      "properties": {
        "blanketOrderLineId": {
          "type": "string",
          "format": "uuid"
        },
        "contractLinePeriodId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "batchId": {
          "type": "string",
          "format": "uuid"
        },
        "supplierOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "despatchWarehouseId": {
          "type": "string",
          "format": "uuid"
        },
        "additionalServiceIds": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "customerOrderReference": {
          "type": "string",
          "maxLength": 26
        },
        "packingConfiguration": {
          "$ref": "#/definitions/PackingConfigurationBase"
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 0.0
        },
        "pricePerPiece": {
          "$ref": "#/definitions/Price"
        },
        "deliveryLocationGln": {
          "type": "string",
          "maxLength": 13
        },
        "incoterm": {
          "$ref": "#/definitions/Incoterm"
        },
        "liesOutsideOfContractLinePeriodMargins": {
          "type": "boolean"
        }
      }
    },
    "PackingConfigurationBase": {
      "type": "object",
      "required": [
        "piecesPerPackage",
        "vbnPackageCode",
        "packagesPerLayer",
        "layersPerLoadCarrier",
        "loadCarrier"
      ],
      "properties": {
        "piecesPerPackage": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 1.0
        },
        "vbnPackageCode": {
          "type": "integer",
          "format": "int32",
          "maximum": 999.0,
          "minimum": 1.0
        },
        "customPackageId": {
          "type": "string",
          "format": "uuid"
        },
        "packagesPerLayer": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 1.0
        },
        "layersPerLoadCarrier": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 1.0
        },
        "loadCarrier": {
          "$ref": "#/definitions/LoadCarrierType"
        },
        "photoUrl": {
          "type": "string",
          "description": "Image URLs posted as Floriday media must conform with the following format https://image.floriday.io/.",
          "maxLength": 255
        }
      }
    },
    "Incoterm": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "DDP",
        "EXW",
        "DAP",
        "FCA",
        "FOB",
        "CPT",
        "CIP",
        "DPU",
        "FAS",
        "CFR",
        "CIF"
      ],
      "enum": [
        "DDP",
        "EXW",
        "DAP",
        "FCA",
        "FOB",
        "CPT",
        "CIP",
        "DPU",
        "FAS",
        "CFR",
        "CIF"
      ]
    },
    "SalesChannelInterface": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "UI",
        "VMP",
        "API",
        "UNKNOWN"
      ],
      "enum": [
        "UI",
        "VMP",
        "API",
        "UNKNOWN"
      ]
    },
    "EditBlanketOrder": {
      "type": "object",
      "required": [
        "deliveryDateTime",
        "blanketOrderLines"
      ],
      "properties": {
        "deliveryDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "carrierOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "blanketOrderLines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EditBlanketOrderLine"
          }
        }
      }
    },
    "EditBlanketOrderLine": {
      "type": "object",
      "required": [
        "blanketOrderLineId",
        "contractLinePeriodId",
        "tradeItemId",
        "despatchWarehouseId",
        "packingConfiguration",
        "numberOfPieces",
        "pricePerPiece",
        "incoterm"
      ],
      "properties": {
        "blanketOrderLineId": {
          "type": "string",
          "format": "uuid"
        },
        "contractLinePeriodId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "batchId": {
          "type": "string",
          "format": "uuid"
        },
        "despatchWarehouseId": {
          "type": "string",
          "format": "uuid"
        },
        "additionalServiceIds": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "customerOrderReference": {
          "type": "string",
          "maxLength": 26,
          "minLength": 1
        },
        "packingConfiguration": {
          "$ref": "#/definitions/PackingConfigurationBase"
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32"
        },
        "pricePerPiece": {
          "$ref": "#/definitions/Price"
        },
        "deliveryLocationGln": {
          "type": "string",
          "maxLength": 13,
          "minLength": 13
        },
        "incoterm": {
          "$ref": "#/definitions/Incoterm"
        }
      }
    },
    "AddBlanketOrder": {
      "type": "object",
      "required": [
        "blanketOrderId",
        "contractId",
        "deliveryDateTime",
        "customerOrganizationId",
        "blanketOrderLines"
      ],
      "properties": {
        "blanketOrderId": {
          "type": "string",
          "format": "uuid"
        },
        "contractId": {
          "type": "string",
          "format": "uuid"
        },
        "deliveryDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "customerOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "carrierOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "blanketOrderLines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EditBlanketOrderLine"
          }
        }
      }
    },
    "SyncResultOfBundledOffer": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BundledOffer"
          }
        }
      }
    },
    "BundledOffer": {
      "type": "object",
      "required": [
        "bundledOfferId",
        "pricePerBundle",
        "isDraft",
        "title",
        "description",
        "includedServices",
        "numberOfBundles",
        "isCustomerSpecific",
        "customerOrganizationIds",
        "orderPeriod",
        "deliveryPeriod",
        "sequenceNumber",
        "bundledOfferLines",
        "isDeleted"
      ],
      "properties": {
        "bundledOfferId": {
          "type": "string",
          "format": "uuid"
        },
        "warehouseId": {
          "type": "string",
          "format": "uuid"
        },
        "pricePerBundle": {
          "$ref": "#/definitions/Price"
        },
        "isDraft": {
          "type": "boolean"
        },
        "imageUrl": {
          "type": "string",
          "maxLength": 255
        },
        "title": {
          "type": "string",
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "maxLength": 800
        },
        "defaultPhotoCode": {
          "type": "string",
          "maxLength": 255
        },
        "includedServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommercialService"
          }
        },
        "numberOfBundles": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 0.0
        },
        "isCustomerSpecific": {
          "type": "boolean"
        },
        "customerOrganizationIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "orderPeriod": {
          "$ref": "#/definitions/TradePeriod"
        },
        "deliveryPeriod": {
          "$ref": "#/definitions/TradePeriod"
        },
        "agreementReference": {
          "$ref": "#/definitions/AgreementReference"
        },
        "creationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "bundledOfferLines": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/BundledOfferLine"
          }
        },
        "isDeleted": {
          "type": "boolean"
        }
      }
    },
    "CommercialService": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "DELIVERY",
        "STICKERING",
        "NONE"
      ],
      "enum": [
        "DELIVERY",
        "STICKERING",
        "NONE"
      ]
    },
    "AgreementReference": {
      "type": "object",
      "required": [
        "code",
        "description"
      ],
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 13,
          "minLength": 1
        },
        "description": {
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        }
      }
    },
    "BundledOfferLine": {
      "type": "object",
      "required": [
        "bundledOfferLineId",
        "tradeItemId",
        "tradeItemVersion",
        "price",
        "numberOfPiecesPerBundle",
        "packingConfiguration"
      ],
      "properties": {
        "bundledOfferLineId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemVersion": {
          "type": "integer",
          "format": "int32"
        },
        "price": {
          "$ref": "#/definitions/Price"
        },
        "numberOfPiecesPerBundle": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "packingConfiguration": {
          "$ref": "#/definitions/PackingConfiguration"
        }
      }
    },
    "PackingConfiguration": {
      "type": "object",
      "required": [
        "primary",
        "piecesPerPackage",
        "package",
        "packagesPerLayer",
        "layersPerLoadCarrier",
        "loadCarrier"
      ],
      "properties": {
        "primary": {
          "type": "boolean"
        },
        "piecesPerPackage": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 1.0
        },
        "package": {
          "$ref": "#/definitions/Package"
        },
        "packagesPerLayer": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 1.0
        },
        "layersPerLoadCarrier": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 1.0
        },
        "loadCarrier": {
          "$ref": "#/definitions/SupplyLoadCarrierType"
        },
        "photoUrl": {
          "type": "string",
          "description": "Image URLs posted as Floriday media must conform with the following format https://image.floriday.io/.",
          "maxLength": 255
        },
        "allowedCustomerOrganizationIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "AddBundledOffer": {
      "type": "object",
      "required": [
        "bundledOfferId",
        "warehouseId",
        "isDraft",
        "title",
        "description",
        "includedServices",
        "numberOfBundles",
        "orderPeriod",
        "deliveryPeriod",
        "bundledOfferLines"
      ],
      "properties": {
        "bundledOfferId": {
          "type": "string",
          "format": "uuid"
        },
        "warehouseId": {
          "type": "string",
          "format": "uuid"
        },
        "isDraft": {
          "type": "boolean"
        },
        "imageUrl": {
          "type": "string",
          "description": "Image URLs posted as Floriday media must conform with the following format https://image.floriday.io/.",
          "maxLength": 255
        },
        "title": {
          "type": "string",
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "maxLength": 800
        },
        "defaultPhotoCode": {
          "type": "string",
          "maxLength": 255
        },
        "includedServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommercialService"
          }
        },
        "numberOfBundles": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "orderPeriod": {
          "$ref": "#/definitions/TradePeriod"
        },
        "deliveryPeriod": {
          "$ref": "#/definitions/TradePeriod"
        },
        "agreementReference": {
          "$ref": "#/definitions/AgreementReference"
        },
        "customerOrganizationIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "bundledOfferLines": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/AddOrEditBundledOfferLine"
          }
        }
      }
    },
    "AddOrEditBundledOfferLine": {
      "type": "object",
      "required": [
        "bundledOfferLineId",
        "tradeItemId",
        "price",
        "numberOfPiecesPerBundle",
        "packingConfiguration"
      ],
      "properties": {
        "bundledOfferLineId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "price": {
          "$ref": "#/definitions/Price"
        },
        "numberOfPiecesPerBundle": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "packingConfiguration": {
          "$ref": "#/definitions/PackingConfiguration"
        }
      }
    },
    "EditBundledOffer": {
      "type": "object",
      "required": [
        "warehouseId",
        "isDraft",
        "title",
        "includedServices",
        "numberOfBundles",
        "orderPeriod",
        "deliveryPeriod",
        "bundledOfferLines"
      ],
      "properties": {
        "warehouseId": {
          "type": "string",
          "format": "uuid"
        },
        "isDraft": {
          "type": "boolean"
        },
        "imageUrl": {
          "type": "string",
          "description": "Image URLs posted as Floriday media must conform with the following format https://image.floriday.io/.",
          "maxLength": 255
        },
        "title": {
          "type": "string",
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "maxLength": 800
        },
        "defaultPhotoCode": {
          "type": "string",
          "maxLength": 255
        },
        "includedServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommercialService"
          }
        },
        "numberOfBundles": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 0.0
        },
        "orderPeriod": {
          "$ref": "#/definitions/TradePeriod"
        },
        "deliveryPeriod": {
          "$ref": "#/definitions/TradePeriod"
        },
        "agreementReference": {
          "$ref": "#/definitions/AgreementReference"
        },
        "customerOrganizationIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "bundledOfferLines": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/AddOrEditBundledOfferLine"
          }
        }
      }
    },
    "WeeklySupplyLine": {
      "type": "object",
      "required": [
        "supplyLineId",
        "tradeItemId",
        "pricePerPiece",
        "numberOfPieces",
        "tradePeriod",
        "allowedCustomerOrganizationIds"
      ],
      "properties": {
        "supplyLineId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "pricePerPiece": {
          "$ref": "#/definitions/Price"
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "tradePeriod": {
          "$ref": "#/definitions/WeeklyTradePeriod"
        },
        "allowedCustomerOrganizationIds": {
          "type": "array",
          "maxItems": 300,
          "minItems": 1,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "includedServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommercialService"
          }
        },
        "salesUnit": {
          "$ref": "#/definitions/SalesUnit"
        },
        "isPromo": {
          "type": "boolean"
        }
      }
    },
    "WeeklyTradePeriod": {
      "type": "object",
      "required": [
        "week",
        "year"
      ],
      "properties": {
        "week": {
          "type": "integer",
          "format": "int32",
          "maximum": 53.0,
          "minimum": 1.0
        },
        "year": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SalesUnit": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "PACKAGE",
        "LAYER",
        "LOADCARRIER",
        "SUPPLYLINE"
      ],
      "enum": [
        "PACKAGE",
        "LAYER",
        "LOADCARRIER",
        "SUPPLYLINE"
      ]
    },
    "WeeklySupplyLineUpdate": {
      "type": "object",
      "required": [
        "pricePerPiece",
        "numberOfPieces"
      ],
      "properties": {
        "pricePerPiece": {
          "$ref": "#/definitions/Price"
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 0.0
        },
        "allowedCustomerOrganizationIds": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "salesUnit": {
          "$ref": "#/definitions/SalesUnit"
        },
        "isPromo": {
          "type": "boolean"
        }
      }
    },
    "EditWeeklyBaseSupplyLines": {
      "type": "object",
      "required": [
        "tradeItemId",
        "numberOfPieces",
        "manualPriceGroupPrices"
      ],
      "properties": {
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "numberOfPieces": {
          "type": "integer",
          "description": "The number of pieces that will be communicated as the weekly supply amount",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 0.0
        },
        "basePricePerPiece": {
          "description": "The base price which will be used for the calculations",
          "allOf": [
            {
              "$ref": "#/definitions/Price"
            }
          ]
        },
        "manualPriceGroupPrices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EditWeeklyBaseSupplyManualPriceGroupPrice"
          }
        }
      }
    },
    "EditWeeklyBaseSupplyManualPriceGroupPrice": {
      "type": "object",
      "required": [
        "priceGroupId"
      ],
      "properties": {
        "priceGroupId": {
          "type": "string",
          "format": "uuid"
        },
        "manualPricePerPiece": {
          "type": "number",
          "description": "The manual price which will be used as the supply line price",
          "format": "decimal",
          "maximum": 10000000000000000.0,
          "minimum": 0.001
        }
      }
    },
    "WeeklyBaseSupplyCreate": {
      "type": "object",
      "required": [
        "basePricePerPiece",
        "numberOfPieces"
      ],
      "properties": {
        "basePricePerPiece": {
          "description": "The base price which will be used for the calculations",
          "allOf": [
            {
              "$ref": "#/definitions/Price"
            }
          ]
        },
        "numberOfPieces": {
          "type": "integer",
          "description": "The number of pieces that will be communicated as the weekly supply amount",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 0.0
        }
      }
    },
    "WeeklyBaseSupply": {
      "type": "object",
      "required": [
        "tradeItemId",
        "week",
        "year",
        "numberOfPieces",
        "priceGroupPrices"
      ],
      "properties": {
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "week": {
          "type": "integer",
          "format": "int32"
        },
        "year": {
          "type": "integer",
          "format": "int32"
        },
        "basePricePerPiece": {
          "$ref": "#/definitions/Price"
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 0.0
        },
        "priceGroupPrices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WeeklyBaseSupplyPriceGroupPrice"
          }
        }
      }
    },
    "WeeklyBaseSupplyPriceGroupPrice": {
      "type": "object",
      "required": [
        "priceGroupId",
        "pricePerpiece",
        "priceGroupType"
      ],
      "properties": {
        "priceGroupId": {
          "type": "string",
          "format": "uuid"
        },
        "pricePerpiece": {
          "type": "number",
          "format": "decimal",
          "maximum": 10000000000000000.0,
          "minimum": 0.001
        },
        "priceGroupType": {
          "$ref": "#/definitions/PriceGroupType"
        },
        "pricePerPieceLastModified": {
          "type": "string",
          "description": "This field is set when the price has been changed by the supplier. Catalog prices in a closed week can only be changed once per 24 hours.",
          "format": "date-time"
        }
      }
    },
    "PriceGroupType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "CALCULATED",
        "MANUAL"
      ],
      "enum": [
        "CALCULATED",
        "MANUAL"
      ]
    },
    "ContinuousStock": {
      "type": "object",
      "required": [
        "available"
      ],
      "properties": {
        "available": {
          "type": "boolean"
        },
        "excludedCustomerOrganizationIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "warehouseId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TradeItemAvailability": {
      "type": "object",
      "required": [
        "tradeItemId",
        "isAvailable",
        "sequenceNumber"
      ],
      "properties": {
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "isAvailable": {
          "type": "boolean"
        },
        "customerAvailability": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeItemCustomerAvailability"
          }
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TradeItemCustomerAvailability": {
      "type": "object",
      "required": [
        "customerOrganizationId",
        "isAvailable"
      ],
      "properties": {
        "customerOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "isAvailable": {
          "type": "boolean"
        }
      }
    },
    "SyncResultOfTradeItemAvailability": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeItemAvailability"
          }
        }
      }
    },
    "SyncResultOfCollection": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Collection"
          }
        }
      }
    },
    "Collection": {
      "type": "object",
      "required": [
        "collectionId",
        "sequenceNumber"
      ],
      "properties": {
        "collectionId": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string",
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "maxLength": 400
        },
        "imageUrl": {
          "type": "string",
          "maxLength": 255
        },
        "tradeItems": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "sortOrder": {
          "type": "integer",
          "format": "int32"
        },
        "isActive": {
          "type": "boolean"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CollectionCreate": {
      "type": "object",
      "required": [
        "collectionId",
        "name",
        "isActive"
      ],
      "properties": {
        "collectionId": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string",
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "maxLength": 400
        },
        "imageUrl": {
          "type": "string",
          "description": "Image URLs posted as Floriday media must conform with the following format https://image.floriday.io/.",
          "maxLength": 255
        },
        "isActive": {
          "type": "boolean"
        }
      }
    },
    "CollectionTradeItemIds": {
      "type": "object",
      "required": [
        "tradeItemIds"
      ],
      "properties": {
        "tradeItemIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "CollectionUpdate": {
      "type": "object",
      "required": [
        "name",
        "isActive"
      ],
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "maxLength": 400
        },
        "imageUrl": {
          "type": "string",
          "description": "Image URLs posted as Floriday media must conform with the following format https://image.floriday.io/.",
          "maxLength": 255
        },
        "isActive": {
          "type": "boolean"
        }
      }
    },
    "SyncResultOfCommercialServiceType": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommercialServiceType"
          }
        }
      }
    },
    "SyncResultOfConnection": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Connection"
          }
        }
      }
    },
    "Connection": {
      "type": "object",
      "required": [
        "customerOrganizationId",
        "lastModifiedDateTime",
        "isDeleted",
        "sequenceNumber"
      ],
      "properties": {
        "customerOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        },
        "isDeleted": {
          "type": "boolean"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SyncResultOfContract": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Contract"
          }
        }
      }
    },
    "Contract": {
      "type": "object",
      "required": [
        "contractId",
        "reference",
        "title",
        "startDateTime",
        "endDateTime",
        "customerOrganizationId",
        "supplierOrganizationId",
        "contractPeriodKind",
        "isInitiatedBySupplier",
        "allowTradeItemVariants",
        "allowAutomaticBlanketOrderApproval",
        "version",
        "status",
        "delivery",
        "currency",
        "paymentProvider",
        "creationDateTime",
        "lastModifiedDateTime",
        "contractLines",
        "sequenceNumber"
      ],
      "properties": {
        "contractId": {
          "type": "string",
          "format": "uuid"
        },
        "reference": {
          "type": "string",
          "description": "The reference of a contract remains the same between the different versions.",
          "maxLength": 13
        },
        "title": {
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "description": {
          "type": "string",
          "maxLength": 2047
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "endDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "customerOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "supplierOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "subSupplierOrganizationIds": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "contractPeriodKind": {
          "$ref": "#/definitions/ContractPeriodKind"
        },
        "isInitiatedBySupplier": {
          "type": "boolean"
        },
        "allowTradeItemVariants": {
          "type": "boolean",
          "description": "Allow the use of variants from the chosen trade item when creating a blanket order."
        },
        "allowAutomaticBlanketOrderApproval": {
          "type": "boolean"
        },
        "version": {
          "$ref": "#/definitions/ContractVersion"
        },
        "status": {
          "$ref": "#/definitions/ContractStatus"
        },
        "delivery": {
          "$ref": "#/definitions/ContractDelivery"
        },
        "currency": {
          "$ref": "#/definitions/Currency"
        },
        "paymentProvider": {
          "$ref": "#/definitions/PaymentProvider"
        },
        "creationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "contractLines": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/ContractLine"
          }
        },
        "attachmentDetails": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/AttachmentDetail"
          }
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ContractPeriodKind": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "NONE",
        "WEEK",
        "MONTH",
        "QUARTER"
      ],
      "enum": [
        "NONE",
        "WEEK",
        "MONTH",
        "QUARTER"
      ]
    },
    "ContractVersion": {
      "type": "object",
      "required": [
        "versionNumber",
        "isLatestApprovedVersion",
        "reasonForVersionUpdate"
      ],
      "properties": {
        "versionNumber": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "isLatestApprovedVersion": {
          "type": "boolean"
        },
        "reasonForVersionUpdate": {
          "type": "string",
          "maxLength": 2047
        }
      }
    },
    "ContractStatus": {
      "type": "object",
      "required": [
        "approvalStatus",
        "isDeleteRequestedBySupplier",
        "isDeleted"
      ],
      "properties": {
        "approvalStatus": {
          "$ref": "#/definitions/ApprovalStatus"
        },
        "approvedOnDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "declineDescription": {
          "type": "string",
          "maxLength": 2047
        },
        "isDeleteRequestedBySupplier": {
          "type": "boolean"
        },
        "isDeleted": {
          "type": "boolean"
        }
      }
    },
    "ContractDelivery": {
      "type": "object",
      "required": [
        "deliveryConditionId",
        "defaultIncoterm"
      ],
      "properties": {
        "deliveryConditionId": {
          "type": "string",
          "format": "uuid"
        },
        "defaultDeliveryLocationGln": {
          "type": "string",
          "maxLength": 13
        },
        "despatchWarehouseId": {
          "type": "string",
          "format": "uuid"
        },
        "defaultIncoterm": {
          "$ref": "#/definitions/Incoterm"
        },
        "nextLegIdentifier": {
          "type": "string",
          "maxLength": 13
        }
      }
    },
    "PaymentProvider": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "RFH",
        "VRM",
        "PLANTION",
        "UNKNOWN",
        "OTHER",
        "RFH_E_WALLET",
        "FX_SERVICES"
      ],
      "enum": [
        "RFH",
        "VRM",
        "PLANTION",
        "UNKNOWN",
        "OTHER",
        "RFH_E_WALLET",
        "FX_SERVICES"
      ]
    },
    "ContractLine": {
      "type": "object",
      "required": [
        "contractLineId",
        "tradeItem"
      ],
      "properties": {
        "contractLineId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItem": {
          "$ref": "#/definitions/ContractLineTradeItem"
        },
        "periods": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/ContractLinePeriod"
          }
        },
        "substituteTradeItems": {
          "type": "array",
          "description": "Only used for older contracts that don't work with ContractTradeItemGroup.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/ContractLineTradeItem"
          }
        },
        "additionalServices": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/ContractLineAdditionalService"
          }
        },
        "contractTradeItemGroupId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "ContractLineTradeItem": {
      "type": "object",
      "required": [
        "contractLineTradeItemId",
        "tradeItemId",
        "tradeItemVersion",
        "packingConfiguration"
      ],
      "properties": {
        "contractLineTradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "contractTradeItemGroupId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemVersion": {
          "type": "integer",
          "format": "int32"
        },
        "packingConfiguration": {
          "$ref": "#/definitions/PackingConfigurationBase"
        }
      }
    },
    "ContractLinePeriod": {
      "type": "object",
      "required": [
        "contractLinePeriodId",
        "startDateTime",
        "endDateTime",
        "pricePerPiece",
        "numberOfPieces"
      ],
      "properties": {
        "contractLinePeriodId": {
          "type": "string",
          "format": "uuid"
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "endDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "pricePerPiece": {
          "type": "number",
          "format": "decimal",
          "minimum": 0.0
        },
        "pricePerPieceMargin": {
          "$ref": "#/definitions/ContractLinePeriodBandwidthPricePerPiece"
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 0.0
        },
        "numberOfPiecesMargin": {
          "$ref": "#/definitions/ContractLinePeriodBandwidthNumberOfPieces"
        }
      }
    },
    "ContractLinePeriodBandwidthPricePerPiece": {
      "type": "object",
      "properties": {
        "lowerMarginPricePerPiece": {
          "type": "number",
          "format": "decimal",
          "minimum": 0.0
        },
        "upperMarginPricePerPiece": {
          "type": "number",
          "format": "decimal",
          "minimum": 0.0
        },
        "lowerMarginPercentage": {
          "type": "integer",
          "format": "int32",
          "maximum": 100.0,
          "minimum": 1.0
        },
        "upperMarginPercentage": {
          "type": "integer",
          "format": "int32",
          "maximum": 200.0,
          "minimum": 1.0
        }
      }
    },
    "ContractLinePeriodBandwidthNumberOfPieces": {
      "type": "object",
      "properties": {
        "lowerMarginNumberOfPieces": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 0.0
        },
        "upperMarginNumberOfPieces": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 0.0
        },
        "lowerMarginPercentage": {
          "type": "integer",
          "format": "int32",
          "maximum": 100.0,
          "minimum": 1.0
        },
        "upperMarginPercentage": {
          "type": "integer",
          "format": "int32",
          "maximum": 200.0,
          "minimum": 1.0
        }
      }
    },
    "ContractLineAdditionalService": {
      "type": "object",
      "required": [
        "additionalServiceId",
        "isOptional"
      ],
      "properties": {
        "additionalServiceId": {
          "type": "string",
          "format": "uuid"
        },
        "isOptional": {
          "type": "boolean"
        }
      }
    },
    "AttachmentDetail": {
      "type": "object",
      "required": [
        "attachmentId"
      ],
      "properties": {
        "attachmentId": {
          "type": "string",
          "format": "uuid"
        },
        "attachmentFileName": {
          "type": "string",
          "maxLength": 255
        }
      }
    },
    "AddContract": {
      "type": "object",
      "required": [
        "contractId",
        "title",
        "startDateTime",
        "endDateTime",
        "customerOrganizationId",
        "contractPeriodKind",
        "allowTradeItemVariants",
        "allowAutomaticBlanketOrderApproval",
        "delivery",
        "currency",
        "paymentProvider",
        "contractLines"
      ],
      "properties": {
        "contractId": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "description": {
          "type": "string",
          "maxLength": 2047,
          "minLength": 1
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "endDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "customerOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "subSupplierOrganizationIds": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "contractPeriodKind": {
          "$ref": "#/definitions/ContractPeriodKind"
        },
        "allowTradeItemVariants": {
          "type": "boolean",
          "description": "Allow the use of variants from the chosen trade item when creating a blanket order."
        },
        "allowAutomaticBlanketOrderApproval": {
          "type": "boolean"
        },
        "delivery": {
          "$ref": "#/definitions/EditContractDelivery"
        },
        "currency": {
          "$ref": "#/definitions/Currency"
        },
        "paymentProvider": {
          "$ref": "#/definitions/PaymentProvider"
        },
        "contractLines": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/EditContractLine"
          }
        }
      }
    },
    "EditContractDelivery": {
      "type": "object",
      "required": [
        "deliveryConditionId",
        "defaultIncoterm"
      ],
      "properties": {
        "deliveryConditionId": {
          "type": "string",
          "format": "uuid"
        },
        "defaultDeliveryLocationGln": {
          "type": "string",
          "maxLength": 13,
          "minLength": 13
        },
        "despatchWarehouseId": {
          "type": "string",
          "format": "uuid"
        },
        "defaultIncoterm": {
          "$ref": "#/definitions/Incoterm"
        },
        "nextLegIdentifier": {
          "type": "string",
          "maxLength": 13,
          "minLength": 1
        }
      }
    },
    "EditContractLine": {
      "type": "object",
      "required": [
        "contractLineId"
      ],
      "properties": {
        "contractLineId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItem": {
          "description": "Set either the 'tradeItem' or the 'tradeItemGroup'.",
          "allOf": [
            {
              "$ref": "#/definitions/EditContractLineTradeItem"
            }
          ]
        },
        "tradeItemGroup": {
          "description": "Set either the 'tradeItem' or the 'tradeItemGroup'.",
          "allOf": [
            {
              "$ref": "#/definitions/EditContractLineTradeItemGroup"
            }
          ]
        },
        "periods": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/EditContractLinePeriod"
          }
        },
        "additionalServices": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/EditContractLineAdditionalService"
          }
        }
      }
    },
    "EditContractLineTradeItem": {
      "type": "object",
      "required": [
        "contractLineTradeItemId",
        "tradeItemId",
        "packingConfiguration"
      ],
      "properties": {
        "contractLineTradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "packingConfiguration": {
          "$ref": "#/definitions/PackingConfigurationBase"
        }
      }
    },
    "EditContractLineTradeItemGroup": {
      "type": "object",
      "required": [
        "contractLineTradeItemId",
        "contractTradeItemGroupId"
      ],
      "properties": {
        "contractLineTradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "contractTradeItemGroupId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "EditContractLinePeriod": {
      "type": "object",
      "required": [
        "contractLinePeriodId",
        "startDateTime",
        "endDateTime",
        "pricePerPiece",
        "numberOfPieces"
      ],
      "properties": {
        "contractLinePeriodId": {
          "type": "string",
          "format": "uuid"
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "endDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "pricePerPiece": {
          "type": "number",
          "format": "decimal",
          "minimum": 0.0
        },
        "pricePerPieceMargin": {
          "$ref": "#/definitions/EditContractLinePeriodBandwidthPricePerPiece"
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 0.0
        },
        "numberOfPiecesMargin": {
          "$ref": "#/definitions/EditContractLinePeriodBandwidthNumberOfPieces"
        }
      }
    },
    "EditContractLinePeriodBandwidthPricePerPiece": {
      "type": "object",
      "properties": {
        "lowerMarginPricePerPiece": {
          "type": "number",
          "format": "decimal",
          "minimum": 0.0
        },
        "upperMarginPricePerPiece": {
          "type": "number",
          "format": "decimal",
          "minimum": 0.0
        },
        "lowerMarginPercentage": {
          "type": "integer",
          "format": "int32",
          "maximum": 100.0,
          "minimum": 1.0
        },
        "upperMarginPercentage": {
          "type": "integer",
          "format": "int32",
          "maximum": 200.0,
          "minimum": 1.0
        }
      }
    },
    "EditContractLinePeriodBandwidthNumberOfPieces": {
      "type": "object",
      "properties": {
        "lowerMarginNumberOfPieces": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 0.0
        },
        "upperMarginNumberOfPieces": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 0.0
        },
        "lowerMarginPercentage": {
          "type": "integer",
          "format": "int32",
          "maximum": 100.0,
          "minimum": 1.0
        },
        "upperMarginPercentage": {
          "type": "integer",
          "format": "int32",
          "maximum": 200.0,
          "minimum": 1.0
        }
      }
    },
    "EditContractLineAdditionalService": {
      "type": "object",
      "required": [
        "additionalServiceId",
        "isOptional"
      ],
      "properties": {
        "additionalServiceId": {
          "type": "string",
          "format": "uuid"
        },
        "isOptional": {
          "type": "boolean"
        }
      }
    },
    "AddContractVersion": {
      "type": "object",
      "required": [
        "contractId",
        "reasonForVersionUpdate",
        "title",
        "startDateTime",
        "endDateTime",
        "allowTradeItemVariants",
        "allowAutomaticBlanketOrderApproval",
        "delivery",
        "currency",
        "paymentProvider",
        "contractLines"
      ],
      "properties": {
        "contractId": {
          "type": "string",
          "format": "uuid"
        },
        "reasonForVersionUpdate": {
          "type": "string",
          "maxLength": 2047,
          "minLength": 1
        },
        "title": {
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "description": {
          "type": "string",
          "maxLength": 2047,
          "minLength": 1
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "endDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "subSupplierOrganizationIds": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "allowTradeItemVariants": {
          "type": "boolean",
          "description": "Allow the use of variants from the chosen trade item when creating a blanket order."
        },
        "allowAutomaticBlanketOrderApproval": {
          "type": "boolean"
        },
        "delivery": {
          "$ref": "#/definitions/EditContractDelivery"
        },
        "currency": {
          "$ref": "#/definitions/Currency"
        },
        "paymentProvider": {
          "$ref": "#/definitions/PaymentProvider"
        },
        "contractLines": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/EditContractLine"
          }
        }
      }
    },
    "EditContract": {
      "type": "object",
      "required": [
        "title",
        "startDateTime",
        "endDateTime",
        "allowTradeItemVariants",
        "allowAutomaticBlanketOrderApproval",
        "delivery",
        "currency",
        "paymentProvider",
        "contractLines"
      ],
      "properties": {
        "title": {
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "description": {
          "type": "string",
          "maxLength": 2047,
          "minLength": 1
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "endDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "subSupplierOrganizationIds": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "allowTradeItemVariants": {
          "type": "boolean",
          "description": "Allow the use of variants from the chosen trade item when creating a blanket order."
        },
        "allowAutomaticBlanketOrderApproval": {
          "type": "boolean"
        },
        "delivery": {
          "$ref": "#/definitions/EditContractDelivery"
        },
        "currency": {
          "$ref": "#/definitions/Currency"
        },
        "paymentProvider": {
          "$ref": "#/definitions/PaymentProvider"
        },
        "contractLines": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/EditContractLine"
          }
        }
      }
    },
    "DeclineContract": {
      "type": "object",
      "required": [
        "declineDescription"
      ],
      "properties": {
        "declineDescription": {
          "type": "string",
          "maxLength": 2047
        }
      }
    },
    "ContractTradeItemGroup": {
      "type": "object",
      "required": [
        "contractTradeItemGroupId",
        "supplierOrganizationId",
        "name",
        "tradeItems",
        "creationDateTime",
        "isDeleted",
        "sequenceNumber"
      ],
      "properties": {
        "contractTradeItemGroupId": {
          "type": "string",
          "format": "uuid"
        },
        "supplierOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "tradeItems": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/ContractTradeItemGroupTradeItem"
          }
        },
        "creationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ContractTradeItemGroupTradeItem": {
      "type": "object",
      "required": [
        "tradeItemId",
        "isPrimary",
        "packingConfiguration",
        "isDeleted"
      ],
      "properties": {
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "isPrimary": {
          "type": "boolean"
        },
        "packingConfiguration": {
          "$ref": "#/definitions/PackingConfigurationBase"
        },
        "isDeleted": {
          "type": "boolean"
        }
      }
    },
    "SyncResultOfContractTradeItemGroup": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractTradeItemGroup"
          }
        }
      }
    },
    "AddCustomerOffer": {
      "type": "object",
      "required": [
        "supplyLineId",
        "tradeItemId",
        "availability",
        "numberOfPieces",
        "pricePerPiece",
        "orderPeriod",
        "deliveryPeriod",
        "warehouseId",
        "allowedCustomerOrganizationIds",
        "salesUnit"
      ],
      "properties": {
        "supplyLineId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "availability": {
          "$ref": "#/definitions/Availability"
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 0.0
        },
        "pricePerPiece": {
          "$ref": "#/definitions/Price"
        },
        "orderPeriod": {
          "$ref": "#/definitions/TradePeriod"
        },
        "deliveryPeriod": {
          "$ref": "#/definitions/TradePeriod"
        },
        "warehouseId": {
          "type": "string",
          "format": "uuid"
        },
        "includedServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommercialService"
          }
        },
        "allowedCustomerOrganizationIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "packingConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PackingConfigurationBase"
          }
        },
        "salesUnit": {
          "$ref": "#/definitions/SalesUnit"
        },
        "agreementReference": {
          "$ref": "#/definitions/AgreementReference"
        },
        "batchId": {
          "type": "string",
          "format": "uuid"
        },
        "volumePrices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddVolumePrice"
          }
        }
      }
    },
    "Availability": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "LIMITED",
        "CONTINUOUS"
      ],
      "enum": [
        "LIMITED",
        "CONTINUOUS"
      ]
    },
    "AddVolumePrice": {
      "type": "object",
      "required": [
        "unit",
        "pricePerPiece"
      ],
      "properties": {
        "unit": {
          "$ref": "#/definitions/AddVolumePriceUnit"
        },
        "pricePerPiece": {
          "type": "number",
          "format": "double",
          "minimum": 0.0
        }
      }
    },
    "AddVolumePriceUnit": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "LAYER",
        "LOAD_CARRIER"
      ],
      "enum": [
        "LAYER",
        "LOAD_CARRIER"
      ]
    },
    "EditCustomerOffer": {
      "type": "object",
      "required": [
        "numberOfPieces",
        "pricePerPiece",
        "warehouseId",
        "allowedCustomers"
      ],
      "properties": {
        "numberOfPieces": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 0.0
        },
        "pricePerPiece": {
          "$ref": "#/definitions/Price"
        },
        "warehouseId": {
          "type": "string",
          "format": "uuid"
        },
        "packingConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PackingConfigurationBase"
          }
        },
        "salesUnit": {
          "$ref": "#/definitions/SalesUnit"
        },
        "agreementReference": {
          "$ref": "#/definitions/AgreementReference"
        },
        "allowedCustomers": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "volumePrices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddVolumePrice"
          }
        }
      }
    },
    "SyncResultOfCustomerSticker": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerSticker"
          }
        }
      }
    },
    "CustomerSticker": {
      "type": "object",
      "required": [
        "stickerId",
        "customerOrganizationId",
        "supplierOrganizationId",
        "deliveryDateTime",
        "stickerType",
        "despatchWarehouseId",
        "isHandled",
        "isDeleted",
        "sequenceNumber",
        "compositions"
      ],
      "properties": {
        "stickerId": {
          "type": "string",
          "format": "uuid"
        },
        "customerOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "supplierOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "deliveryDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "stickerType": {
          "$ref": "#/definitions/StickerType"
        },
        "salesOrderId": {
          "type": "string",
          "format": "uuid"
        },
        "despatchWarehouseId": {
          "type": "string",
          "format": "uuid"
        },
        "additionalInformation": {
          "type": "string",
          "maxLength": 255
        },
        "stickerSize": {
          "$ref": "#/definitions/Size"
        },
        "isHandled": {
          "type": "boolean"
        },
        "lastRequestedOn": {
          "type": "string",
          "format": "date-time"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "stickerFileInformation": {
          "$ref": "#/definitions/CustomerStickerFileInformation"
        },
        "compositions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerStickerComposition"
          }
        }
      }
    },
    "StickerType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "UNKNOWN",
        "POT",
        "PACKAGE",
        "SLEEVE",
        "PRODUCT",
        "LAYER",
        "LOAD_CARRIER",
        "DOCUMENT",
        "MULTIPLE_TYPE"
      ],
      "enum": [
        "UNKNOWN",
        "POT",
        "PACKAGE",
        "SLEEVE",
        "PRODUCT",
        "LAYER",
        "LOAD_CARRIER",
        "DOCUMENT",
        "MULTIPLE_TYPE"
      ]
    },
    "CustomerStickerFileInformation": {
      "type": "object",
      "required": [
        "uploadLayout",
        "numberOfPages",
        "numberOfCopies",
        "deliverSeparately",
        "stickerProvidedBy",
        "shouldBePrinted"
      ],
      "properties": {
        "uploadLayout": {
          "$ref": "#/definitions/StickerUploadLayout"
        },
        "numberOfPages": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfCopies": {
          "type": "integer",
          "format": "int32"
        },
        "deliverSeparately": {
          "type": "boolean"
        },
        "stickerProvidedBy": {
          "$ref": "#/definitions/StickerProvidedBy"
        },
        "shouldBePrinted": {
          "type": "boolean"
        },
        "parentId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "StickerUploadLayout": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "UNKNOWN",
        "SINGLE",
        "MULTIPLE"
      ],
      "enum": [
        "UNKNOWN",
        "SINGLE",
        "MULTIPLE"
      ]
    },
    "StickerProvidedBy": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "UNKNOWN",
        "SUPPLIER",
        "CUSTOMER",
        "THIRD_PARTY"
      ],
      "enum": [
        "UNKNOWN",
        "SUPPLIER",
        "CUSTOMER",
        "THIRD_PARTY"
      ]
    },
    "CustomerStickerComposition": {
      "type": "object",
      "required": [
        "stickerType",
        "numberOfUnits"
      ],
      "properties": {
        "stickerType": {
          "$ref": "#/definitions/StickerType"
        },
        "numberOfUnits": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CustomPackage": {
      "type": "object",
      "required": [
        "customPackageId",
        "code",
        "name",
        "description",
        "packageLengthInMm",
        "packageWidthInMm",
        "packageHeightInMm",
        "fallbackVbnPackageCode",
        "creationDateTime",
        "lastModifiedDateTime",
        "sequenceNumber"
      ],
      "properties": {
        "customPackageId": {
          "type": "string",
          "format": "uuid"
        },
        "code": {
          "type": "string",
          "maxLength": 20
        },
        "name": {
          "type": "string",
          "maxLength": 120
        },
        "description": {
          "type": "string",
          "maxLength": 250
        },
        "photoUrl": {
          "type": "string",
          "description": "Image URLs posted as Floriday media must conform with the following format https://image.floriday.io/.",
          "maxLength": 255
        },
        "packageLengthInMm": {
          "type": "integer",
          "format": "int32"
        },
        "packageWidthInMm": {
          "type": "integer",
          "format": "int32"
        },
        "packageHeightInMm": {
          "type": "integer",
          "format": "int32"
        },
        "packageWeightInGram": {
          "type": "integer",
          "format": "int32"
        },
        "fallbackVbnPackageCode": {
          "type": "integer",
          "format": "int32",
          "maximum": 999.0,
          "minimum": 1.0
        },
        "materialTypeId": {
          "type": "string",
          "format": "uuid"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "creationDateTime": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "materialType": {
          "$ref": "#/definitions/MaterialType"
        }
      }
    },
    "MaterialType": {
      "type": "object",
      "required": [
        "materialTypeId",
        "name"
      ],
      "properties": {
        "materialTypeId": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string",
          "maxLength": 100
        }
      }
    },
    "SyncResultOfCustomPackage": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomPackage"
          }
        }
      }
    },
    "DeliveryConditionSet": {
      "type": "object",
      "required": [
        "deliveryConditionSetId",
        "deliveryConditionSetName",
        "deliveryConditions",
        "isDeleted",
        "isCustomerSpecific",
        "sequenceNumber",
        "version"
      ],
      "properties": {
        "deliveryConditionSetId": {
          "type": "string",
          "format": "uuid"
        },
        "deliveryConditionSetName": {
          "type": "string",
          "maxLength": 70
        },
        "warehouseIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "customers": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "deliveryConditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryCondition"
          }
        },
        "additionalServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalService"
          }
        },
        "isDeleted": {
          "type": "boolean"
        },
        "isCustomerSpecific": {
          "type": "boolean"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DeliveryCondition": {
      "type": "object",
      "required": [
        "deliveryConditionId",
        "deliveryRegions",
        "minimumQuantity",
        "incoterm",
        "orderTimeZone",
        "deliveryTimeZone"
      ],
      "properties": {
        "deliveryConditionId": {
          "type": "string",
          "format": "uuid"
        },
        "deliveryRegions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryRegion"
          }
        },
        "minimumQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "incoterm": {
          "$ref": "#/definitions/Incoterm"
        },
        "orderTimeZone": {
          "type": "string",
          "maxLength": 255
        },
        "deliveryTimeZone": {
          "type": "string",
          "maxLength": 255
        },
        "deliveryConditionTimes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryConditionTimeFrame"
          }
        },
        "deliveryCosts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryCost"
          }
        },
        "nonWorkingDayDeliveryCondition": {
          "$ref": "#/definitions/NonWorkingDayDeliveryCondition"
        }
      }
    },
    "DeliveryRegion": {
      "type": "object",
      "required": [
        "gln"
      ],
      "properties": {
        "gln": {
          "type": "string",
          "maxLength": 13,
          "minLength": 13
        },
        "name": {
          "type": "string",
          "maxLength": 70
        }
      }
    },
    "DeliveryConditionTimeFrame": {
      "type": "object",
      "properties": {
        "days": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WeekDay"
          }
        },
        "orderTimeFrames": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeFrame"
          }
        }
      }
    },
    "WeekDay": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "MONDAY",
        "TUESDAY",
        "WEDNESDAY",
        "THURSDAY",
        "FRIDAY",
        "SATURDAY",
        "SUNDAY"
      ],
      "enum": [
        "MONDAY",
        "TUESDAY",
        "WEDNESDAY",
        "THURSDAY",
        "FRIDAY",
        "SATURDAY",
        "SUNDAY"
      ]
    },
    "TimeFrame": {
      "type": "object",
      "required": [
        "latestOrderTime",
        "latestDeliveryTime"
      ],
      "properties": {
        "latestOrderTime": {
          "type": "string",
          "format": "duration"
        },
        "deliveryDaysOffset": {
          "type": "integer",
          "format": "int32"
        },
        "latestDeliveryTime": {
          "type": "string",
          "format": "duration"
        },
        "additionalDeliveryCost": {
          "$ref": "#/definitions/DeliveryCost"
        }
      }
    },
    "DeliveryCost": {
      "type": "object",
      "properties": {
        "price": {
          "$ref": "#/definitions/Price"
        },
        "minimumQuantity": {
          "$ref": "#/definitions/Quantity"
        }
      }
    },
    "NonWorkingDayDeliveryCondition": {
      "type": "object",
      "required": [
        "nonWorkingDayPublicHolidays"
      ],
      "properties": {
        "nonWorkingDayPublicHolidays": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PublicHoliday"
          }
        },
        "deviatingTimeFrame": {
          "$ref": "#/definitions/TimeFrame"
        }
      }
    },
    "PublicHoliday": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "NONE",
        "NEW_YEARS_DAY",
        "GOOD_FRIDAY",
        "EASTER_SUNDAY",
        "EASTER_MONDAY",
        "DUTCH_KINGS_DAY",
        "DUTCH_LIBERATION_DAY",
        "INTERNATIONAL_LABOUR_DAY",
        "ASCENSION_DAY",
        "WHIT_SUNDAY",
        "WHIT_MONDAY",
        "CORPUS_CHRISTI",
        "GERMAN_UNITY_DAY",
        "ALL_SAINTS_DAY",
        "CHRISTMAS_EVE",
        "FIRST_DAY_OF_CHRISTMAS",
        "SECOND_DAY_OF_CHRISTMAS",
        "NEW_YEARS_EVE",
        "BELGIAN_NATIONAL_DAY",
        "BELGIAN_ARMISTICE_DAY"
      ],
      "enum": [
        "NONE",
        "NEW_YEARS_DAY",
        "GOOD_FRIDAY",
        "EASTER_SUNDAY",
        "EASTER_MONDAY",
        "DUTCH_KINGS_DAY",
        "DUTCH_LIBERATION_DAY",
        "INTERNATIONAL_LABOUR_DAY",
        "ASCENSION_DAY",
        "WHIT_SUNDAY",
        "WHIT_MONDAY",
        "CORPUS_CHRISTI",
        "GERMAN_UNITY_DAY",
        "ALL_SAINTS_DAY",
        "CHRISTMAS_EVE",
        "FIRST_DAY_OF_CHRISTMAS",
        "SECOND_DAY_OF_CHRISTMAS",
        "NEW_YEARS_EVE",
        "BELGIAN_NATIONAL_DAY",
        "BELGIAN_ARMISTICE_DAY"
      ]
    },
    "SyncResultOfDeliveryConditionSet": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryConditionSet"
          }
        }
      }
    },
    "SyncResultOfDeliveryLocation": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryLocation"
          }
        }
      }
    },
    "DeliveryLocation": {
      "type": "object",
      "description": "Customer delivery location",
      "required": [
        "locationId",
        "organizationId",
        "gln",
        "isDeleted",
        "isDefault",
        "lastModifiedDateTime",
        "creationDateTime",
        "sequenceNumber"
      ],
      "properties": {
        "locationId": {
          "type": "string",
          "format": "uuid"
        },
        "organizationId": {
          "type": "string",
          "format": "uuid"
        },
        "gln": {
          "type": "string",
          "maxLength": 13,
          "minLength": 13
        },
        "address": {
          "$ref": "#/definitions/Address"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "isDefault": {
          "type": "boolean"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "creationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Address": {
      "type": "object",
      "required": [
        "addressLine",
        "city",
        "countryCode",
        "postalCode"
      ],
      "properties": {
        "addressLine": {
          "type": "string",
          "maxLength": 70
        },
        "city": {
          "type": "string",
          "maxLength": 70
        },
        "countryCode": {
          "type": "string",
          "maxLength": 3
        },
        "postalCode": {
          "type": "string",
          "maxLength": 10
        },
        "stateOrProvince": {
          "type": "string",
          "maxLength": 70
        }
      }
    },
    "SyncResultOfDeliveryOrder": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryOrder"
          }
        }
      }
    },
    "DeliveryOrder": {
      "type": "object",
      "required": [
        "deliveryOrderId",
        "creationDateTime",
        "fulfillmentRequests",
        "deliveryDateTime",
        "destination",
        "despatchWarehouseId",
        "fulfilled",
        "sequenceNumber"
      ],
      "properties": {
        "deliveryOrderId": {
          "type": "string",
          "format": "uuid"
        },
        "creationDateTime": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        },
        "fulfillmentRequests": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/FulfillmentRequest"
          }
        },
        "deliveryDateTime": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        },
        "destination": {
          "$ref": "#/definitions/Destination"
        },
        "despatchWarehouseId": {
          "type": "string",
          "format": "uuid"
        },
        "fulfilled": {
          "type": "boolean"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "carrierOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "startedOrderPickingAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "FulfillmentRequest": {
      "type": "object",
      "required": [
        "fulfillmentRequestId",
        "batchId",
        "numberOfPackages",
        "initialNumberOfPackages",
        "numberOfPiecesPicked"
      ],
      "properties": {
        "fulfillmentRequestId": {
          "type": "string",
          "format": "uuid"
        },
        "batchId": {
          "type": "string",
          "format": "uuid"
        },
        "numberOfPackages": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 0.0
        },
        "initialNumberOfPackages": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "salesOrderId": {
          "type": "string",
          "format": "uuid"
        },
        "clockPreSalesPrice": {
          "type": "number",
          "format": "decimal",
          "maximum": 10000000000000000.0,
          "minimum": 0.0
        },
        "clockMinimumPrice": {
          "type": "number",
          "format": "decimal",
          "maximum": 9999.999,
          "minimum": 0.0
        },
        "additionalServiceIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "package": {
          "$ref": "#/definitions/Package"
        },
        "piecesPerPackage": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "loadCarrier": {
          "$ref": "#/definitions/LoadCarrierType"
        },
        "serviceCode": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 0.0
        },
        "packingAgentOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "nextLegIdentifier": {
          "type": "string",
          "maxLength": 13
        },
        "deliveryRemarks": {
          "type": "string",
          "maxLength": 255
        },
        "numberOfPiecesPicked": {
          "type": "integer",
          "format": "int32"
        },
        "fulfillmentOrderClaims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FulfillmentOrderClaim"
          }
        }
      }
    },
    "FulfillmentOrderClaim": {
      "type": "object",
      "required": [
        "fulfillmentOrderId",
        "claimedNumberOfPackages"
      ],
      "properties": {
        "fulfillmentOrderId": {
          "type": "string",
          "format": "uuid"
        },
        "claimedNumberOfPackages": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 0.0
        }
      }
    },
    "Destination": {
      "type": "object",
      "required": [
        "organizationId"
      ],
      "properties": {
        "organizationId": {
          "type": "string",
          "format": "uuid"
        },
        "warehouseId": {
          "type": "string",
          "format": "uuid"
        },
        "location": {
          "$ref": "#/definitions/Location"
        }
      }
    },
    "Location": {
      "type": "object",
      "properties": {
        "gln": {
          "type": "string",
          "maxLength": 13,
          "minLength": 13
        },
        "address": {
          "$ref": "#/definitions/Address"
        }
      }
    },
    "DeliveryOrderGoodsMovement": {
      "type": "object",
      "required": [
        "fulfillmentRequests",
        "deliveryDateTime",
        "destinationWarehouseId",
        "despatchWarehouseId"
      ],
      "properties": {
        "fulfillmentRequests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FulfillmentRequestCreate"
          }
        },
        "deliveryDateTime": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        },
        "destinationWarehouseId": {
          "type": "string",
          "format": "uuid"
        },
        "despatchWarehouseId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "FulfillmentRequestCreate": {
      "type": "object",
      "required": [
        "fulfillmentRequestId",
        "batchId",
        "numberOfPackages"
      ],
      "properties": {
        "fulfillmentRequestId": {
          "type": "string",
          "format": "uuid"
        },
        "batchId": {
          "type": "string",
          "format": "uuid"
        },
        "numberOfPackages": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "salesOrderId": {
          "type": "string",
          "format": "uuid"
        },
        "additionalServiceIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "package": {
          "$ref": "#/definitions/Package"
        },
        "piecesPerPackage": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "loadCarrier": {
          "$ref": "#/definitions/LoadCarrierType"
        },
        "serviceCode": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 0.0
        },
        "packingAgentOrganizationId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "DeliveryOrderAuction": {
      "type": "object",
      "required": [
        "auctionDate",
        "auctionGroupCode",
        "deliveryDateTime",
        "destinationWarehouseId",
        "despatchWarehouseId"
      ],
      "properties": {
        "auctionDate": {
          "type": "string",
          "format": "date"
        },
        "auctionGroupCode": {
          "type": "integer",
          "format": "int32"
        },
        "batchFulfillmentRequests": {
          "type": "array",
          "description": "AddClockDeliveryOrder only supports batch or trade item fulfillment requests, not a combination.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/FulfillmentRequestCreateAuction"
          }
        },
        "tradeItemFulfillmentRequests": {
          "type": "array",
          "description": "AddClockDeliveryOrder only supports batch or trade item fulfillment requests, not a combination.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/FulfillmentRequestCreateAuctionTradeItem"
          }
        },
        "deliveryDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "destinationWarehouseId": {
          "type": "string",
          "format": "uuid"
        },
        "despatchWarehouseId": {
          "type": "string",
          "format": "uuid"
        },
        "carrierOrganizationId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "FulfillmentRequestCreateAuction": {
      "type": "object",
      "required": [
        "fulfillmentRequestId",
        "batchId",
        "numberOfPackages"
      ],
      "properties": {
        "fulfillmentRequestId": {
          "type": "string",
          "format": "uuid"
        },
        "batchId": {
          "type": "string",
          "format": "uuid"
        },
        "imageUrl": {
          "type": "string",
          "description": "Image URLs posted as Floriday media must conform with the following format https://image.floriday.io/.",
          "maxLength": 255
        },
        "numberOfPackages": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "clockPreSalesPrice": {
          "type": "number",
          "format": "decimal",
          "maximum": 10000000000000000.0,
          "minimum": 0.0
        },
        "clockMinimumPrice": {
          "type": "number",
          "format": "decimal",
          "maximum": 10000000000000000.0,
          "minimum": 0.0
        },
        "deliveryRemark": {
          "type": "string",
          "description": "Used as delivery remarks when creating a FulfillmentOrder.",
          "maxLength": 255
        },
        "auctionRemark": {
          "type": "string",
          "description": "Used as a remark for the auctioneer.",
          "maxLength": 255
        },
        "serviceCode": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 0.0
        },
        "packingAgentOrganizationId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "FulfillmentRequestCreateAuctionTradeItem": {
      "type": "object",
      "required": [
        "fulfillmentRequestId",
        "tradeItemId",
        "newBatchId",
        "packingConfiguration",
        "numberOfPackages"
      ],
      "properties": {
        "fulfillmentRequestId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "newBatchId": {
          "type": "string",
          "format": "uuid"
        },
        "packingConfiguration": {
          "$ref": "#/definitions/AddBatchPackingConfiguration"
        },
        "imageUrl": {
          "type": "string",
          "description": "Image URLs posted as Floriday media must conform with the following format https://image.floriday.io/.",
          "maxLength": 255
        },
        "numberOfPackages": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "clockPreSalesPrice": {
          "type": "number",
          "format": "decimal",
          "maximum": 10000000000000000.0,
          "minimum": 0.0
        },
        "clockMinimumPrice": {
          "type": "number",
          "format": "decimal",
          "maximum": 10000000000000000.0,
          "minimum": 0.0
        },
        "deliveryRemark": {
          "type": "string",
          "description": "Used as delivery remarks when creating a FulfillmentOrder.",
          "maxLength": 255
        },
        "auctionRemark": {
          "type": "string",
          "description": "Used as a remark for the auctioneer.",
          "maxLength": 255
        },
        "serviceCode": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 0.0
        },
        "packingAgentOrganizationId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "SupplyLine": {
      "type": "object",
      "required": [
        "supplyLineId",
        "status",
        "tradeItemId",
        "pricePerPiece",
        "volumePrices",
        "numberOfPieces",
        "orderPeriod",
        "sequenceNumber"
      ],
      "properties": {
        "supplyLineId": {
          "type": "string",
          "format": "uuid"
        },
        "status": {
          "$ref": "#/definitions/SupplyStatus"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "batchId": {
          "type": "string",
          "format": "uuid"
        },
        "pricePerPiece": {
          "$ref": "#/definitions/Price"
        },
        "pricePerPieceLastModified": {
          "type": "string",
          "description": "This field is set when the price has been changed by the supplier. Catalog prices in a closed week can only be changed once per 24 hours.",
          "format": "date-time"
        },
        "volumePrices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumePrice"
          }
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 0.0
        },
        "packingConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplyLinePackingConfiguration"
          }
        },
        "orderPeriod": {
          "$ref": "#/definitions/TradePeriod"
        },
        "deliveryPeriod": {
          "$ref": "#/definitions/TradePeriod"
        },
        "includedServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommercialService"
          }
        },
        "allowedCustomerOrganizationIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "supplyType": {
          "$ref": "#/definitions/SupplyType"
        },
        "agreementReference": {
          "$ref": "#/definitions/AgreementReference"
        },
        "salesUnit": {
          "$ref": "#/definitions/SalesUnit"
        },
        "isPromo": {
          "type": "boolean"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "priceGroupName": {
          "type": "string",
          "maxLength": 120
        }
      }
    },
    "VolumePrice": {
      "type": "object",
      "required": [
        "unit",
        "pricePerPiece"
      ],
      "properties": {
        "unit": {
          "$ref": "#/definitions/VolumePriceUnit"
        },
        "pricePerPiece": {
          "type": "number",
          "format": "double",
          "minimum": 0.0
        }
      }
    },
    "VolumePriceUnit": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "PACKAGE",
        "LAYER",
        "LOAD_CARRIER"
      ],
      "enum": [
        "PACKAGE",
        "LAYER",
        "LOAD_CARRIER"
      ]
    },
    "SupplyLinePackingConfiguration": {
      "type": "object",
      "required": [
        "piecesPerPackage",
        "package",
        "packagesPerLayer",
        "layersPerLoadCarrier",
        "loadCarrier"
      ],
      "properties": {
        "piecesPerPackage": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "package": {
          "$ref": "#/definitions/Package"
        },
        "packagesPerLayer": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 1.0
        },
        "layersPerLoadCarrier": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 1.0
        },
        "transportHeightInCm": {
          "type": "integer",
          "format": "int32"
        },
        "loadCarrier": {
          "$ref": "#/definitions/SupplyLoadCarrierType"
        },
        "additionalPricePerPiece": {
          "$ref": "#/definitions/Price"
        },
        "photoUrl": {
          "type": "string",
          "description": "Image URLs posted as Floriday media must conform with the following format https://image.floriday.io/.",
          "maxLength": 255
        },
        "allowedCustomerOrganizationIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "SupplyType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "CATALOG_PRICE",
        "BATCH_PRICE",
        "CONTRACT_PRICE",
        "CUSTOMER_OFFER",
        "PURCHASE_TIP"
      ],
      "enum": [
        "CATALOG_PRICE",
        "BATCH_PRICE",
        "CONTRACT_PRICE",
        "CUSTOMER_OFFER",
        "PURCHASE_TIP"
      ]
    },
    "SyncResultOfSupplyLine": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplyLine"
          }
        }
      }
    },
    "SupplyLineCreate": {
      "type": "object",
      "required": [
        "supplyLineId",
        "batchId",
        "pricePerPiece",
        "orderPeriod",
        "deliveryPeriod",
        "includedServices",
        "packingConfigurations"
      ],
      "properties": {
        "supplyLineId": {
          "type": "string",
          "format": "uuid"
        },
        "batchId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "pricePerPiece": {
          "$ref": "#/definitions/Price"
        },
        "orderPeriod": {
          "$ref": "#/definitions/TradePeriod"
        },
        "deliveryPeriod": {
          "$ref": "#/definitions/TradePeriod"
        },
        "includedServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommercialService"
          }
        },
        "allowedCustomerOrganizationIds": {
          "type": "array",
          "maxItems": 300,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "packingConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplyLinePackingConfigurationCreate"
          }
        },
        "agreementReference": {
          "$ref": "#/definitions/AgreementReference"
        },
        "assignedNumberOfPieces": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SupplyLinePackingConfigurationCreate": {
      "type": "object",
      "required": [
        "piecesPerPackage",
        "package",
        "packagesPerLayer",
        "layersPerLoadCarrier",
        "loadCarrier"
      ],
      "properties": {
        "piecesPerPackage": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 1.0
        },
        "package": {
          "$ref": "#/definitions/Package"
        },
        "packagesPerLayer": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 1.0
        },
        "layersPerLoadCarrier": {
          "type": "integer",
          "format": "int32"
        },
        "transportHeightInCm": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "loadCarrier": {
          "$ref": "#/definitions/SupplyLoadCarrierType"
        },
        "additionalPricePerPiece": {
          "$ref": "#/definitions/Price"
        },
        "photoUrl": {
          "type": "string",
          "description": "Image URLs posted as Floriday media must conform with the following format https://image.floriday.io/.",
          "maxLength": 255
        },
        "allowedCustomerOrganizationIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "BaseSupply": {
      "type": "object",
      "required": [
        "basePricePerPiece",
        "orderPeriod"
      ],
      "properties": {
        "basePricePerPiece": {
          "description": "The base price which will be used for the calculations",
          "allOf": [
            {
              "$ref": "#/definitions/Price"
            }
          ]
        },
        "orderPeriod": {
          "$ref": "#/definitions/TradePeriod"
        },
        "packingConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplyLinePackingConfiguration"
          }
        }
      }
    },
    "SupplyAvailabilityStatus": {
      "type": "object",
      "required": [
        "supplyStatus"
      ],
      "properties": {
        "supplyStatus": {
          "$ref": "#/definitions/SupplyStatusUpdate"
        }
      }
    },
    "SupplyStatusUpdate": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "AVAILABLE",
        "UNAVAILABLE"
      ],
      "enum": [
        "AVAILABLE",
        "UNAVAILABLE"
      ]
    },
    "SupplyLinePriceUpdate": {
      "type": "object",
      "required": [
        "pricePerPiece"
      ],
      "properties": {
        "pricePerPiece": {
          "type": "number",
          "format": "decimal",
          "maximum": 10000000000000000.0,
          "minimum": 0.0
        }
      }
    },
    "DomainErrorCode": {
      "type": "object",
      "required": [
        "code",
        "title",
        "type"
      ],
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 60
        },
        "title": {
          "type": "string",
          "maxLength": 240
        },
        "type": {
          "type": "string",
          "maxLength": 294
        }
      }
    },
    "SyncResultOfFulfillmentOrder": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FulfillmentOrder"
          }
        }
      }
    },
    "FulfillmentOrder": {
      "type": "object",
      "required": [
        "fulfillmentOrderId",
        "latestDeliveryDateTime",
        "despatchWarehouseId",
        "fulfillingOrganizationId",
        "supplierOrganizationId",
        "destination",
        "loadCarriers",
        "deliveryNoteCodes",
        "type",
        "oneLabelOnly",
        "status",
        "sequenceNumber",
        "creationDateTime",
        "lastModifiedDateTime"
      ],
      "properties": {
        "fulfillmentOrderId": {
          "type": "string",
          "format": "uuid"
        },
        "latestDeliveryDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "despatchWarehouseId": {
          "type": "string",
          "format": "uuid"
        },
        "fulfillingOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "supplierOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "carrierOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "destination": {
          "$ref": "#/definitions/Destination"
        },
        "logisticHub": {
          "$ref": "#/definitions/LogisticHub"
        },
        "loadCarriers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoadCarrierConfiguration"
          }
        },
        "deliveryNoteCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "$ref": "#/definitions/FulfillmentType"
        },
        "oneLabelOnly": {
          "type": "boolean"
        },
        "status": {
          "$ref": "#/definitions/FulfillmentStatus"
        },
        "submissionError": {
          "type": "string",
          "maxLength": 2000
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "creationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "fulfillmentOrderCorrections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FulfillmentOrderCorrection"
          }
        }
      }
    },
    "LogisticHub": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "NONE",
        "AALSMEER",
        "NAALDWIJK",
        "RIJNSBURG",
        "RHEINMAAS",
        "EELDE",
        "PLANTION"
      ],
      "enum": [
        "NONE",
        "AALSMEER",
        "NAALDWIJK",
        "RIJNSBURG",
        "RHEINMAAS",
        "EELDE",
        "PLANTION"
      ]
    },
    "LoadCarrierConfiguration": {
      "type": "object",
      "required": [
        "loadCarrierItems",
        "loadCarrierType",
        "numberOfAdditionalLayers",
        "deliveryNoteCodes",
        "sortIndex",
        "isReceived"
      ],
      "properties": {
        "loadCarrierItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoadCarrierItem"
          }
        },
        "loadCarrierType": {
          "$ref": "#/definitions/LoadCarrierType"
        },
        "numberOfAdditionalLayers": {
          "type": "integer",
          "format": "int32"
        },
        "documentReference": {
          "type": "string",
          "maxLength": 18
        },
        "deliveryNoteCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sortIndex": {
          "type": "integer",
          "description": "Used to determine the position of the load carrier within the shipment. Duplicate numbers will yield indeterministic sequencing.",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 0.0
        },
        "loadCarrierReference": {
          "type": "string",
          "description": "When present, uniquely references a load carrier within a collection of load carrier configurations; Appears on a PAB.",
          "maxLength": 14
        },
        "isReceived": {
          "type": "boolean"
        },
        "receiptDateTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "LoadCarrierItem": {
      "type": "object",
      "required": [
        "fulfillmentRequestId",
        "numberOfPackages",
        "batchId",
        "tradeItemId"
      ],
      "properties": {
        "fulfillmentRequestId": {
          "type": "string",
          "format": "uuid"
        },
        "salesOrderId": {
          "type": "string",
          "format": "uuid"
        },
        "numberOfPackages": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "serviceCode": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 0.0
        },
        "packingAgentOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "batchId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "batchReference": {
          "type": "string",
          "maxLength": 13
        },
        "deliveryNoteCode": {
          "type": "string",
          "maxLength": 18
        },
        "deliveryNoteLetter": {
          "type": "string"
        },
        "commercialInvoiceReference": {
          "type": "string",
          "maxLength": 26
        },
        "sortIndex": {
          "type": "integer",
          "description": "The index related to the item's position on the loadcarrier",
          "format": "int32"
        },
        "deliveryRemarks": {
          "type": "string",
          "description": "The delivery remarks will be printed on the connect EAB document. A `NULL` value indicates the use of the default delivery remarks found in the FulfillmentRequest or will ignore the value in an update.",
          "maxLength": 255
        },
        "statusOfReceivedItem": {
          "$ref": "#/definitions/ReceivedLoadCarrierConfigurationItemStatus"
        },
        "statusOfReceivedItemReason": {
          "type": "string",
          "maxLength": 500
        }
      }
    },
    "ReceivedLoadCarrierConfigurationItemStatus": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "OK",
        "NOT_OK"
      ],
      "enum": [
        "OK",
        "NOT_OK"
      ]
    },
    "FulfillmentType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "UNKNOWN",
        "CLOCK",
        "DIRECT_SALES",
        "GOODS_MOVEMENT"
      ],
      "enum": [
        "UNKNOWN",
        "CLOCK",
        "DIRECT_SALES",
        "GOODS_MOVEMENT"
      ]
    },
    "FulfillmentStatus": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "DRAFT",
        "PENDING",
        "ACCEPTED",
        "FAILED",
        "CANCELLED",
        "DELIVERED"
      ],
      "enum": [
        "DRAFT",
        "PENDING",
        "ACCEPTED",
        "FAILED",
        "CANCELLED",
        "DELIVERED"
      ]
    },
    "FulfillmentOrderCorrection": {
      "type": "object",
      "required": [
        "correctionId",
        "loadCarrierCorrections",
        "creationDateTime",
        "lastModifiedDateTime"
      ],
      "properties": {
        "correctionId": {
          "type": "string",
          "format": "uuid"
        },
        "deliveryLocationGln": {
          "type": "string",
          "maxLength": 13,
          "minLength": 13
        },
        "loadCarrierCorrections": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/LoadCarrierCorrection"
          }
        },
        "status": {
          "$ref": "#/definitions/CorrectionStatus"
        },
        "creationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "LoadCarrierCorrection": {
      "type": "object",
      "required": [
        "loadCarrierType",
        "numberOfAdditionalLayers"
      ],
      "properties": {
        "documentReference": {
          "type": "string",
          "maxLength": 18
        },
        "loadCarrierType": {
          "$ref": "#/definitions/LoadCarrierType"
        },
        "numberOfAdditionalLayers": {
          "type": "integer",
          "format": "int32"
        },
        "loadCarrierItemCorrections": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/LoadCarrierItemCorrection"
          }
        }
      }
    },
    "LoadCarrierItemCorrection": {
      "type": "object",
      "required": [
        "isDeleted",
        "numberOfPackages",
        "deliveryNoteCode",
        "deliveryNoteLetter"
      ],
      "properties": {
        "isDeleted": {
          "type": "boolean"
        },
        "numberOfPackages": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 0.0
        },
        "packingAgentOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "deliveryNoteCode": {
          "type": "string",
          "maxLength": 10
        },
        "deliveryNoteLetter": {
          "type": "string",
          "maxLength": 1,
          "minLength": 1
        }
      }
    },
    "CorrectionStatus": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "SUCCEEDED",
        "PENDING",
        "REJECTED"
      ],
      "enum": [
        "SUCCEEDED",
        "PENDING",
        "REJECTED"
      ]
    },
    "FulfillmentOrderStatus": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/FulfillmentStatus"
        },
        "submissionError": {
          "type": "string",
          "maxLength": 2000
        }
      }
    },
    "FulfillmentOrderCreate": {
      "type": "object",
      "required": [
        "fulfillmentOrderId",
        "oneLabelOnly",
        "loadCarriers"
      ],
      "properties": {
        "fulfillmentOrderId": {
          "type": "string",
          "format": "uuid"
        },
        "carrierOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "logisticHub": {
          "$ref": "#/definitions/LogisticHub"
        },
        "oneLabelOnly": {
          "type": "boolean",
          "description": "If true, only one logistic label pdf will be provided"
        },
        "loadCarriers": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/AddLoadCarrierConfiguration"
          }
        },
        "deliveryLocationGln": {
          "type": "string",
          "description": "Optional property to set a different delivery location from the delivery location known in the fulfillment requests. The location must be in the same country as the original delivery location.",
          "maxLength": 13,
          "minLength": 13
        }
      }
    },
    "AddLoadCarrierConfiguration": {
      "type": "object",
      "required": [
        "loadCarrierItems",
        "loadCarrierType",
        "numberOfAdditionalLayers",
        "sortIndex"
      ],
      "properties": {
        "loadCarrierItems": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/AddLoadCarrierItem"
          }
        },
        "loadCarrierType": {
          "$ref": "#/definitions/LoadCarrierType"
        },
        "numberOfAdditionalLayers": {
          "type": "integer",
          "format": "int32"
        },
        "sortIndex": {
          "type": "integer",
          "description": "Used to determine the position of the load carrier within the shipment. Duplicate numbers will yield indeterministic sequencing.",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 0.0
        },
        "loadCarrierReference": {
          "type": "string",
          "description": "When present, uniquely references a load carrier within a collection of load carrier configurations; Appears on a PAB.",
          "maxLength": 14
        }
      }
    },
    "AddLoadCarrierItem": {
      "type": "object",
      "required": [
        "fulfillmentRequestId",
        "numberOfPackages"
      ],
      "properties": {
        "fulfillmentRequestId": {
          "type": "string",
          "format": "uuid"
        },
        "numberOfPackages": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "serviceCode": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 0.0
        },
        "packingAgentOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "sortIndex": {
          "type": "integer",
          "description": "The index related to the item's position on the loadcarrier",
          "format": "int32"
        },
        "deliveryRemarks": {
          "type": "string",
          "description": "The delivery remarks will be printed on the connect EAB document. A `NULL` value indicates the use of the default delivery remarks found in the FulfillmentRequest or will ignore the value in an update.",
          "maxLength": 255,
          "minLength": 1
        },
        "commercialInvoiceReference": {
          "type": "string",
          "description": "Own reference reflected on the invoice.",
          "maxLength": 26,
          "minLength": 1
        }
      }
    },
    "FulfillmentOrderUpdate": {
      "type": "object",
      "properties": {
        "newNumberOfLoadCarriers": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AddFulfillmentOrderCorrection": {
      "type": "object",
      "required": [
        "correctionId",
        "loadCarrierCorrections"
      ],
      "properties": {
        "correctionId": {
          "type": "string",
          "format": "uuid"
        },
        "deliveryLocationGln": {
          "type": "string",
          "maxLength": 13,
          "minLength": 13
        },
        "loadCarrierCorrections": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/AddLoadCarrierCorrection"
          }
        }
      }
    },
    "AddLoadCarrierCorrection": {
      "type": "object",
      "required": [
        "documentReference",
        "loadCarrierType",
        "numberOfAdditionalLayers"
      ],
      "properties": {
        "documentReference": {
          "type": "string",
          "maxLength": 18,
          "minLength": 1
        },
        "loadCarrierType": {
          "$ref": "#/definitions/LoadCarrierType"
        },
        "numberOfAdditionalLayers": {
          "type": "integer",
          "format": "int32"
        },
        "loadCarrierItemCorrections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddLoadCarrierItemCorrection"
          }
        }
      }
    },
    "AddLoadCarrierItemCorrection": {
      "type": "object",
      "required": [
        "deliveryNoteCode",
        "deliveryNoteLetter",
        "isDeleted",
        "numberOfPackages"
      ],
      "properties": {
        "deliveryNoteCode": {
          "type": "string",
          "maxLength": 18,
          "minLength": 1
        },
        "deliveryNoteLetter": {
          "type": "string",
          "maxLength": 1,
          "minLength": 1
        },
        "isDeleted": {
          "type": "boolean"
        },
        "numberOfPackages": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 0.0
        },
        "packingAgentOrganizationId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "Identity": {
      "type": "object",
      "required": [
        "organizationId",
        "clientId",
        "apiVersion"
      ],
      "properties": {
        "organizationId": {
          "type": "string",
          "format": "uuid"
        },
        "clientId": {
          "type": "string",
          "maxLength": 40,
          "minLength": 1
        },
        "apiVersion": {
          "type": "string",
          "maxLength": 6
        }
      }
    },
    "InvoiceLine": {
      "type": "object",
      "required": [
        "invoiceLineId",
        "salesOrderId",
        "salesChannelOrderId",
        "deliveryFormReference",
        "subTotalAmount",
        "numberOfPieces",
        "sequenceNumber"
      ],
      "properties": {
        "invoiceLineId": {
          "type": "string",
          "description": "Matches the invoice line id from the RFH invoice.",
          "maxLength": 36
        },
        "invoiceId": {
          "type": "string",
          "description": "Matches the invoice id from the RFH invoice.",
          "maxLength": 24
        },
        "salesOrderId": {
          "type": "string",
          "format": "uuid"
        },
        "salesChannelOrderId": {
          "type": "string",
          "maxLength": 13
        },
        "deliveryFormReference": {
          "type": "string",
          "maxLength": 7
        },
        "subTotalAmount": {
          "type": "number",
          "format": "double"
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32"
        },
        "invoiceDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SyncResultOfInvoiceLine": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceLine"
          }
        }
      }
    },
    "MediaReference": {
      "type": "object",
      "required": [
        "mediaId"
      ],
      "properties": {
        "mediaId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "OrderRequest": {
      "type": "object",
      "required": [
        "orderRequestId",
        "customerOrganizationId",
        "tradeItemId",
        "numberOfPieces",
        "pricePerPiece",
        "packingConfiguration",
        "delivery",
        "additionalServiceIds",
        "added",
        "status",
        "sequenceNumber",
        "isDeleted"
      ],
      "properties": {
        "orderRequestId": {
          "type": "string",
          "format": "uuid"
        },
        "customerOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "supplyLineId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "pricePerPiece": {
          "$ref": "#/definitions/Price"
        },
        "packingConfiguration": {
          "$ref": "#/definitions/PackingConfigurationBase"
        },
        "delivery": {
          "$ref": "#/definitions/OrderRequestDelivery"
        },
        "deliveryRemarks": {
          "type": "string",
          "maxLength": 255
        },
        "reference": {
          "type": "string",
          "maxLength": 26
        },
        "additionalServiceIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "added": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/OrderRequestStatus"
        },
        "declinedReason": {
          "type": "string",
          "maxLength": 255
        },
        "paymentProvider": {
          "$ref": "#/definitions/PaymentProvider"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "isDeleted": {
          "type": "boolean"
        }
      }
    },
    "OrderRequestDelivery": {
      "type": "object",
      "required": [
        "latestDeliveryDateTime",
        "location",
        "incoterm"
      ],
      "properties": {
        "deliveryConditionSetId": {
          "type": "string",
          "format": "uuid"
        },
        "latestDeliveryDateTime": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        },
        "regionGln": {
          "type": "string",
          "maxLength": 13,
          "minLength": 13
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "incoterm": {
          "$ref": "#/definitions/Incoterm"
        },
        "nextLegIdentifier": {
          "type": "string",
          "maxLength": 13
        }
      }
    },
    "OrderRequestStatus": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "UNKNOWN",
        "PENDING",
        "EXPIRED",
        "ACCEPTED",
        "REJECTED"
      ],
      "enum": [
        "UNKNOWN",
        "PENDING",
        "EXPIRED",
        "ACCEPTED",
        "REJECTED"
      ]
    },
    "SyncResultOfOrderRequest": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderRequest"
          }
        }
      }
    },
    "AcceptOrderRequest": {
      "type": "object",
      "required": [
        "despatchWarehouseId"
      ],
      "properties": {
        "batchId": {
          "type": "string",
          "format": "uuid"
        },
        "despatchWarehouseId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "RejectOrderRequest": {
      "type": "object",
      "required": [
        "declineReason"
      ],
      "properties": {
        "declineReason": {
          "type": "string",
          "maxLength": 255
        }
      }
    },
    "SyncResultOfOrganization": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Organization"
          }
        }
      }
    },
    "Organization": {
      "type": "object",
      "required": [
        "organizationId",
        "sequenceNumber"
      ],
      "properties": {
        "organizationId": {
          "type": "string",
          "format": "uuid"
        },
        "companyGln": {
          "type": "string",
          "maxLength": 13,
          "minLength": 13
        },
        "name": {
          "type": "string",
          "maxLength": 70
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "rfhRelationId": {
          "type": "integer",
          "format": "int32",
          "maximum": 999999.0,
          "minimum": 1.0
        },
        "rfhCompanyAccountId": {
          "type": "integer",
          "format": "int32",
          "maximum": 999999.0,
          "minimum": 1.0
        },
        "organizationType": {
          "$ref": "#/definitions/OrganizationType"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "creationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "commercialName": {
          "type": "string",
          "maxLength": 70
        },
        "website": {
          "type": "string",
          "maxLength": 70
        },
        "paymentProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentProviderCreate"
          }
        },
        "mailingAddress": {
          "$ref": "#/definitions/Address"
        },
        "physicalAddress": {
          "$ref": "#/definitions/Address"
        },
        "plantionRegistrationNumber": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999999.0,
          "minimum": 1.0
        },
        "logoUrl": {
          "type": "string"
        }
      }
    },
    "OrganizationType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "CUSTOMER",
        "SUPPLIER",
        "AGENT",
        "CARRIER",
        "OTHER"
      ],
      "enum": [
        "CUSTOMER",
        "SUPPLIER",
        "AGENT",
        "CARRIER",
        "OTHER"
      ]
    },
    "PaymentProviderCreate": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "RFH",
        "VRM",
        "PLANTION",
        "RFH_E_WALLET",
        "FX_SERVICES",
        "OTHER"
      ],
      "enum": [
        "RFH",
        "VRM",
        "PLANTION",
        "RFH_E_WALLET",
        "FX_SERVICES",
        "OTHER"
      ]
    },
    "PackingConfigurationRequest": {
      "type": "object",
      "required": [
        "packingConfigurationRequestId",
        "supplierOrganizationId",
        "customerOrganizationId",
        "tradeItemId",
        "status",
        "sequenceNumber",
        "expiresAtDateTime",
        "creationDateTime",
        "lastModifiedDateTime",
        "piecesPerPackage",
        "package",
        "packagesPerLayer",
        "layersPerLoadCarrier",
        "loadCarrier"
      ],
      "properties": {
        "packingConfigurationRequestId": {
          "type": "string",
          "format": "uuid"
        },
        "supplierOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "customerOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "status": {
          "$ref": "#/definitions/RequestStatus"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "remark": {
          "type": "string",
          "maxLength": 500
        },
        "expiresAtDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "creationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "piecesPerPackage": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 1.0
        },
        "package": {
          "$ref": "#/definitions/Package"
        },
        "packagesPerLayer": {
          "type": "integer",
          "format": "int32"
        },
        "layersPerLoadCarrier": {
          "type": "integer",
          "format": "int32"
        },
        "loadCarrier": {
          "$ref": "#/definitions/SupplyLoadCarrierType"
        }
      }
    },
    "RequestStatus": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "PENDING",
        "ACCEPTED",
        "REJECTED"
      ],
      "enum": [
        "PENDING",
        "ACCEPTED",
        "REJECTED"
      ]
    },
    "SyncResultOfPackingConfigurationRequest": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PackingConfigurationRequest"
          }
        }
      }
    },
    "PriceGroup": {
      "type": "object",
      "required": [
        "priceGroupId",
        "name",
        "type",
        "salesUnit",
        "includedServices",
        "customers",
        "isDeleted",
        "lastModifiedDateTime",
        "sequenceNumber"
      ],
      "properties": {
        "priceGroupId": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string",
          "maxLength": 120
        },
        "type": {
          "$ref": "#/definitions/PriceGroupType"
        },
        "salesUnit": {
          "$ref": "#/definitions/SalesUnit"
        },
        "includedServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommercialService"
          }
        },
        "customers": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "isDeleted": {
          "type": "boolean"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SyncResultOfPriceGroup": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceGroup"
          }
        }
      }
    },
    "SyncResultOfSalesOrderCorrectionRequest": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesOrderCorrectionRequest"
          }
        }
      }
    },
    "SalesOrderCorrectionRequest": {
      "type": "object",
      "required": [
        "salesOrderCorrectionRequestId",
        "salesOrderId",
        "status",
        "isSalesOrderCreatedBySupplier",
        "initiatedBy",
        "expiresAtDateTime",
        "creationDateTime",
        "lastModifiedDateTime",
        "sequenceNumber",
        "customerOrganizationId",
        "isCancelRequest",
        "stockApplication"
      ],
      "properties": {
        "salesOrderCorrectionRequestId": {
          "type": "string",
          "format": "uuid"
        },
        "salesOrderId": {
          "type": "string",
          "format": "uuid"
        },
        "status": {
          "$ref": "#/definitions/CorrectionRequestStatus"
        },
        "isSalesOrderCreatedBySupplier": {
          "type": "boolean"
        },
        "initiatedBy": {
          "$ref": "#/definitions/OrganizationType"
        },
        "expiresAtDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "creationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "customerOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "pricePerPiece": {
          "$ref": "#/definitions/Price"
        },
        "package": {
          "$ref": "#/definitions/Package"
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32"
        },
        "piecesPerPackage": {
          "type": "integer",
          "format": "int32"
        },
        "incoterm": {
          "$ref": "#/definitions/Incoterm"
        },
        "reason": {
          "type": "string",
          "maxLength": 1000
        },
        "isCancelRequest": {
          "type": "boolean"
        },
        "salesOrderVersionAfterCorrection": {
          "type": "integer",
          "format": "int32"
        },
        "createdByUserName": {
          "type": "string",
          "description": "Name of the contact person responsible for the sales order correction request",
          "maxLength": 100
        },
        "stockApplication": {
          "$ref": "#/definitions/SalesOrderCorrectionStockApplication"
        }
      }
    },
    "CorrectionRequestStatus": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "PENDING",
        "ACCEPTED",
        "DECLINED",
        "EXPIRED",
        "DELETED",
        "PENDING_CLAIM"
      ],
      "enum": [
        "PENDING",
        "ACCEPTED",
        "DECLINED",
        "EXPIRED",
        "DELETED",
        "PENDING_CLAIM"
      ]
    },
    "SalesOrderCorrectionStockApplication": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "DIRECT",
        "NEVER",
        "ON_ACCEPT"
      ],
      "enum": [
        "DIRECT",
        "NEVER",
        "ON_ACCEPT"
      ]
    },
    "AddSalesOrderCorrectionRequest": {
      "type": "object",
      "required": [
        "salesOrderCorrectionRequestId",
        "salesOrderId",
        "isCancelRequest"
      ],
      "properties": {
        "salesOrderCorrectionRequestId": {
          "type": "string",
          "format": "uuid"
        },
        "salesOrderId": {
          "type": "string",
          "format": "uuid"
        },
        "pricePerPiece": {
          "$ref": "#/definitions/Price"
        },
        "package": {
          "$ref": "#/definitions/Package"
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32"
        },
        "piecesPerPackage": {
          "type": "integer",
          "format": "int32"
        },
        "incoterm": {
          "$ref": "#/definitions/Incoterm"
        },
        "reason": {
          "type": "string",
          "maxLength": 1000
        },
        "createdByUser": {
          "type": "string",
          "description": "Used to associate an existing Floriday account with the created correction request. The user will be shown within the Floriday portal as the created user.",
          "maxLength": 60
        },
        "intendedForCustomerUser": {
          "type": "string",
          "description": "Used to associate an existing Floriday account with the created correction request. The user will be shown within the Floriday portal as the customer user.",
          "maxLength": 60
        },
        "isCancelRequest": {
          "type": "boolean"
        },
        "createdByUserName": {
          "type": "string",
          "description": "Name of the contact person responsible for the sales order correction request",
          "maxLength": 100
        },
        "stockApplication": {
          "$ref": "#/definitions/SalesOrderCorrectionStockApplication"
        }
      }
    },
    "SalesOrderCorrectionRequestAccept": {
      "type": "object",
      "properties": {
        "acceptedByUser": {
          "type": "string"
        },
        "salesOrderCorrectionStockApplication": {
          "$ref": "#/definitions/SalesOrderCorrectionStockApplication"
        }
      }
    },
    "SalesOrderCorrectionRequestDecline": {
      "type": "object",
      "properties": {
        "declinedByUser": {
          "type": "string"
        }
      }
    },
    "SalesOrder": {
      "type": "object",
      "required": [
        "salesOrderId",
        "salesChannelOrderId",
        "supplierOrganizationId",
        "customerOrganizationId",
        "tradeItemId",
        "salesChannel",
        "salesChannelInterface",
        "numberOfPieces",
        "tradeInstrument",
        "packingConfiguration",
        "orderDateTime",
        "pricePerPiece",
        "delivery",
        "status",
        "sequenceNumber",
        "calculatedFields",
        "paymentProvider",
        "createdBySupplier",
        "mutations"
      ],
      "properties": {
        "salesOrderId": {
          "type": "string",
          "format": "uuid"
        },
        "salesOrderGroupId": {
          "type": "string",
          "format": "uuid"
        },
        "salesChannelOrderId": {
          "type": "string",
          "maxLength": 13
        },
        "customerOrderId": {
          "type": "string",
          "maxLength": 26
        },
        "supplierOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "customerOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "supplyLineId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "salesChannel": {
          "$ref": "#/definitions/SalesChannel"
        },
        "salesChannelInterface": {
          "$ref": "#/definitions/SalesChannelInterface"
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32"
        },
        "tradeInstrument": {
          "$ref": "#/definitions/TradeInstrument"
        },
        "packingConfiguration": {
          "$ref": "#/definitions/SalesOrderPackingConfiguration"
        },
        "orderDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "pricePerPiece": {
          "$ref": "#/definitions/Price"
        },
        "barcodeLogisticServiceProvider": {
          "type": "string",
          "maxLength": 13
        },
        "delivery": {
          "$ref": "#/definitions/SalesOrderDelivery"
        },
        "additionalServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderedAdditionalService"
          }
        },
        "cancellationDeadline": {
          "type": "string",
          "format": "date-time"
        },
        "automaticallyCancelledOn": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/SalesOrderStatus"
        },
        "creditClaimStatus": {
          "$ref": "#/definitions/CreditClaimStatus"
        },
        "creditClaimExpirationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "tradeItemVersion": {
          "type": "integer",
          "format": "int32"
        },
        "salesOrderVersion": {
          "type": "integer",
          "format": "int32"
        },
        "contractId": {
          "type": "string",
          "format": "uuid"
        },
        "blanketOrderLineId": {
          "type": "string",
          "format": "uuid"
        },
        "bundledOfferLineId": {
          "type": "string",
          "format": "uuid"
        },
        "calculatedFields": {
          "$ref": "#/definitions/SalesOrderCalculatedFields"
        },
        "paymentProvider": {
          "$ref": "#/definitions/PaymentProvider"
        },
        "deliveryRemarks": {
          "type": "string",
          "maxLength": 255
        },
        "deliveryPricePerPiece": {
          "$ref": "#/definitions/Price"
        },
        "despatchWarehouseId": {
          "type": "string",
          "format": "uuid"
        },
        "creationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createdBySupplier": {
          "type": "boolean"
        },
        "createdByUserName": {
          "type": "string",
          "description": "Name of the contact person responsible for the sales order",
          "maxLength": 100
        },
        "mutations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesOrderMutation"
          }
        }
      }
    },
    "SalesChannel": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "UNKNOWN",
        "FLORAMONDO",
        "FLORIDAY",
        "FLORIDAY_FX",
        "FLORAXCHANGE",
        "PLANTION_CLOCK",
        "RFH_CLOCK",
        "VRM_CLOCK",
        "EXTERNAL_INTEGRATION"
      ],
      "enum": [
        "UNKNOWN",
        "FLORAMONDO",
        "FLORIDAY",
        "FLORIDAY_FX",
        "FLORAXCHANGE",
        "PLANTION_CLOCK",
        "RFH_CLOCK",
        "VRM_CLOCK",
        "EXTERNAL_INTEGRATION"
      ]
    },
    "TradeInstrument": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "CLOCK_PRESALES",
        "CLOCK_SALES",
        "CONTRACT",
        "DIRECT_SALES",
        "BID_OFFER",
        "CLOCK_SALES_FROM_NURSERY"
      ],
      "enum": [
        "CLOCK_PRESALES",
        "CLOCK_SALES",
        "CONTRACT",
        "DIRECT_SALES",
        "BID_OFFER",
        "CLOCK_SALES_FROM_NURSERY"
      ]
    },
    "SalesOrderPackingConfiguration": {
      "type": "object",
      "required": [
        "piecesPerPackage",
        "package",
        "loadCarrier"
      ],
      "properties": {
        "piecesPerPackage": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 1.0
        },
        "package": {
          "$ref": "#/definitions/Package"
        },
        "loadCarrier": {
          "$ref": "#/definitions/LoadCarrierType"
        },
        "additionalPricePerPiece": {
          "$ref": "#/definitions/Price"
        },
        "photoUrl": {
          "type": "string",
          "maxLength": 255
        },
        "packagesPerLayer": {
          "type": "integer",
          "format": "int32"
        },
        "layersPerLoadCarrier": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SalesOrderDelivery": {
      "type": "object",
      "required": [
        "latestDeliveryDateTime",
        "location"
      ],
      "properties": {
        "deliveryConditionId": {
          "type": "string",
          "format": "uuid"
        },
        "latestDeliveryDateTime": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        },
        "regionGln": {
          "type": "string",
          "maxLength": 13,
          "minLength": 13
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "incoterm": {
          "$ref": "#/definitions/Incoterm"
        },
        "nextLegIdentifier": {
          "type": "string",
          "maxLength": 13
        },
        "deliveryCost": {
          "$ref": "#/definitions/Price"
        }
      }
    },
    "OrderedAdditionalService": {
      "type": "object",
      "required": [
        "additionalServiceId",
        "price",
        "unit"
      ],
      "properties": {
        "additionalServiceId": {
          "type": "string",
          "format": "uuid"
        },
        "price": {
          "$ref": "#/definitions/Price"
        },
        "unit": {
          "$ref": "#/definitions/AdditionalServiceUnit"
        },
        "numberOfUnits": {
          "type": "integer",
          "description": "Only used in combination with unit type 'LABEL'",
          "format": "int32"
        }
      }
    },
    "SalesOrderStatus": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "PENDING",
        "ACCEPTED",
        "REJECTED",
        "COMMITTED",
        "UNFULFILLABLE",
        "CANCELLED",
        "EXPIRED"
      ],
      "enum": [
        "PENDING",
        "ACCEPTED",
        "REJECTED",
        "COMMITTED",
        "UNFULFILLABLE",
        "CANCELLED",
        "EXPIRED"
      ]
    },
    "CreditClaimStatus": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "OK",
        "FAILED",
        "NOT_CHECKED",
        "RELEASED",
        "PLANNED",
        "EXPIRED"
      ],
      "enum": [
        "OK",
        "FAILED",
        "NOT_CHECKED",
        "RELEASED",
        "PLANNED",
        "EXPIRED"
      ]
    },
    "SalesOrderCalculatedFields": {
      "type": "object",
      "properties": {
        "totalPricePerPiece": {
          "$ref": "#/definitions/Price"
        },
        "orderAmount": {
          "$ref": "#/definitions/OrderAmount"
        }
      }
    },
    "OrderAmount": {
      "type": "object",
      "required": [
        "currency",
        "value"
      ],
      "properties": {
        "currency": {
          "$ref": "#/definitions/Currency"
        },
        "value": {
          "type": "number",
          "format": "decimal",
          "maximum": 1000000000000000000.0,
          "minimum": 0.0
        }
      }
    },
    "SalesOrderMutation": {
      "type": "object",
      "required": [
        "basedOnSalesOrderVersion",
        "oldValues",
        "newValues",
        "mutationType",
        "correctionType",
        "createdDateTime"
      ],
      "properties": {
        "basedOnSalesOrderVersion": {
          "type": "integer",
          "format": "int32"
        },
        "salesOrderCorrectionRequestId": {
          "type": "string",
          "format": "uuid"
        },
        "salesOrderCorrectionRequestReason": {
          "type": "string",
          "maxLength": 1000
        },
        "oldValues": {
          "$ref": "#/definitions/SalesOrderMutables"
        },
        "newValues": {
          "$ref": "#/definitions/SalesOrderMutables"
        },
        "mutationType": {
          "$ref": "#/definitions/SalesOrderMutationUpdateType"
        },
        "correctionType": {
          "$ref": "#/definitions/SalesOrderMutationCorrectionType"
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        }
      }
    },
    "SalesOrderMutables": {
      "type": "object",
      "required": [
        "numberOfPieces",
        "piecesPerPackage",
        "vbnPackageCode",
        "pricePerPiece",
        "deliveryPricePerPiece",
        "totalPricePerPiece"
      ],
      "properties": {
        "customPackageId": {
          "type": "string",
          "format": "uuid"
        },
        "incoterm": {
          "description": "Incoterm is null only in corrections made before the second quarter of 2023",
          "allOf": [
            {
              "$ref": "#/definitions/Incoterm"
            }
          ]
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32"
        },
        "piecesPerPackage": {
          "type": "integer",
          "format": "int32"
        },
        "vbnPackageCode": {
          "type": "integer",
          "format": "int32",
          "maximum": 999.0,
          "minimum": 1.0
        },
        "pricePerPiece": {
          "type": "number",
          "format": "decimal"
        },
        "deliveryPricePerPiece": {
          "type": "number",
          "format": "decimal"
        },
        "totalPricePerPiece": {
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "SalesOrderMutationUpdateType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "UNKNOWN",
        "PRICE_UPDATE",
        "CORRECTION_REQUEST",
        "WITHDRAWN_BY_CUSTOMER"
      ],
      "enum": [
        "UNKNOWN",
        "PRICE_UPDATE",
        "CORRECTION_REQUEST",
        "WITHDRAWN_BY_CUSTOMER"
      ]
    },
    "SalesOrderMutationCorrectionType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "UNKNOWN",
        "MODIFICATION",
        "CANCELLATION"
      ],
      "enum": [
        "UNKNOWN",
        "MODIFICATION",
        "CANCELLATION"
      ]
    },
    "TradeInstrumentFilter": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "CLOCK_PRESALES",
        "CLOCK_SALES",
        "CONTRACT",
        "DIRECT_SALES",
        "BID_OFFER",
        "CLOCK_SALES_FROM_NURSERY"
      ],
      "enum": [
        "CLOCK_PRESALES",
        "CLOCK_SALES",
        "CONTRACT",
        "DIRECT_SALES",
        "BID_OFFER",
        "CLOCK_SALES_FROM_NURSERY"
      ]
    },
    "SyncResultOfSalesOrder": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesOrder"
          }
        }
      }
    },
    "SalesOrderVersion": {
      "type": "object",
      "required": [
        "salesOrderId",
        "supplierOrganizationId",
        "customerOrganizationId",
        "tradeItemId",
        "salesChannel",
        "numberOfPieces",
        "tradeInstrument",
        "packingConfiguration",
        "orderDateTime",
        "pricePerPiece",
        "delivery",
        "sequenceNumber"
      ],
      "properties": {
        "salesOrderId": {
          "type": "string",
          "format": "uuid"
        },
        "salesChannelOrderId": {
          "type": "string",
          "maxLength": 13
        },
        "customerOrderId": {
          "type": "string",
          "maxLength": 26
        },
        "supplierOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "customerOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "supplyLineId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "salesChannel": {
          "$ref": "#/definitions/SalesChannel"
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32"
        },
        "tradeInstrument": {
          "$ref": "#/definitions/TradeInstrument"
        },
        "packingConfiguration": {
          "$ref": "#/definitions/SalesOrderPackingConfiguration"
        },
        "orderDateTime": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        },
        "pricePerPiece": {
          "$ref": "#/definitions/Price"
        },
        "delivery": {
          "$ref": "#/definitions/SalesOrderDelivery"
        },
        "additionalServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderedAdditionalService"
          }
        },
        "cancellationDeadline": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/SalesOrderStatus"
        },
        "creditClaimStatus": {
          "$ref": "#/definitions/CreditClaimStatus"
        },
        "creditClaimExpirationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "tradeItemVersion": {
          "type": "integer",
          "format": "int32"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "contractId": {
          "type": "string",
          "format": "uuid"
        },
        "blanketOrderLineId": {
          "type": "string",
          "format": "uuid"
        },
        "calculatedFields": {
          "$ref": "#/definitions/SalesOrderCalculatedFields"
        },
        "paymentProvider": {
          "$ref": "#/definitions/PaymentProvider"
        },
        "deliveryRemarks": {
          "type": "string",
          "maxLength": 255
        },
        "deliveryPricePerPiece": {
          "$ref": "#/definitions/Price"
        },
        "despatchWarehouseId": {
          "type": "string",
          "format": "uuid"
        },
        "creationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createdBySupplier": {
          "type": "boolean"
        }
      }
    },
    "SalesOrderRequest": {
      "type": "object",
      "required": [
        "salesOrderId",
        "customerOrganizationId",
        "supplyLineId",
        "numberOfPieces",
        "pricePerPiece",
        "packingConfiguration",
        "orderDateTime",
        "delivery",
        "paymentProvider"
      ],
      "properties": {
        "salesOrderId": {
          "type": "string",
          "format": "uuid"
        },
        "customerOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "supplyLineId": {
          "type": "string",
          "format": "uuid"
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "pricePerPiece": {
          "$ref": "#/definitions/AddPrice"
        },
        "customerOrderId": {
          "type": "string",
          "maxLength": 26
        },
        "createdByUser": {
          "type": "string",
          "description": "Used to associate an existing Floriday account with the created sales order. The user will be shown within the Floriday portal as the created user.",
          "maxLength": 60
        },
        "packingConfiguration": {
          "$ref": "#/definitions/SalesOrderPackingConfigurationCreate"
        },
        "orderDateTime": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        },
        "delivery": {
          "$ref": "#/definitions/AddSalesOrderDelivery"
        },
        "additionalServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderAdditionalService"
          }
        },
        "sendEkt": {
          "type": "boolean"
        },
        "paymentProvider": {
          "$ref": "#/definitions/PaymentProviderCreate"
        },
        "deliveryRemarks": {
          "type": "string",
          "maxLength": 255
        }
      }
    },
    "AddPrice": {
      "type": "object",
      "required": [
        "currency",
        "value"
      ],
      "properties": {
        "currency": {
          "$ref": "#/definitions/Currency"
        },
        "value": {
          "type": "number",
          "format": "decimal",
          "maximum": 10000000000000000.0,
          "minimum": 0.001
        }
      }
    },
    "SalesOrderPackingConfigurationCreate": {
      "type": "object",
      "required": [
        "piecesPerPackage",
        "package",
        "loadCarrier",
        "packagesPerLayer",
        "layersPerLoadCarrier"
      ],
      "properties": {
        "piecesPerPackage": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 1.0
        },
        "package": {
          "$ref": "#/definitions/Package"
        },
        "loadCarrier": {
          "$ref": "#/definitions/LoadCarrierType"
        },
        "additionalPricePerPiece": {
          "$ref": "#/definitions/Price"
        },
        "photoUrl": {
          "type": "string",
          "description": "Image URLs posted as Floriday media must conform with the following format https://image.floriday.io/.",
          "maxLength": 255
        },
        "packagesPerLayer": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 1.0
        },
        "layersPerLoadCarrier": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 1.0
        }
      }
    },
    "AddSalesOrderDelivery": {
      "type": "object",
      "required": [
        "latestDeliveryDateTime",
        "location"
      ],
      "properties": {
        "deliveryConditionId": {
          "type": "string",
          "format": "uuid"
        },
        "latestDeliveryDateTime": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        },
        "regionGln": {
          "type": "string",
          "maxLength": 13,
          "minLength": 13
        },
        "location": {
          "$ref": "#/definitions/AddLocation"
        },
        "incoterm": {
          "$ref": "#/definitions/Incoterm"
        },
        "nextLegIdentifier": {
          "type": "string",
          "maxLength": 13
        }
      }
    },
    "AddLocation": {
      "type": "object",
      "required": [
        "gln"
      ],
      "properties": {
        "gln": {
          "type": "string",
          "maxLength": 13,
          "minLength": 13
        }
      }
    },
    "OrderAdditionalService": {
      "type": "object",
      "required": [
        "additionalServiceId",
        "price"
      ],
      "properties": {
        "additionalServiceId": {
          "type": "string",
          "format": "uuid"
        },
        "price": {
          "$ref": "#/definitions/Price"
        }
      }
    },
    "SalesOrderExternalIntegrationRequest": {
      "type": "object",
      "required": [
        "salesOrderId",
        "customerOrganizationId",
        "tradeItemId",
        "despatchWarehouseId",
        "numberOfPieces",
        "pricePerPiece",
        "packingConfiguration",
        "delivery",
        "paymentProvider",
        "includedServices"
      ],
      "properties": {
        "salesOrderId": {
          "type": "string",
          "format": "uuid"
        },
        "customerOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "despatchWarehouseId": {
          "type": "string",
          "format": "uuid"
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "pricePerPiece": {
          "$ref": "#/definitions/AddPrice"
        },
        "customerOrderId": {
          "type": "string",
          "maxLength": 26
        },
        "createdByUser": {
          "type": "string",
          "description": "Used to associate an existing Floriday account with the created sales order. The user will be shown within the Floriday portal as the created user.",
          "maxLength": 60
        },
        "packingConfiguration": {
          "$ref": "#/definitions/SalesOrderPackingConfigurationCreate"
        },
        "delivery": {
          "$ref": "#/definitions/AddSalesOrderDelivery"
        },
        "additionalServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderAdditionalService"
          }
        },
        "sendEkt": {
          "type": "boolean"
        },
        "paymentProvider": {
          "$ref": "#/definitions/PaymentProviderCreate"
        },
        "deliveryRemarks": {
          "type": "string",
          "maxLength": 255
        },
        "includedServices": {
          "type": "array",
          "description": "Does not support the commercial service type 'DELIVERY'",
          "maxItems": 1,
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/CommercialService"
          }
        }
      }
    },
    "SupplyRequest": {
      "type": "object",
      "required": [
        "supplyRequestId",
        "customerOrganizationId",
        "salesChannel",
        "orderPeriod",
        "deliveryPeriod",
        "expiresAtDateTime",
        "creationDateTime",
        "lastModifiedDateTime",
        "isDeleted",
        "sequenceNumber",
        "commercialServices",
        "supplyRequestLines"
      ],
      "properties": {
        "supplyRequestId": {
          "type": "string",
          "format": "uuid"
        },
        "customerOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string",
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "maxLength": 4000
        },
        "quantityDescription": {
          "type": "string",
          "maxLength": 255
        },
        "salesChannel": {
          "type": "string"
        },
        "orderPeriod": {
          "$ref": "#/definitions/TradePeriod"
        },
        "deliveryPeriod": {
          "$ref": "#/definitions/TradePeriod"
        },
        "agreementReference": {
          "$ref": "#/definitions/AgreementReference"
        },
        "expiresAtDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "creationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "commercialServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommercialService"
          }
        },
        "supplyRequestLines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplyRequestLine"
          }
        }
      }
    },
    "SupplyRequestLine": {
      "type": "object",
      "required": [
        "supplyRequestLineId",
        "supplierOrganizationId",
        "price",
        "status",
        "creationDateTime",
        "lastModifiedDateTime",
        "isLockedByCustomer",
        "isDeleted"
      ],
      "properties": {
        "supplyRequestLineId": {
          "type": "string",
          "format": "uuid"
        },
        "supplierOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemRequestId": {
          "type": "string",
          "format": "uuid"
        },
        "packingConfigurationRequestId": {
          "type": "string",
          "format": "uuid"
        },
        "price": {
          "$ref": "#/definitions/Price"
        },
        "status": {
          "$ref": "#/definitions/RequestStatus"
        },
        "packingConfiguration": {
          "$ref": "#/definitions/RequestPackingConfiguration"
        },
        "acceptedAtDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "creationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "isLockedByCustomer": {
          "type": "boolean"
        },
        "supplyLineId": {
          "type": "string",
          "format": "uuid"
        },
        "rejectionReason": {
          "type": "string",
          "maxLength": 255
        },
        "isDeleted": {
          "type": "boolean"
        }
      }
    },
    "RequestPackingConfiguration": {
      "type": "object",
      "required": [
        "piecesPerPackage",
        "package",
        "packagesPerLayer",
        "layersPerLoadCarrier",
        "loadCarrier"
      ],
      "properties": {
        "piecesPerPackage": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 1.0
        },
        "package": {
          "$ref": "#/definitions/Package"
        },
        "packagesPerLayer": {
          "type": "integer",
          "format": "int32"
        },
        "layersPerLoadCarrier": {
          "type": "integer",
          "format": "int32"
        },
        "loadCarrier": {
          "$ref": "#/definitions/SupplyLoadCarrierType"
        }
      }
    },
    "SyncResultOfSupplyRequest": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplyRequest"
          }
        }
      }
    },
    "AcceptSupplyRequestLine": {
      "type": "object",
      "required": [
        "pricePerPiece",
        "numberOfPieces",
        "orderPeriod",
        "deliveryPeriod",
        "despatchWarehouseId",
        "usesCatalogAvailability"
      ],
      "properties": {
        "pricePerPiece": {
          "type": "number",
          "format": "decimal"
        },
        "numberOfPieces": {
          "type": "integer",
          "format": "int32"
        },
        "orderPeriod": {
          "$ref": "#/definitions/TradePeriod"
        },
        "deliveryPeriod": {
          "$ref": "#/definitions/TradePeriod"
        },
        "despatchWarehouseId": {
          "type": "string",
          "format": "uuid"
        },
        "usesCatalogAvailability": {
          "type": "boolean"
        }
      }
    },
    "TradeItemRequest": {
      "type": "object",
      "required": [
        "tradeItemRequestId",
        "supplierOrganizationId",
        "customerOrganizationId",
        "status",
        "sequenceNumber",
        "vbnProductCode",
        "packingConfiguration",
        "characteristics",
        "expiresAtDateTime",
        "creationDateTime",
        "lastModifiedDateTime"
      ],
      "properties": {
        "tradeItemRequestId": {
          "type": "string",
          "format": "uuid"
        },
        "supplierOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "customerOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "status": {
          "$ref": "#/definitions/RequestStatus"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "vbnProductCode": {
          "type": "integer",
          "format": "int32"
        },
        "remark": {
          "type": "string",
          "maxLength": 500
        },
        "packingConfiguration": {
          "$ref": "#/definitions/RequestPackingConfiguration"
        },
        "characteristics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          }
        },
        "expiresAtDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "creationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Characteristic": {
      "type": "object",
      "required": [
        "vbnCode",
        "vbnValueCode"
      ],
      "properties": {
        "vbnCode": {
          "type": "string",
          "maxLength": 3,
          "minLength": 1
        },
        "vbnValueCode": {
          "type": "string",
          "maxLength": 3,
          "minLength": 1
        }
      }
    },
    "SyncResultOfTradeItemRequest": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeItemRequest"
          }
        }
      }
    },
    "TradeItem": {
      "type": "object",
      "required": [
        "tradeItemId",
        "supplierArticleCode",
        "vbnProductCode",
        "tradeItemName",
        "characteristics",
        "photos",
        "packingConfigurations",
        "isHiddenInCatalog",
        "sequenceNumber",
        "creationDateTime",
        "lastModifiedDateTime",
        "hasInvalidFloricodeData"
      ],
      "properties": {
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "supplierArticleCode": {
          "type": "string",
          "maxLength": 13,
          "minLength": 1
        },
        "articleGtin": {
          "type": "string",
          "maxLength": 13,
          "minLength": 13
        },
        "vbnProductCode": {
          "type": "integer",
          "format": "int32"
        },
        "tradeItemName": {
          "$ref": "#/definitions/TradeItemName"
        },
        "characteristics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          }
        },
        "customerOrganizationIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "seasonalPeriods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SeasonalPeriod"
          }
        },
        "photos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Photo"
          }
        },
        "packingConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PackingConfiguration"
          }
        },
        "botanicalNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "countryOfOriginIsoCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isHiddenInCatalog": {
          "type": "boolean"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "isParentForVariant": {
          "type": "boolean"
        },
        "parentId": {
          "type": "string",
          "format": "uuid"
        },
        "tradeItemComponents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeItemComponent"
          }
        },
        "tradeItemReference": {
          "type": "string",
          "maxLength": 13,
          "minLength": 13
        },
        "tradeItemVersion": {
          "type": "integer",
          "format": "int32"
        },
        "creationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "hasInvalidFloricodeData": {
          "type": "boolean"
        }
      }
    },
    "TradeItemName": {
      "type": "object",
      "required": [
        "nl"
      ],
      "properties": {
        "nl": {
          "type": "string",
          "maxLength": 120,
          "minLength": 1
        }
      }
    },
    "Photo": {
      "type": "object",
      "required": [
        "primary",
        "url",
        "type"
      ],
      "properties": {
        "primary": {
          "type": "boolean"
        },
        "url": {
          "type": "string",
          "description": "Image URLs posted as Floriday media must conform with the following format https://image.floriday.io/.",
          "maxLength": 255,
          "minLength": 1
        },
        "seasonalPeriod": {
          "$ref": "#/definitions/SeasonalPeriod"
        },
        "type": {
          "$ref": "#/definitions/PhotoType"
        }
      }
    },
    "PhotoType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "UNKNOWN",
        "PIECE",
        "TRAY",
        "DETAIL",
        "RULER",
        "WEBSHOPFRIENDLY",
        "SCENE",
        "SEASON",
        "STEM",
        "BUNCH",
        "CONTAINER",
        "CLOCK"
      ],
      "enum": [
        "UNKNOWN",
        "PIECE",
        "TRAY",
        "DETAIL",
        "RULER",
        "WEBSHOPFRIENDLY",
        "SCENE",
        "SEASON",
        "STEM",
        "BUNCH",
        "CONTAINER",
        "CLOCK"
      ]
    },
    "TradeItemComponent": {
      "type": "object",
      "required": [
        "baseItemId",
        "numberOfItems"
      ],
      "properties": {
        "baseItemId": {
          "type": "string",
          "format": "uuid"
        },
        "numberOfItems": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        }
      }
    },
    "SyncResultOfTradeItem": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeItem"
          }
        }
      }
    },
    "TradeItemBase": {
      "type": "object",
      "required": [
        "tradeItemId",
        "supplierArticleCode",
        "vbnProductCode",
        "tradeItemName",
        "characteristics",
        "photos",
        "packingConfigurations",
        "isHiddenInCatalog"
      ],
      "properties": {
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "supplierArticleCode": {
          "type": "string",
          "description": "Supplier article code cannot contain leading, trailing or duplicate whitespaces.",
          "maxLength": 13,
          "minLength": 1
        },
        "articleGtin": {
          "type": "string",
          "maxLength": 13,
          "minLength": 13
        },
        "vbnProductCode": {
          "type": "integer",
          "format": "int32"
        },
        "tradeItemName": {
          "description": "Trade item name cannot contain leading, trailing or duplicate whitespaces.",
          "allOf": [
            {
              "$ref": "#/definitions/TradeItemName"
            }
          ]
        },
        "characteristics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          }
        },
        "customerOrganizationIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "seasonalPeriods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SeasonalPeriod"
          }
        },
        "photos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Photo"
          }
        },
        "packingConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PackingConfiguration"
          }
        },
        "botanicalNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "countryOfOriginIsoCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isHiddenInCatalog": {
          "type": "boolean"
        },
        "tradeItemComponents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeItemComponent"
          }
        }
      }
    },
    "TradeItemUpdate": {
      "type": "object",
      "required": [
        "tradeItemName",
        "characteristics",
        "photos",
        "packingConfigurations",
        "isHiddenInCatalog"
      ],
      "properties": {
        "articleGtin": {
          "type": "string",
          "maxLength": 13
        },
        "vbnProductCode": {
          "type": "integer",
          "format": "int32"
        },
        "tradeItemName": {
          "$ref": "#/definitions/TradeItemName"
        },
        "characteristics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          }
        },
        "customerOrganizationIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "seasonalPeriods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SeasonalPeriod"
          }
        },
        "photos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Photo"
          }
        },
        "packingConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PackingConfiguration"
          }
        },
        "botanicalNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "countryOfOriginIsoCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isHiddenInCatalog": {
          "type": "boolean"
        },
        "tradeItemComponents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradeItemComponent"
          }
        }
      }
    },
    "TradeItemSummary": {
      "type": "object",
      "required": [
        "tradeItemId",
        "supplierArticleCode",
        "vbnProductCode",
        "tradeItemName",
        "characteristics",
        "photos",
        "isCustomerSpecific",
        "supplierOrganizationId",
        "isDeleted"
      ],
      "properties": {
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "supplierArticleCode": {
          "type": "string",
          "maxLength": 13,
          "minLength": 1
        },
        "vbnProductCode": {
          "type": "integer",
          "format": "int32"
        },
        "tradeItemName": {
          "$ref": "#/definitions/TradeItemName"
        },
        "characteristics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          }
        },
        "photos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Photo"
          }
        },
        "isCustomerSpecific": {
          "type": "boolean"
        },
        "supplierOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "parentId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TradeItemVariant": {
      "type": "object",
      "required": [
        "tradeItemId",
        "characteristics",
        "parentId"
      ],
      "properties": {
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "characteristics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          }
        },
        "countryOfOriginIsoCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parentId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TradeItemVariantUpdate": {
      "type": "object",
      "required": [
        "characteristics"
      ],
      "properties": {
        "characteristics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          }
        },
        "countryOfOriginIsoCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SupplierTradeSettings": {
      "type": "object",
      "required": [
        "supplierOrganizationId",
        "automaticallyAcceptsCorrectionRequests",
        "usesCancellationGracePeriodIfMinimumQuantityIsNotMet",
        "usesContracts",
        "usesCustomerStickers",
        "acceptsOrderRequests",
        "acceptsSupplyRequests",
        "acceptsTradeItemRequests",
        "acceptsPackingConfigurationRequests"
      ],
      "properties": {
        "supplierOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "automaticallyAcceptsCorrectionRequests": {
          "description": "With this you set that corrections requested by customers are automatically accepted.",
          "allOf": [
            {
              "$ref": "#/definitions/TradeSetting"
            }
          ]
        },
        "usesCancellationGracePeriodIfMinimumQuantityIsNotMet": {
          "description": "Orders that do not meet the minimum delivery quantity are automatically canceled. If the setting is off, these orders can be manually approved for another hour after the last order moment.",
          "allOf": [
            {
              "$ref": "#/definitions/TradeSetting"
            }
          ]
        },
        "usesContracts": {
          "description": "Organization works with contracts.",
          "allOf": [
            {
              "$ref": "#/definitions/TradeSetting"
            }
          ]
        },
        "usesCustomerStickers": {
          "description": "Organization works with stickers.",
          "allOf": [
            {
              "$ref": "#/definitions/TradeSetting"
            }
          ]
        },
        "acceptsOrderRequests": {
          "description": "Receive order requests from customers.",
          "allOf": [
            {
              "$ref": "#/definitions/TradeSetting"
            }
          ]
        },
        "acceptsSupplyRequests": {
          "description": "Organization works with supply requests.",
          "allOf": [
            {
              "$ref": "#/definitions/TradeSetting"
            }
          ]
        },
        "acceptsTradeItemRequests": {
          "description": "Organization works with trade item requests.",
          "allOf": [
            {
              "$ref": "#/definitions/TradeSetting"
            }
          ]
        },
        "acceptsPackingConfigurationRequests": {
          "description": "Organization works with packing configuration requests.",
          "allOf": [
            {
              "$ref": "#/definitions/TradeSetting"
            }
          ]
        }
      }
    },
    "TradeSetting": {
      "type": "object",
      "required": [
        "isActive",
        "exemptedOrganizationIds"
      ],
      "properties": {
        "isActive": {
          "type": "boolean"
        },
        "exemptedOrganizationIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SyncResultOfCustomerTradeSettings": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerTradeSettings"
          }
        }
      }
    },
    "CustomerTradeSettings": {
      "type": "object",
      "required": [
        "customerOrganizationId",
        "acceptsDirectOrders",
        "automaticallyAcceptsCorrectionRequestsOnDirectOrders",
        "automaticallyAcceptsCorrectionRequestsOnSupplyOrders",
        "allowSuppliersToManageSelectedTradeItemAssortment",
        "acceptsSupplyOfTypePurchaseTip",
        "usesContracts",
        "acceptsTransportCost",
        "sequenceNumber"
      ],
      "properties": {
        "customerOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "acceptsDirectOrders": {
          "description": "As a customer, you set whether suppliers are allowed to create orders manually.",
          "allOf": [
            {
              "$ref": "#/definitions/TradeSetting"
            }
          ]
        },
        "automaticallyAcceptsCorrectionRequestsOnDirectOrders": {
          "description": "With this you set that corrections requested by suppliers on orders that the supplier has created are automatically accepted.",
          "allOf": [
            {
              "$ref": "#/definitions/TradeSetting"
            }
          ]
        },
        "automaticallyAcceptsCorrectionRequestsOnSupplyOrders": {
          "description": "With this you set that corrections requested by suppliers on orders placed by you as a customer are automatically accepted.",
          "allOf": [
            {
              "$ref": "#/definitions/TradeSetting"
            }
          ]
        },
        "allowSuppliersToManageSelectedTradeItemAssortment": {
          "description": "Determine whether suppliers may add trade items to my selected assortment.",
          "allOf": [
            {
              "$ref": "#/definitions/TradeSetting"
            }
          ]
        },
        "acceptsSupplyOfTypePurchaseTip": {
          "description": "Organization works with purchase tips.",
          "allOf": [
            {
              "$ref": "#/definitions/TradeSetting"
            }
          ]
        },
        "usesContracts": {
          "description": "Organization works with contracts.",
          "allOf": [
            {
              "$ref": "#/definitions/TradeSetting"
            }
          ]
        },
        "acceptsTransportCost": {
          "description": "Organization works with transport costs. Please note: when deactivating this setting, orders can only be placed on supply where transport costs are included in the price.",
          "allOf": [
            {
              "$ref": "#/definitions/TradeSetting"
            }
          ]
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SyncResultOfFulfillmentOrderInbound": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FulfillmentOrderInbound"
          }
        }
      }
    },
    "FulfillmentOrderInbound": {
      "type": "object",
      "required": [
        "fulfillmentOrderId",
        "latestDeliveryDateTime",
        "destination",
        "despatchWarehouseId",
        "loadCarriers",
        "deliveryNoteCodes",
        "supplierOrganizationId",
        "status",
        "sequenceNumber",
        "creationDateTime",
        "lastModifiedDateTime"
      ],
      "properties": {
        "fulfillmentOrderId": {
          "type": "string",
          "format": "uuid"
        },
        "carrierOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "latestDeliveryDateTime": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        },
        "destination": {
          "$ref": "#/definitions/Destination"
        },
        "despatchWarehouseId": {
          "type": "string",
          "format": "uuid"
        },
        "loadCarriers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoadCarrierConfigurationInbound"
          }
        },
        "deliveryNoteCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supplierOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "status": {
          "$ref": "#/definitions/FulfillmentStatus"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "creationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "LoadCarrierConfigurationInbound": {
      "type": "object",
      "required": [
        "loadCarrierItems",
        "loadCarrierType",
        "numberOfAdditionalLayers",
        "deliveryNoteCodes",
        "sortIndex"
      ],
      "properties": {
        "loadCarrierItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoadCarrierItemInbound"
          }
        },
        "loadCarrierType": {
          "$ref": "#/definitions/LoadCarrierType"
        },
        "numberOfAdditionalLayers": {
          "type": "integer",
          "format": "int32"
        },
        "documentReference": {
          "type": "string",
          "maxLength": 18
        },
        "deliveryNoteCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sortIndex": {
          "type": "integer",
          "description": "Used to determine the position of the load carrier within the shipment. Duplicate numbers will yield indeterministic sequencing.",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 0.0
        },
        "loadCarrierReference": {
          "type": "string",
          "description": "When present, uniquely references a load carrier within a collection of load carrier configurations; Appears on a PAB.",
          "maxLength": 14
        }
      }
    },
    "LoadCarrierItemInbound": {
      "type": "object",
      "required": [
        "batchId",
        "numberOfPackages",
        "tradeItemId"
      ],
      "properties": {
        "batchId": {
          "type": "string",
          "format": "uuid"
        },
        "numberOfPackages": {
          "type": "integer",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "serviceCode": {
          "type": "integer",
          "format": "int32",
          "maximum": 9999.0,
          "minimum": 0.0
        },
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "batchReference": {
          "type": "string",
          "maxLength": 8
        },
        "deliveryNoteCode": {
          "type": "string",
          "maxLength": 18
        },
        "deliveryNoteLetter": {
          "type": "string",
          "maxLength": 1
        },
        "sortIndex": {
          "type": "integer",
          "description": "The index related to the item's position on the loadcarrier",
          "format": "int32"
        },
        "deliveryRemarks": {
          "type": "string",
          "maxLength": 255
        }
      }
    },
    "GoodsReceipt": {
      "type": "object",
      "required": [
        "goodsReceiptId",
        "receiptDateTime"
      ],
      "properties": {
        "goodsReceiptId": {
          "type": "string",
          "format": "uuid"
        },
        "receiptDateTime": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        },
        "ssccCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Warehouse": {
      "type": "object",
      "required": [
        "warehouseId",
        "organizationId",
        "name",
        "location",
        "sequenceNumber"
      ],
      "properties": {
        "warehouseId": {
          "type": "string",
          "format": "uuid"
        },
        "organizationId": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string",
          "maxLength": 70
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WareHouseServiceType"
          }
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "creationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "isDeleted": {
          "type": "boolean"
        }
      }
    },
    "WareHouseServiceType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "EXTERNAL_STOCK",
        "AUCTION"
      ],
      "enum": [
        "EXTERNAL_STOCK",
        "AUCTION"
      ]
    },
    "SyncResultOfWarehouse": {
      "type": "object",
      "required": [
        "maximumSequenceNumber",
        "results"
      ],
      "properties": {
        "maximumSequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Warehouse"
          }
        }
      }
    },
    "Event": {
      "type": "object",
      "required": [
        "eventId",
        "eventType",
        "aggregateId",
        "aggregateType",
        "organizationId"
      ],
      "properties": {
        "eventId": {
          "type": "string",
          "format": "uuid"
        },
        "eventType": {
          "$ref": "#/definitions/EventType"
        },
        "aggregateId": {
          "type": "string",
          "format": "uuid"
        },
        "aggregateType": {
          "$ref": "#/definitions/AggregateType"
        },
        "organizationId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "EventType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "SALESORDER_ACCEPTED",
        "SALESORDER_COMMITTED",
        "SALESORDER_CANCELLED",
        "SALESORDER_CORRECTED"
      ],
      "enum": [
        "SALESORDER_ACCEPTED",
        "SALESORDER_COMMITTED",
        "SALESORDER_CANCELLED",
        "SALESORDER_CORRECTED"
      ]
    },
    "AggregateType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "SALESORDER",
        "BATCH",
        "DELIVERYORDER",
        "FULFILLMENTORDER"
      ],
      "enum": [
        "SALESORDER",
        "BATCH",
        "DELIVERYORDER",
        "FULFILLMENTORDER"
      ]
    },
    "WebhookSubscription": {
      "type": "object",
      "properties": {
        "callbackUrl": {
          "type": "string",
          "format": "uri"
        }
      }
    },
    "WeeklyBaseSupplyCounter": {
      "type": "object",
      "required": [
        "weeklyBaseSupplyCounterId",
        "initialNumberOfPieces",
        "claimedNumberOfPieces",
        "weeklyBaseSupplyCounterTemplate"
      ],
      "properties": {
        "weeklyBaseSupplyCounterId": {
          "type": "string",
          "format": "uuid"
        },
        "initialNumberOfPieces": {
          "type": "integer",
          "format": "int32"
        },
        "claimedNumberOfPieces": {
          "type": "integer",
          "format": "int32"
        },
        "weeklyBaseSupplyCounterTemplate": {
          "$ref": "#/definitions/WeeklyBaseSupplyCounterTemplate"
        }
      }
    },
    "WeeklyBaseSupplyCounterTemplate": {
      "type": "object",
      "required": [
        "weeklyBaseSupplyCounterTemplateId",
        "name",
        "defaultNumberOfPieces"
      ],
      "properties": {
        "weeklyBaseSupplyCounterTemplateId": {
          "type": "string",
          "format": "uuid",
          "minLength": 1
        },
        "name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 3
        },
        "defaultNumberOfPieces": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ClaimFromWeeklyBaseSupplyCounter": {
      "type": "object",
      "required": [
        "numberOfPieces"
      ],
      "properties": {
        "numberOfPieces": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "EditWeeklyBaseSupplyCounterTemplate": {
      "type": "object",
      "required": [
        "weeklyBaseSupplyCounterTemplateId",
        "name",
        "defaultNumberOfPieces"
      ],
      "properties": {
        "weeklyBaseSupplyCounterTemplateId": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 3
        },
        "defaultNumberOfPieces": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WeeklyBaseSupplyCounterTemplateToTradeItem": {
      "type": "object",
      "required": [
        "tradeItemId",
        "fromWeek",
        "fromYear"
      ],
      "properties": {
        "tradeItemId": {
          "type": "string",
          "format": "uuid"
        },
        "fromWeek": {
          "type": "integer",
          "format": "int32"
        },
        "fromYear": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WeeklySupplyLineCounter": {
      "type": "object",
      "required": [
        "weeklySupplyLineCounterId",
        "supplierOrganizationId",
        "initialNumberOfPieces",
        "claimedNumberOfPieces",
        "added"
      ],
      "properties": {
        "weeklySupplyLineCounterId": {
          "type": "string",
          "format": "uuid"
        },
        "supplierOrganizationId": {
          "type": "string",
          "format": "uuid"
        },
        "initialNumberOfPieces": {
          "type": "integer",
          "format": "int32"
        },
        "claimedNumberOfPieces": {
          "type": "integer",
          "format": "int32"
        },
        "added": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "WeeklySupplyLineCounterCreate": {
      "type": "object",
      "required": [
        "weeklySupplyLineCounterId",
        "initialNumberOfPieces"
      ],
      "properties": {
        "weeklySupplyLineCounterId": {
          "type": "string",
          "format": "uuid"
        },
        "initialNumberOfPieces": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "securityDefinitions": {
    "JWT Token": {
      "type": "apiKey",
      "description": "Copy this into the value field: Bearer {token}",
      "name": "Authorization",
      "in": "header"
    },
    "X-Api-Key": {
      "type": "apiKey",
      "description": "Copy the api-key into the value field",
      "name": "X-Api-Key",
      "in": "header"
    }
  }
}