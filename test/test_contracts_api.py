# coding: utf-8

"""
    Main - Floriday Suppliers API

    ÔªøEvery endpoint requires at least the `role:app` scope and the header `X-Api-Key` populated with your given API-key. Most endpoints also require an additional scope which is listed in their descriptions.  - üóù [Authorization server (staging)](https://idm.staging.floriday.io/oauth2/ausmw6b47z1BnlHkw0h7/.well-known/oauth-authorization-server) - üóù [Authorization server (live)](https://idm.floriday.io/oauth2/aus3testdcf2vyfs70i7/.well-known/oauth-authorization-server) - üìö [Documentation](https://developer.floriday.io/docs/welcome) - ‚ñ∂ [Coding screencast: getting started (NL)](https://www.youtube.com/watch?v=fdqzP7_Y_s8)  ---  _The current state of this version 2024v1 is **Main**._ * This version will be deprecated after October 2024. * This version will be removed after April 2025.  ---  üîó 2023v2: [Customers API](https://api.staging.floriday.io/customers-api-2023v2/swagger/index.html) | [Suppliers API](https://api.staging.floriday.io/suppliers-api-2023v2/swagger/index.html) üîó 2024v1: [Customers API](https://api.staging.floriday.io/customers-api-2024v1/swagger/index.html) | [Suppliers API](https://api.staging.floriday.io/suppliers-api-2024v1/swagger/index.html) üîó 2024v2: [Customers API](https://api.staging.floriday.io/customers-api-2024v2/swagger/index.html) | [Suppliers API](https://api.staging.floriday.io/suppliers-api-2024v2/swagger/index.html)   # noqa: E501

    OpenAPI spec version: 2024v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.contracts_api import ContractsApi  # noqa: E501
from swagger_client.rest import ApiException


class TestContractsApi(unittest.TestCase):
    """ContractsApi unit test stubs"""

    def setUp(self):
        self.api = ContractsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_contract(self):
        """Test case for add_contract

        contract:write - Creates a draft contract  # noqa: E501
        """
        pass

    def test_add_new_contract_version(self):
        """Test case for add_new_contract_version

        contract:write - Creates a new version for an existing contract  # noqa: E501
        """
        pass

    def test_approve_contract(self):
        """Test case for approve_contract

        contract:write - Sets the state of the contract to 'APPROVED' if already finalized by the customer.  # noqa: E501
        """
        pass

    def test_approve_contract_by_reference(self):
        """Test case for approve_contract_by_reference

        contract:write - Sets the state of the contract to 'APPROVED' if already finalized by the customer.  # noqa: E501
        """
        pass

    def test_approve_delete_contract(self):
        """Test case for approve_delete_contract

        contract:write - Approves contract delete request created by customer  # noqa: E501
        """
        pass

    def test_decline_contract(self):
        """Test case for decline_contract

        contract:write - Sets the state of the contract to 'DECLINED' if already finalized by the customer.  # noqa: E501
        """
        pass

    def test_decline_contract2(self):
        """Test case for decline_contract2

        contract:write - Sets the state of the contract to 'DECLINED' if already finalized by the customer.  # noqa: E501
        """
        pass

    def test_decline_delete_contract(self):
        """Test case for decline_delete_contract

        contract:write - Declines contract delete request created by customer  # noqa: E501
        """
        pass

    def test_edit_contract(self):
        """Test case for edit_contract

        contract:write - Updates a draft contract  # noqa: E501
        """
        pass

    def test_edit_contract_by_reference(self):
        """Test case for edit_contract_by_reference

        contract:write - Updates a draft contract  # noqa: E501
        """
        pass

    def test_finalize_contract(self):
        """Test case for finalize_contract

        contract:write - Sets the contract status to 'FINALIZED' and offers the contract to the customer for approval.  # noqa: E501
        """
        pass

    def test_finalize_contract_by_reference(self):
        """Test case for finalize_contract_by_reference

        contract:write - Sets the contract status to 'FINALIZED' and offers the contract to the customer for approval.  # noqa: E501
        """
        pass

    def test_get_contract_attachment_by_id(self):
        """Test case for get_contract_attachment_by_id

        contract:read - Returns a contract attachment.  # noqa: E501
        """
        pass

    def test_get_contract_by_id(self):
        """Test case for get_contract_by_id

        contract:read - Returns a contract.  # noqa: E501
        """
        pass

    def test_get_contracts_by_sequence_number(self):
        """Test case for get_contracts_by_sequence_number

        contract:read - rate limit: 3.4 per second - burst limit: 1000 - Returns a list of max 100 contracts starting from a specified sequence number.  # noqa: E501
        """
        pass

    def test_get_contracts_max_sequence(self):
        """Test case for get_contracts_max_sequence

        contract:read - rate limit: 3.4 per second - burst limit: 1000 - Returns the maximum sequence number found in contracts.  # noqa: E501
        """
        pass

    def test_request_delete_contract(self):
        """Test case for request_delete_contract

        contract:write - Deletes contract if contract is not yet approved. Requests delete by customer if already approved  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
