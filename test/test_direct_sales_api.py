# coding: utf-8

"""
    Main - Floriday Suppliers API

    ﻿Every endpoint requires at least the `role:app` scope and the header `X-Api-Key` populated with your given API-key. Most endpoints also require an additional scope which is listed in their descriptions.  - 🗝 [Authorization server (staging)](https://idm.staging.floriday.io/oauth2/ausmw6b47z1BnlHkw0h7/.well-known/oauth-authorization-server) - 🗝 [Authorization server (live)](https://idm.floriday.io/oauth2/aus3testdcf2vyfs70i7/.well-known/oauth-authorization-server) - 📚 [Documentation](https://developer.floriday.io/docs/welcome) - ▶ [Coding screencast: getting started (NL)](https://www.youtube.com/watch?v=fdqzP7_Y_s8)  ---  _The current state of this version 2024v1 is **Main**._ * This version will be deprecated after October 2024. * This version will be removed after April 2025.  ---  🔗 2023v2: [Customers API](https://api.staging.floriday.io/customers-api-2023v2/swagger/index.html) | [Suppliers API](https://api.staging.floriday.io/suppliers-api-2023v2/swagger/index.html) 🔗 2024v1: [Customers API](https://api.staging.floriday.io/customers-api-2024v1/swagger/index.html) | [Suppliers API](https://api.staging.floriday.io/suppliers-api-2024v1/swagger/index.html) 🔗 2024v2: [Customers API](https://api.staging.floriday.io/customers-api-2024v2/swagger/index.html) | [Suppliers API](https://api.staging.floriday.io/suppliers-api-2024v2/swagger/index.html)   # noqa: E501

    OpenAPI spec version: 2024v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import floriday_supplier_client
from floriday_supplier_client.api.direct_sales_api import DirectSalesApi  # noqa: E501
from floriday_supplier_client.rest import ApiException


class TestDirectSalesApi(unittest.TestCase):
    """DirectSalesApi unit test stubs"""

    def setUp(self):
        self.api = DirectSalesApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_supply_line(self):
        """Test case for add_supply_line

        supply:write - Create a supply line with type BATCH_PRICE  # noqa: E501
        """
        pass

    def test_delete_supply_line(self):
        """Test case for delete_supply_line

        supply:write - Delete a supply line  # noqa: E501
        """
        pass

    def test_edit_base_supply(self):
        """Test case for edit_base_supply

        supply:write - Set base supply for a batch. Supply lines will be generated based on pre-entered price groups.  # noqa: E501
        """
        pass

    def test_get_supply_line_by_id(self):
        """Test case for get_supply_line_by_id

        supply:read - Returns a supply line.  # noqa: E501
        """
        pass

    def test_get_supply_lines(self):
        """Test case for get_supply_lines

        supply:read - rate limit: 3.4 per second - burst limit: 1000 - Returns supply lines created within the given timeframe  # noqa: E501
        """
        pass

    def test_get_supply_lines_by_sequence_number(self):
        """Test case for get_supply_lines_by_sequence_number

        supply:read - rate limit: 3.4 per second - burst limit: 1000 - Returns a list of max 1000 supply lines starting from a specified sequence number.  # noqa: E501
        """
        pass

    def test_get_supply_lines_max_sequence(self):
        """Test case for get_supply_lines_max_sequence

        supply:read - rate limit: 3.4 per second - burst limit: 1000 - Returns the maximum sequence number found in supply lines.  # noqa: E501
        """
        pass

    def test_set_supply_line_price(self):
        """Test case for set_supply_line_price

        supply:write - Update the price of the supply line with type BATCH_PRICE.  # noqa: E501
        """
        pass

    def test_set_supply_line_status(self):
        """Test case for set_supply_line_status

        supply:write - Update the status of the supply line with type BATCH_PRICE.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
