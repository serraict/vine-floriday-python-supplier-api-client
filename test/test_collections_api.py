# coding: utf-8

"""
    Main - Floriday Suppliers API

    ÔªøEvery endpoint requires at least the `role:app` scope and the header `X-Api-Key` populated with your given API-key. Most endpoints also require an additional scope which is listed in their descriptions.  - üóù [Authorization server (staging)](https://idm.staging.floriday.io/oauth2/ausmw6b47z1BnlHkw0h7/.well-known/oauth-authorization-server) - üóù [Authorization server (live)](https://idm.floriday.io/oauth2/aus3testdcf2vyfs70i7/.well-known/oauth-authorization-server) - üìö [Documentation](https://developer.floriday.io/docs/welcome) - ‚ñ∂ [Coding screencast: getting started (NL)](https://www.youtube.com/watch?v=fdqzP7_Y_s8)  ---  _The current state of this version 2024v1 is **Main**._ * This version will be deprecated after October 2024. * This version will be removed after April 2025.  ---  üîó 2023v2: [Customers API](https://api.staging.floriday.io/customers-api-2023v2/swagger/index.html) | [Suppliers API](https://api.staging.floriday.io/suppliers-api-2023v2/swagger/index.html) üîó 2024v1: [Customers API](https://api.staging.floriday.io/customers-api-2024v1/swagger/index.html) | [Suppliers API](https://api.staging.floriday.io/suppliers-api-2024v1/swagger/index.html) üîó 2024v2: [Customers API](https://api.staging.floriday.io/customers-api-2024v2/swagger/index.html) | [Suppliers API](https://api.staging.floriday.io/suppliers-api-2024v2/swagger/index.html)   # noqa: E501

    OpenAPI spec version: 2024v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.collections_api import CollectionsApi  # noqa: E501
from swagger_client.rest import ApiException


class TestCollectionsApi(unittest.TestCase):
    """CollectionsApi unit test stubs"""

    def setUp(self):
        self.api = CollectionsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_collection(self):
        """Test case for add_collection

        catalog:write - Create a collection.  # noqa: E501
        """
        pass

    def test_add_trade_items_to_collection(self):
        """Test case for add_trade_items_to_collection

        catalog:write - Add trade items to collection.  # noqa: E501
        """
        pass

    def test_delete_collection(self):
        """Test case for delete_collection

        catalog:write - Delete a collection.  # noqa: E501
        """
        pass

    def test_delete_collection_trade_items(self):
        """Test case for delete_collection_trade_items

        catalog:write - Remove trade items from collection.  # noqa: E501
        """
        pass

    def test_edit_collection(self):
        """Test case for edit_collection

        catalog:write - Update a collection.  # noqa: E501
        """
        pass

    def test_get_collection_by_id(self):
        """Test case for get_collection_by_id

        catalog:read - Returns an collection.  # noqa: E501
        """
        pass

    def test_get_collections_by_sequence_number(self):
        """Test case for get_collections_by_sequence_number

        catalog:read - rate limit: 3.4 per second - burst limit: 1000 - Returns a list of max 1000 collections starting from a specified sequence number.  # noqa: E501
        """
        pass

    def test_get_collections_max_sequence(self):
        """Test case for get_collections_max_sequence

        catalog:read - rate limit: 3.4 per second - burst limit: 1000 - Returns the maximum sequence number found in collections.  # noqa: E501
        """
        pass

    def test_set_sort_order_for_collection(self):
        """Test case for set_sort_order_for_collection

        catalog:write - Set sort order for collection.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
