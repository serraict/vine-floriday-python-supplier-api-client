# coding: utf-8

"""
    Main - Floriday Suppliers API

    ﻿Every endpoint requires at least the `role:app` scope and the header `X-Api-Key` populated with your given API-key. Most endpoints also require an additional scope which is listed in their descriptions.  - 🗝 [Authorization server (staging)](https://idm.staging.floriday.io/oauth2/ausmw6b47z1BnlHkw0h7/.well-known/oauth-authorization-server) - 🗝 [Authorization server (live)](https://idm.floriday.io/oauth2/aus3testdcf2vyfs70i7/.well-known/oauth-authorization-server) - 📚 [Documentation](https://developer.floriday.io/docs/welcome) - ▶ [Coding screencast: getting started (NL)](https://www.youtube.com/watch?v=fdqzP7_Y_s8)  ---  _The current state of this version 2024v1 is **Main**._ * This version will be deprecated after October 2024. * This version will be removed after April 2025.  ---  🔗 2023v2: [Customers API](https://api.staging.floriday.io/customers-api-2023v2/swagger/index.html) | [Suppliers API](https://api.staging.floriday.io/suppliers-api-2023v2/swagger/index.html) 🔗 2024v1: [Customers API](https://api.staging.floriday.io/customers-api-2024v1/swagger/index.html) | [Suppliers API](https://api.staging.floriday.io/suppliers-api-2024v1/swagger/index.html) 🔗 2024v2: [Customers API](https://api.staging.floriday.io/customers-api-2024v2/swagger/index.html) | [Suppliers API](https://api.staging.floriday.io/suppliers-api-2024v2/swagger/index.html)   # noqa: E501

    OpenAPI spec version: 2024v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.sales_orders_api import SalesOrdersApi  # noqa: E501
from swagger_client.rest import ApiException


class TestSalesOrdersApi(unittest.TestCase):
    """SalesOrdersApi unit test stubs"""

    def setUp(self):
        self.api = SalesOrdersApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_sales_order(self):
        """Test case for add_sales_order

        sales-order:write - rate limit: 3.4 per second - burst limit: 1000 - Creates a new sales order.  # noqa: E501
        """
        pass

    def test_add_sales_order_external_integration(self):
        """Test case for add_sales_order_external_integration

        sales-order:write - rate limit: 3.4 per second - burst limit: 1000 - Creates a new sales order.  # noqa: E501
        """
        pass

    def test_get_sales_order_by_id(self):
        """Test case for get_sales_order_by_id

        sales-order:read - Returns a sales order.  # noqa: E501
        """
        pass

    def test_get_sales_order_by_id_and_version(self):
        """Test case for get_sales_order_by_id_and_version

        sales-order:read - Returns the sales order by ID and version.  # noqa: E501
        """
        pass

    def test_get_sales_orders(self):
        """Test case for get_sales_orders

        sales-order:read - rate limit: 3.4 per second - burst limit: 1000 - Returns sales orders.  # noqa: E501
        """
        pass

    def test_get_sales_orders_by_sequence_number(self):
        """Test case for get_sales_orders_by_sequence_number

        sales-order:read - rate limit: 3.4 per second - burst limit: 1000 - Returns a list of max 1000 sales orders starting from a specified sequence number.  # noqa: E501
        """
        pass

    def test_get_sales_orders_max_sequence(self):
        """Test case for get_sales_orders_max_sequence

        sales-order:read - Returns the maximum sequence number found in sales orders.  # noqa: E501
        """
        pass

    def test_set_sales_order_cancelled(self):
        """Test case for set_sales_order_cancelled

        sales-order:write - Cancel a sales order that is still in status ACCEPTED.  # noqa: E501
        """
        pass

    def test_set_sales_order_committed(self):
        """Test case for set_sales_order_committed

        sales-order:write - Commit a sales order that is still in status ACCEPTED.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
